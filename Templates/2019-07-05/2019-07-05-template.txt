select * from Photoz where objid=#
select * from PhotozRF where objid=#
select * from Field where fieldId=#
select * from Frame where fieldId=#
select * from PhotoObjAll where objId=#
select * from PhotoTag where objId=#
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select * from wise_xmatch x join wise_allsky a on x.wise_cntr=a.cntr where x.sdss_objid=#
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
select * from XCRedshift where specObjId=#
select description from DBObjects where name=&&&
select text from DBObjects where name=&&&
select * from fDocFunctionParams(&&&)
select * from stellarMassFSPSGranWideDust where specObjId=#
select * from SpecObjAll where specObjId=#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
select * from dbo.fDocColumns(&&&)
select * from sppLines where specObjId=#
select * from stellarMassPCAWiscBC0# where specObjId=#
select top #  S.ra as sdss_ra, S.dec as sdss_dec, W.ra as wise_ra, W.dec as wise_dec,  S.psfmag_r as r, W.w1mpro as w1 from wise_xmatch as X  join wise_allsky as W on X.wise_cntr = W.cntr  join photoTag as S on X.sdss_objid = S.objid where S.nchild = #
select * from stellarMassPCAWiscM1# where specObjId=#
select * from stellarMassStarformingPort where specObjId=#
select * from galSpecLine where specObjId=#
select * from stellarMassFSPSGranEarlyNoDust where specObjId=#
select * from SpecLine where specObjId=#
select * from SpecLineIndex where specObjId=#
select * from PhotoZ where objId=#
select * from galSpecInfo where specObjId=#
select * from ELRedshift where specObjId=#
select top # * from galaxy
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select * from galSpecIndx where specObjId=#
select * from stellarMassFSPSGranWideNoDust where specObjId=#
select description from DataConstants where field=&&&  and [name]=&&&
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
select * from emissionLinesPort where specObjId=#
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.param_m_h, a.param_m_h_err,  a.param_alpha_m, a.param_alpha_m_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target2 & (dbo.fApogeeTarget2(&&&)) != #)
SELECT TOP # emline.fiberid as fiberID, emline.ra, emline.dec,  emline.z as z_noqso, emline.zerr as z_noqso_err,  emline.sigmaStars as emline_vdisp, emline.sigmaStarsErr as emline_vdisp_err,  pca.vdisp_median as pca_vdisp, pca.vdisp_err as pca_vdisp_err,  sp.veldisp as sp_vdisp, sp.veldisperr as sp_vdisp_err  FROM emissionLinesPort AS emline  JOIN stellarMassPCAWisc AS pca ON emline.specobjid = pca.specobjid  JOIN specObj as sp ON emline.specobjid = sp.specobjid  WHERE emline.plate = # AND emline.mjd = # AND pca.warning=#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
select or (#,#)=(select*from(select name_const(CHAR(#,#,#,#,#,#,#,#,#),#),name_const(CHAR(#,#,#,#,#,#,#,#,#),#))a) -- and #=#
select
select AND #=#
select and #>#
select and #=#
select * from stellarMassFSPSGranEarlyDust where specObjId=#
select * from sppParams where specObjId=#
select * from stellarMassPassivePort where specObjId=#
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE p.u > # AND p.u < # AND s.zWarning = #
select distinct parent from DBViewCols where viewname=&&&
SELECT TOP #   r.run,   r.rerun,   f.camCol,   f.field,   p.objID,   p.ra,   p.dec,   p.modelMag_r,   f.psfWidth_r   FROM   PhotoTag AS p   JOIN Field AS f ON f.fieldid = p.fieldid   JOIN Run AS r ON f.run = r.run   WHERE mode=#   and f.psfWidth_r > #   and p.modelMag_r < #.   and r.stripe = #
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
SELECT p.objID,p.ra,p.dec,p.type,p.skyVersion,p.run,p.rerun,p.camcol,p.field,p.obj,p.mode,p.flags, s.specObjID,s.sourceType,s.targetType,s.class,s.subClass, z.p_el,z.p_cw,z.p_acw,z.p_edge,z.p_dk,z.p_mg,z.p_cs FROM PhotoObj AS p  JOIN SpecObjAll AS s ON s.bestobjid = p.objid  JOIN zooVotes as z ON z.objid=p.objid where p.type=# and p.mode=# and p.objID>#
select * from Photoz2 where objid=#
select name, description from DBObjects where access=&&& and type=&&& order by name
SELECT p.objid, p.type, p.clean, p.ra, p.dec, p.raErr, p.decErr, p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z, p.psfMagErr_u,p.psfMagErr_g,p.psfMagErr_r,p.psfMagErr_i,p.psfMagErr_z, p.petroR5#_u,p.petroR5#_g,p.petroR5#_r,p.petroR5#_i,p.petroR5#_z, p.psffwhm_u, p.psffwhm_g, p.psffwhm_r, p.psffwhm_i, p.psffwhm_z, p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z, p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, pz.z, pz.zErr FROM PhotoObj AS p , dbo.fGetNearbyObjEq(#, #, #) AS n LEFT JOIN Photoz AS pz ON pz.objID = n.objID WHERE n.objID = p.objID
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
SELECT star.apstar_id,  star.apogee_id, star.ra, star.dec, star.glon, star.glat,  star.apogee_target1, star.apogee_target2,   aspcap.teff,aspcap.logg,aspcap.param_m_h FROM apogeeStar star  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) near on  star.apstar_id=near.apstar_id  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.metals, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
SELECT p.objID,p.ra,p.dec,p.type,p.skyVersion,p.run,p.rerun,p.camcol,p.field,p.obj,p.mode,p.flags, s.specObjID,s.sourceType,s.targetType,s.class,s.subClass, z.p_el,z.p_cw,z.p_acw,z.p_edge,z.p_dk,z.p_mg,z.p_cs FROM PhotoObj AS p  JOIN SpecObjAll AS s ON s.bestobjid = p.objid  JOIN zooVotes as z ON z.objid=p.objid where p.type=# and p.mode=# and p.objID<=#
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Galaxy  WHERE  ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
select * from PhotoObj where objId=#
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
select name, description from DBObjects where access=&&& and name like &&& or name like &&& and name not like &&& order by name
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  mngtarg1 != # or mngtarg3 != #
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
SELECT TOP # objID, cModelMag_g   FROM Galaxy   WHERE   cModelMag_g between # and #
SELECT  TOP # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  TOP # p.apstar_id,     p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN aspcapStar a on a.apstar_id = p.apstar_id    WHERE ra BETWEEN # AND #    AND dec BETWEEN # AND #
SELECT DISTINCT survey, programname FROM platex ORDER BY survey
SELECT TOP # ra, dec, specobjid, plate, mjd, fiberid FROM specObj WHERE survey = &&& and programname = &&&
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  (((mngtarg1 & (power(#,#)+power(#,#))) != #)   and ((drp3qual & power(#,#)) = #))
SELECT top # so.bestobjid, so.specobjid, so.plate, so.mjd, so.fiberid,  sp.teffadop, sp.fehadop, sp.loggadop, sp.snr, sp.flag   FROM specobjall so  JOIN sppparams sp ON so.specobjid = sp.specobjid and so.sciencePrimary=#  WHERE sp.teffadop > # and sp.teffadop < #  and fehadop > # and fehadop < #  and loggadop > # and loggadop < #  and sp.flag like &&&  and sp.snr > #
SELECT TOP # objid,ra,dec,   flags,   flags
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  (((mngtarg1
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*#
SELECT top # objid, ra, dec, psfmag_i-extinction_i AS mag_i, psfmag_r-extinction_r AS mag_r, z  FROM SpecPhoto  WHERE   (class = &&&)
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
SELECT top #   run, rerun, camcol, field,   mjd_r as primary_mjd  FROM Field WHERE  mjd_r > #
SELECT TOP # G.ObjID, G.u, G.g, G.r, G.i, G.z   FROM Galaxy AS G   JOIN Star AS S   ON G.parentID = S.parentID   WHERE G.parentID > #
SELECT *
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT plate, mjd FROM apogeePlate WHERE location_id=# SELECT plate, mjd FROM apogeePlate WHERE name = &&&
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # specObjID
SELECT   TOP # RA, DEC, VAR_A, VAR_GAMMA, VAR_CHI2  FROM qsoVarPTF  WHERE qsoVarPTF.VAR_CHI2># AND qsoVarPTF.VAR_A>#
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.param_m_h, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec,  passive.z as z_noqso, passive.zerr as z_noqso_err,  passive.logmass as passive_logmass,  starforming.logmass as starforming_logmass,  pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive  JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid  JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
select top # ra,dec from Frame
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  ((mngtarg1 != # or mngtarg3 != #)  and (drp3qual < #)  and (ifudesignsize = #)  and (nsa_z > #)  and (nsa_elpetro_mass >#e1#))
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) = #   and petroMag_i > #   and (petroMag_r > # or petroR5#_r > #)   and (petroMag_r > # and g > # and r > # and i > #)   and ( (petroMag_r-extinction_r) < #   and (petroMag_r - extinction_r <   (# + (#/#) * (dered_g - dered_r) + # * (dered_r - dered_i)   - # * #) )   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > #)   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r)) < #) )   or ( (petroMag_r - extinction_r < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > (# - # *   (dered_g - dered_r)) )   and ( (dered_g - dered_r) > (# + # * (dered_r - dered_i)) ) )   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r) ) < # ) )
SELECT TOP #  cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec  FROM ..PhotoObj AS p  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON p.objID = b.objID
SELECT top #  visit.*, aspcap.teff, aspcap.logg, aspcap.metals FROM apogeeVisit visit  JOIN apogeeStarVisit starvisit on visit.visit_id = starvisit.visit_id  JOIN aspcapStar aspcap on aspcap.apstar_id = starvisit.apstar_id  JOIN apogeeStar star on star.apstar_id = starvisit.apstar_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.apogee_target1 & dbo.fApogeeTarget1(&&&)) > #  and star.nvisits > #  ORDER BY visit.apogee_id
SELECT TOP #  star.apogee_id, star.ra, star.dec, star.glon, star.glat,   star.vhelio_avg, star.vscatter,  obj.j, obj.h, obj.k, obj.ak_targ, obj.ak_targ_method, obj.ak_wise,  aspcap.teff, aspcap.logg, aspcap.metals FROM apogeeStar star  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id  JOIN apogeeObject obj on aspcap.target_id = obj.target_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.vhelio_avg > #) and (star.starflag &  dbo.fApogeeStarFlag(&&&)) = #  and star.nvisits > # order by aspcap.apogee_id
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  WHERE (p.i - p.z) > # AND (p.i - p.z) < # AND p.u > #
select * from zooNoSpec where objid=#
SELECT TOP # sp.objID,   sp.ra,   sp.dec,   sp.mjd,   px.taiBegin,   px.taiEnd,   sp.fiberID,   sp.z   FROM specPhoto AS sp   JOIN plateX AS px ON sp.plateID = px.plateID   WHERE   (sp.class=&&&)   AND sp.z > #
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( (flags & dbo.fPhotoFlags(&&&) = #)   and petroR5#_i > #)
SELECT TOP #
SELECT TOP #  objid,ra, dec,u,g, r,i, z,  run, rerun, camcol, field,  specobjid, class, z as redshift,  plate, mjd, fiberid FROM PhotoObj
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p
SELECT TOP #  cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  dbo.fIAUFromEq(p.ra,p.[dec]) as SDSSname  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
select u.*, p.objId, ltrim(str(p.ra,#,#)) as ra, ltrim(str(p.dec,#,#)) as dec, dbo.fPhotoTypeN(p.type) as type from #x x, #upload u, photoTag p  where u.up_id = x.up_id and x.objID=p.objID and p.mode=# order by x.up_id
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
select P.objid,P.ra,P.dec,P.petroMag_r,P.petroMagErr_r,P.deVRad_r,P.petroRad_r,P.deVPhi_r,P.deVAB_r,P.rowc_r,P.colc_r,P.run,P.rerun,P.camcol,P.field from PhotoObjAll P where P.objid = #
select * from zooSpec where objid=#
SELECT PhotoObjAll
SELECT TOP # P.ObjID
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = #
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff,a.logg, a.metals, a.alphafe,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = #   and a.teff > # and a.metals < #
select unhex(hex(version()))
SELECT TOP # and #>#
SELECT TOP #&&&x&&&x
SELECT TOP #&&&x&&&y
SELECT TOP # AND #=#
SELECT TOP # and #=#
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
select * from zooMonochromeBias where objid=#
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE (p.run=# AND p.camcol=# AND p.field=# AND p.rerun=#)
SELECT DISTINCT p.r FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.r FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE (s.plate=#)
SELECT DISTINCT p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE (p.run=# AND p.camcol=# AND p.field=# AND p.rerun=#)
SELECT DISTINCT s.instrument, s.run2d, s.plate, s.mjd, s.fiberID FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
select top # z, ra, dec, bestObjID from specObj where class = &&& and z > # and zWarning = #
SELECT DISTINCT s.instrument, s.run2d, s.plate, s.mjd, s.fiberID FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE (s.plate=# AND s.fiberid=#)
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
select * from zooMirrorBias where objid=#
INSERT INTO #upload values
select ra, dec from specObj
select * from weblogall2#_#_#h_to_#_#h where mm = # and dd = # and hh = #
select * from zoo2MainPhotoz where dr8objid=#
SELECT
select yy, mm, dd, hh, mi, ss  logID, clientIP, op, command, error, browser,  isvisible, referer, bytesOut, bytesIn, elapsed  into weblogall2#_#_#h_to_#_#h  from weblogall  where yy = # and mm between # and # and dd between # and # and hh between # and #
select count(*) as thecount
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
INSERT INTO #upload values
SELECT U.up_id, S.*  FROM #upLoad U CROSS APPLY (SELECT Objid FROM   dbo.fGetNearbyObjEq( U.up_ra ,U.up_dec ,U.up_sep )) S  SELECT TOP #   p.ra,p.dec, p.u,p.g,p.r,p.i,p.z,p.fiber2Mag_g,p.fiber2Mag_i,p.fiber2Mag_r,p.fiber2Mag_u,p.fiber2Mag_z  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
SELECT U.up_id, S.*  FROM #upLoad U CROSS APPLY (SELECT Objid FROM   dbo.fGetNearbyObjEq( U.up_ra ,U.up_dec ,U.up_sep )) S  SELECT TOP #   p.ra,p.dec, cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.u,p.g,p.r,p.i,p.z,p.fiber2Mag_g,p.fiber2Mag_i,p.fiber2Mag_r,p.fiber2Mag_u,p.fiber2Mag_z  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT TOP #   objID, ra, dec, modelMag_r, fiber2Mag_r FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*# & #)   < (# * #)  'A=#
SELECT s.specObjID as spec_id, dbo.fGetUrlFitsSpectrum(s.specObjId) as spec_url FROM PhotoObj AS p JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE p.ra BETWEEN # AND # AND p.dec BETWEEN # AND # AND p.type=# AND s.snMedian>#
SELECT dbo.fInFootprintEq( #, #, # )
select * from Photoz where objid=
select * from zoo2Stripe8#Coadd1 where dr8objid=#
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select * from apogeeStar where apstar_id=&&&
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
select BlockLot,  Neighborhood    , Lat=GeogCenter.Lat, Long=GeogCenter.Long, Str=GeogCenter.ToString()    , IsVacant, IsDemolished, IsMCC  from RealPropertiesExtra  where IsVacant = #
select BlockLot,  Neighborhood    , Lat=GeogCenter.Lat, Long=GeogCenter.Long, Str=GeogCenter.ToString()    , IsVacant, IsDemolished, IsMCC  from RealPropertiesExtra
SELECT class, count(*)  FROM SpecObj  GROUP BY class
SELECT TOP # survey, plate, mjd, fiberid, bestObjid,z FROM specObj WHERE class=&&& AND zWarning=# AND z>=# AND z<=# AND snMedian > # ORDER BY NEWID()
SELECT TOP # p.objid, p.ra, p.dec, ISNULL(s.specobjid,#) AS specobjid, ISNULL(s.z, #) AS z  FROM Galaxy AS p LEFT OUTER JOIN SpecObj s ON s.bestObjID = p.objID  WHERE  p.u BETWEEN # AND # AND p.g BETWEEN # AND #
select TOP #
select * from zoo2Stripe8#Normal where dr8objid=#
select *
select ra, dec from specObj where ra BETWEEN # and # AND dec BETWEEN # and #
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_r, type_r, psfMagErr_r FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # objid,ra,dec,   flags,   flags & # AS flags_lo,   (flags/power(cast(# as bigint),#)) & # AS flags_hi  FROM PhotoObj
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_i, type_i, psfMagErr_i FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_g, type_g, psfMagErr_g FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
select P.ra, P.dec, P.objID, P.u, P.err_u, P.g, P.err_g, P.r, P.err_r, P.i, P.err_i, P.z, P.err_z from PhotoPrimary as P, dbo.fGetNearbyObjEq(#, #, #) as N where P.objID=N.objID and P.type=# and P.r >= # and P.r <= #
SELECT p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, psfFlux_u, psfFlux_g, psfFlux_r, psfFlux_i, psfFlux_z, psfFluxIvar_u, psfFluxIvar_g, psfFluxIvar_r, psfFluxIvar_i, psfFluxIvar_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
SELECT TOP #   objID, ra, dec,   sqrt( power(rowv,#) + power(colv, #) ) as velocity   FROM PhotoObj   WHERE   (power(rowv,#) + power(colv, #)) > #   AND rowv != # and colv != #
SELECT top # objID, ra, dec, g, clean FROM PhotoObj WHERE CLEAN=#
select * from metadata.COLUMNS   order by table_name,ordinal_position
select * from metadata.COLUMNS
SELECT * FROM portsmuth_#
SELECT * FROM galBA_Ohs
select top # * from [galBA_Ohs]
select   mg.specObjID,  gse.oh_p5#, gse.lgm_tot_p5#, gse.sfr_tot_p5#, gse.sfr_fib_p5#, gse.specsfr_tot_p5#, gse.specsfr_fib_p5# into mydb.galBA_Ohs from MyDB.galBA mg, galSpecExtra gse where   mg.specObjID = gse.specObjID
select * from SDSSConstants
select   mg.specObjID,  gse.oh_p5#, gse.lgm_tot_p5#, gse.sfr_tot_p5#, gse.sfr_fib_p5#, gse.sfr_fib_p5#, gse.specsfr_fib_p5# into mydb.galBA_Ohs from MyDB.galBA mg, galSpecExtra gse where   mg.specObjID = gse.specObjID
select   mg.specObjID,  gse.oh_p5#, gse.lgm_tot_p5#, gse.sfr_tot_p5#, gse.sfr_fib_p5#, gse.sfr_fib_p5#, gse.specsfr_fib_p5# from   MyDB.galBA mg, galSpecExtra gse where   mg.specObjID = gse.specObjID
select distinct c.field, o.description  	from DataConstants c, DBObjects o 	where o.type=&&& and o.name = c.field
select * from DataConstants order by field, value
SELECT top # objID, ra, dec,  (CASE WHEN q.type IS NULL THEN &&& ELSE &&& END) AS found FROM PhotoObj AS p OUTER APPLY dbo.fFootprintEq(ra,dec,#) AS q WHERE (ra BETWEEN # AND #) AND (dec BETWEEN # AND #)
SELECT s.plate, s.fiberid, s.mjd, ga.Flux_OIII_#, ga.Flux_OIII_#_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.portsmuth_#  FROM emissionlinesport as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.Flux_OIII_# <#*ga.Flux_OIII_#_Err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.Flux_OIII_#_err > #   AND g.specobjid > #   AND sph.z > #
SELECT s.plate, s.fiberid, s.mjd, ga.Flux_OIII_#, ga.Flux_OIII_#_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.portsmuth_#  FROM emissionlinesport as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.Flux_OIII_# #*ga.Flux_OIII_#_Err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.Flux_OIII_#_err > #   AND g.specobjid > #   AND sph.z > #
SELECT TOP # t.thingid, t.ndetect, d.objid, p.psfMag_r, p.psfMagerr_r  FROM thingIndex AS t JOIN detectionindex AS d ON t.thingid = d.thingid JOIN Star AS p ON d.objid = p.objid WHERE t.ndetect > #
select name from sysobjects where xtype in (N&&&, N&&&, N&&&, N&&&, N&&&) order by name asc
select name from sysobjects where type=&&& and category=# order by name asc
SELECT s.plate, s.fiberid, s.mjd, ga.oiii_#_flux, ga.oiii_#_flux_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.tremonti__#  FROM GalSpecLine as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.oiii_#_flux <#*ga.oiii_#_flux_err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.oiii_#_flux_err > #   AND g.specobjid > #   AND sph.z > #
SELECT s.plate, s.fiberid, s.mjd, ga.oiii_#_flux, ga.oiii_#_flux_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.tremonti_#  FROM GalSpecLine as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.oiii_#_flux <#*ga.oiii_#_flux_err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.oiii_#_flux_err > #   AND g.specobjid > #   AND sph.z > #
SELECT TOP #   obj.run, obj.camCol, str(obj.field, #) as field,  str(obj.rowc, #, #) as rowc, str(obj.colc, #, #) as colc,  str(dbo.fObj(obj.objId), #) as id,   str(obj.psfMag_g - #*obj.extinction_g, #, #) as g,  str(obj.psfMag_r - #*obj.extinction_r, #, #) as r,  str(obj.psfMag_i - #*obj.extinction_i, #, #) as i,  str(obj.psfMag_z - #*obj.extinction_z, #, #) as z,  str(#*distance, #, #) as D,  dbo.fField(neighborObjId) as nfield,  str(dbo.fObj(neighborObjId), #) as nid FROM  (SELECT obj.objId,  run, camCol, field, rowc, colc,  psfMag_u, extinction_u,  psfMag_g, extinction_g,  psfMag_r, extinction_r,  psfMag_i, extinction_i,  psfMag_z, extinction_z,  NN.neighborObjId, NN.distance  FROM PhotoObj as obj  JOIN neighbors as NN on obj.objId = NN.objId  WHERE  #*NN.distance between # and # and  NN.mode = # and NN.neighborMode = # and  run = # and camCol = # and  obj.type = # and (obj.flags & #) = # and  nchild = # and obj.psfMag_i < # and  (g - r between # and # and r - i between # and #)  ) as obj  JOIN PhotoObj as nobj on nobj.objId = obj.neighborObjId  WHERE   nobj.run = obj.run and  (abs(obj.psfMag_g - nobj.psfMag_g) < # or  abs(obj.psfMag_r - nobj.psfMag_r) < # or  abs(obj.psfMag_i - nobj.psfMag_i) < #)
SELECT s.plate, s.fiberid, s.mjd, ga.oiii_#_flux, ga.oiii_#_flux_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.tremonti__#  FROM GalSpecLine as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.oiii_#_flux_err > #   AND g.specobjid > #   AND sph.z > #
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND # AND p.g BETWEEN # AND # AND p.r BETWEEN # AND # AND p.i BETWEEN # AND # AND p.z BETWEEN # AND #
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.metals, a.metals_err,  a.alphafe, a.alphafe_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target2 & (dbo.fApogeeTarget2(&&&)) != #)
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
select * from zoo2Stripe8#Coadd2 where dr8objid=#
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and nnIsInside=#   and nnCount>#   and zErr BETWEEN # and #
select p.objid as name, p.ra, p.dec from galaxy p, specobj s where p.objid=s.bestobjid
select p.objid, p.ra, p.dec, s.z as redshift from galaxy p, specobj s where p.objid=s.bestobjid
select top # p.objid, p.ra, p.dec, s.z as redshift from galaxy p, specobj s where p.objid=s.bestobjid
SELECT TOP # s1.objID as s1, s2.objID as s2   FROM Star AS S1   JOIN Neighbors AS N ON S1.objID = N.objID   JOIN Star AS S2 ON S2.objID = N.NeighborObjID   WHERE   N.NeighborType = dbo.fPhotoType(&&&)   and N.distance < .#   and ((S1.u - S1.g) < # )   and (S1.g - S1.r) < #   and (S1.r - S1.i) > #   and (S1.i - S1.z) > #
SELECT TOP # *
SELECT TOP #   g,   run,   rerun,   camcol,   field,   objID   FROM Galaxy   WHERE ( (g <= #)   and (u - g >= #)   and (u - g < #)   and (g - r >= #)   and (g - r < #)   and (r - i >= #)   and (r - i < #)   and (i - z >= #)   and (i - z < #) )
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = # AND (s.class = &&&)
SELECT u.up_name as [name],   &&& + cast(p.objId as varchar(#)) + &&&+ cast(p.objId as varchar(#)) + &&& as objID, p.ra, p.dec,   dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID and p.mode=#  ORDER BY x.up_id
SELECT TOP #   objID, ra ,dec   FROM   PhotoPrimary   WHERE   ra > # and ra < #   AND dec > # and dec < #
SELECT DISTINCT TOP # p.run, p.rerun, p.camcol, max(p.field) as &&&, max(p.ra) as &&&, max(p.dec) as &&& FROM PhotoObjAll p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) GROUP BY p.run, p.rerun, p.camcol
SELECT star.apstar_id,  star.apogee_id, star.ra, star.dec, star.glon, star.glat,  star.apogee_target1, star.apogee_target2,   aspcap.teff,aspcap.logg,aspcap.metals FROM apogeeStar star  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) near on  star.apstar_id=near.apstar_id  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id
SELECT TOP # objID
SELECT &&&
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.metals, a.metals_err,  a.alphafe, a.alphafe_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target1 &  (dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&))) != #
SELECT * FROM Large_galaxy_sample_with_errors_nocuts_w1w2errs
SELECT * FROM Large_galaxy_sample_with_errors_nocuts_skypsfext
select * from zoo2MainSpecz where dr8objid=#
select * from zooConfidence where objid=#
SELECT * FROM MyTable
select top # p.objid, p.ra, p.dec, p.z from galaxy p
select top # p.objid, p.ra, p.dec, p.redshift from galaxy p
select top # p.objid, p.ra, p.dec from galaxy p
SELECT TOP #  p.objid,p.ra,p.dec, s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid
SELECT TOP #  p.objid,p.ra,p.dec, s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE
SELECT s.specObjID as spec_id, dbo.fGetUrlFitsSpectrum(s.specObjId) as spec_url FROM PhotoObj AS p JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE p.ra BETWEEN # AND # AND p.dec BETWEEN # AND # AND p.type=# AND s.SourceType!=&&& AND s.snMedian>#
SELECT TOP # h.ObjID, ObjID1, ObjID2, Arcsec=#*Distance, psfMag_r  FROM MatchHead h   JOIN PhotoTag t on t.ObjID=h.ObjID   JOIN Match m on m.MatchHead=h.ObjID  where type1=# AND type2=#   AND psfMag_r BETWEEN # AND #
select top # h.ObjID   , ObjID1, ObjID2, Arcsec=#*Distance   , psfMag_r  from MatchHead h   join PhotoTag t on t.ObjID=h.ObjID   join Match m on m.MatchHead=h.ObjID  where type1=# and type2=#   and psfMag_r between # and #
SELECT DISTINCT p.modelMag_g FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.modelMag_r FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.modelMag_i FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.modelMag_z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.modelMag_u FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT wiseForcedTarget.w1_mag, wiseForcedTarget.w1_mag_err, wiseForcedTarget.w2_mag, wiseForcedTarget.w2_mag_err into Large_galaxy_sample_with_errors_nocuts_w1w2errs FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT wiseForcedTarget.w1_mag, wiseForcedTarget.w1_mag_err, wiseForcedTarget.w2_mag, wiseForcedTarget.w2_mag_err into Large_galaxy_sample_with_errors_nocuts_zerrpetroexp FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT Galaxy.sky_i, Galaxy.psffwhm_r, Galaxy.extinction_i into Large_galaxy_sample_with_errors_nocuts_skypsfext FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT TOP #  cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,dbo.fIAUFromEq(p.ra,p.[dec]) as SDSSname,p.dered_g,p.dered_i,p.dered_r,p.extinction_g,p.extinction_i,p.extinction_r,p.objID  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT * FROM Large_galaxy_sample_with_errors_nocuts_zerrpetroexp
SELECT * FROM Large_galaxy_sample_with_errors_nocuts_ugrierrs
SELECT * FROM MyTable1#
SELECT p.specObjID, p.ra, p.dec, p.psfFlux_r, p.cModelFlux_r, p.modelFlux_r, p.psfFlux_g, p.cModelFlux_g, p.modelFlux_g,   p.psfFlux_i, p.cModelFlux_i, p.modelFlux_i, p.modelMag_r, p.modelMag_g, p.modelMag_i,   p.extinction_r, p.extinction_g,p.extinction_i, p.flags, p.flags_r into mydb.MyTable1# from dbo.PhotoObjAll AS p where p.specObjID != #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT COUNT(p.objid)
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #
SELECT up_id, (SELECT apstar_id FROM fGetNearestApogeeStarEq(up_ra,up_dec,#)) as apstar_id   FROM #upload WHERE (SELECT apstar_id FROM fGetNearestApogeeStarEq(up_ra,up_dec,#)) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
SELECT Galaxy.modelMagErr_z, Galaxy.petroRad_i, Galaxy.expAB_i into Large_galaxy_sample_with_errors_nocuts_zerrpetroexp FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
select top # * from [FIRST_SDSS_Formatted]
SELECT TOP #  cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,dbo.fIAUFromEq(p.ra,p.[dec]) as SDSSname,p.dered_g,p.dered_i,p.dered_r  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
select top # p.objID, p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># order by q.z desc
SELECT       	p.objID,    	f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, 	CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec,  	p.mode, p.type, p.clean,   	CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g,   	CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i,   	CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   	CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u,    	CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g,    	CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r,    	CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i,    	CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,     	CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g,   	CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i,   	CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,   	CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u,    	CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g,    	CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r,  	CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i,  	CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,   	CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, 	CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i,   	CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,  	CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u,    	CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g,    	CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r,    	CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i,  	CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,   	CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,     CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,     CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,     CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,            	CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u,  	CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, 	CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r,  	CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, 	 	CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    	CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,      	CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u,  	CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, 	CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r,  	CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, 	 	CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    	CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,    	CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g) AS q_g,  	CONVERT(DECIMAL(#,#), p.q_r) AS q_r, CONVERT(DECIMAL(#,#), p.q_i) AS q_i,  	CONVERT(DECIMAL(#,#), p.q_z) AS q_z, CONVERT(DECIMAL(#,#), p.qErr_u) AS qErr_u,  	CONVERT(DECIMAL(#,#), p.qErr_g) AS qErr_g, CONVERT(DECIMAL(#,#), p.qErr_r) AS qErr_r,  	CONVERT(DECIMAL(#,#), p.qErr_i) AS qErr_i, CONVERT(DECIMAL(#,#), p.qErr_z) AS qErr_z,       	CONVERT(DECIMAL(#,#), p.u_u) AS u_u, CONVERT(DECIMAL(#,#), p.u_g) AS u_g,  	CONVERT(DECIMAL(#,#), p.u_r) AS u_r, CONVERT(DECIMAL(#,#), p.u_i) AS u_i,  	CONVERT(DECIMAL(#,#), p.u_z) AS u_z, CONVERT(DECIMAL(#,#), p.uErr_
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   	p.objID,    	f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, 	CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec,  	p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors 	CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g,   	CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i,   	CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   	CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u,    	CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g,    	CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r,    	CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i,    	CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   	CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g,   	CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i,   	CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,   	CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u,    	CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g,    	CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r,  	CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i,  	CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors 	CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, 	CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i,   	CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,  	CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u,    	CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g,    	CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r,    	CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i,  	CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes 	CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,     CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,     CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,     CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    	CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u,  	CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, 	CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r,  	CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, 	 	CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    	CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i,  	CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    	CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u,  	CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, 	CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r,  	CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, 	 	CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    	CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i,  	CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U param
select top # p.objid as name, p.ra, p.dec from galaxy p where p.z < .#
SELECT Galaxy.modelMagErr_u, Galaxy.modelMagErr_g, Galaxy.modelMagErr_r, Galaxy.modelMagErr_i into Large_galaxy_sample_with_errors_nocuts_ugrierrs FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT Galaxy.modelMagErr_u, Galaxy.modelMagErr_g, Galaxy.modelMagErr_r, Galaxy.modelMagErr_i into Large_galaxy_sample_with_errors_nocuts_ugrerrs FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT Galaxy.modelMagErr_u, Galaxy.modelMagErr_g, Galaxy.modelMagErr_r into Large_galaxy_sample_with_errors_nocuts_ugrerrs FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT Galaxy.modelMagErr_u, Galaxy.modelMagErr_g, Galaxy.modelMagErr_r into Large_galaxy_sample_with_errors_nocuts_ugr FROM Galaxy JOIN wiseForcedTarget on Galaxy.objID= wiseForcedTarget.objID WHERE Galaxy.dec BETWEEN # AND # AND (Galaxy.mode != # OR Galaxy.type != # OR Galaxy.insideMask != #)
SELECT    s.specObjID, s.ra, s.dec, s.z, s.class, s.zWarning, s.snMedian, ife.ra, ife.dec, e.bpt, e.Flux_Hb_#, e.Flux_OIII_#, e.Flux_Ha_#, e.Flux_NII_# into mydb.bpt_diagram_dr1# from mydb.for_bpt as ife      CROSS APPLY dbo.fGetNearestSpecObjEq(ife.ra,ife.dec, #) AS near     JOIN SpecObjAll as s ON near.specObjID=s.specObjID    JOIN emissionLinesPort AS e ON e.specObjID = near.specObjID       WHERE  s.class = &&& AND   s.zWarning=# AND  e.Flux_Ha_# != # AND  e.Flux_Hb_# !=# AND  e.Flux_OIII_# !=# AND  e.Flux_NII_# != # AND  s.snMedian >= #
SELECT * FROM Large_galaxy_sample_with_errors_nocuts_iz
SELECT TOP #      p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean,      CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,     CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,     CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,        CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,            CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,      CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,    CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g) AS q_g, CONVERT(DECIMAL(#,#), p.q_r) AS q_r, CONVERT(DECIMAL(#,#), p.q_i) AS q_i, CONVERT(DECIMAL(#,#), p.q_z) AS q_z, CONVERT(DECIMAL(#,#), p.qErr_u) AS qErr_u, CONVERT(DECIMAL(#,#), p.qErr_g) AS qErr_g, CONVERT(DECIMAL(#,#), p.qErr_r) AS qErr_r, CONVERT(DECIMAL(#,#), p.qErr_i) AS qErr_i, CONVERT(DECIMAL(#,#), p.qErr_z) AS qErr_z,       CONVERT(DECIMAL(#,#), p.u_u) AS u_u, CONVERT(DECIMAL(#,#), p.u_g) AS u_g, CONVERT(DECIMAL(#,#), p.u_r) AS u_r, CONVERT(DECIMAL(#,#), p.u_i) AS u_i, CONVERT(DECIMAL(#,#), p.u_z) AS u_z,    CONVERT(DECIMAL(#,#), p.uErr_u) AS uErr_u, CONVERT(DECIMAL(#,#), p.uErr_g) AS uErr_g, CONVERT(DECIMAL(#,#), p.uErr_r) AS uE
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g) AS q_g, CONVERT(
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g)
SELECT    s.specObjID, s.ra, s.dec, s.z, s.class, s.zWarning, s.snMedian, ife.ra, ife.dec into mydb.ife_zspec_dr1# from mydb.for_bpt as ife      CROSS APPLY dbo.fGetNearestSpecObjEq(ife.ra,ife.dec, #) AS near     JOIN SpecObjAll as s ON near.specObjID=s.specObjID      WHERE  s.class = &&& AND   s.zWarning=#
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g) AS q_g
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors */  CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g) AS
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors */  CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g)
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors */  CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z, */  CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z, */ -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g)
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z, */ -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,       */ -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  */-- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z,    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  */-- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,  */ -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  */CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors  CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q_g)
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p.q
select top # * from [specPhotoDR1#v2]
SELECT * FROM specPhotoDR1#v2
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors     */CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   */-- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    */CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS petroR9#Err_z,   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u) AS q_u, CONVERT(DECIMAL(#,#), p
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   /*p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS p
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean, --  p.flags_u) AS , CONVERT(DECIMAL(#,#), p.flags_g) AS , CONVERT(DECIMAL(#,#), p.flags_r) AS , CONVERT(DECIMAL(#,#), p.flags_i) AS , CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u) as psfMag_u, CONVERT(DECIMAL(#,#), p.psfMag_g) as p.psfMag_g, CONVERT(DECIMAL(#,#), p.psfMag_r) as psfMag_r, CONVERT(DECIMAL(#,#), p.psfMag_i) as p.psfMag_i, CONVERT(DECIMAL(#,#), p.psfMag_z) as p.psfMag_z,   CONVERT(DECIMAL(#,#), p.psfMagErr_u) as psfMagErr_u, CONVERT(DECIMAL(#,#), p.psfMagErr_g) as psfMagErr_g, CONVERT(DECIMAL(#,#), p.psfMagErr_r) as psfMagErr_r, CONVERT(DECIMAL(#,#), p.psfMagErr_i) AS psfMagErr_i, CONVERT(DECIMAL(#,#), p.psfMagErr_z) AS psfMagErr_z,  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u) AS petroMag_u, CONVERT(DECIMAL(#,#), p.petroMag_g) AS petroMag_g, CONVERT(DECIMAL(#,#), p.petroMag_r) AS petroMag_r, CONVERT(DECIMAL(#,#), p.petroMag_i) AS petroMag_i, CONVERT(DECIMAL(#,#), p.petroMag_z) AS petroMag_z,     CONVERT(DECIMAL(#,#), p.petroMagErr_u) AS petroMagErr_u, CONVERT(DECIMAL(#,#), p.petroMagErr_g) AS petroMagErr_g, CONVERT(DECIMAL(#,#), p.petroMagErr_r) AS petroMagErr_r, CONVERT(DECIMAL(#,#), p.petroMagErr_i) AS petroMagErr_i, CONVERT(DECIMAL(#,#), p.petroMagErr_z) AS petroMagErr_z,  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u) AS modelMag_u, CONVERT(DECIMAL(#,#), p.modelMag_g) AS modelMag_g, CONVERT(DECIMAL(#,#), p.modelMag_r) AS modelMag_r, CONVERT(DECIMAL(#,#), p.modelMag_i) AS modelMag_i, CONVERT(DECIMAL(#,#), p.modelMag_z) AS modelMag_z,    CONVERT(DECIMAL(#,#), p.modelMagErr_u) AS modelMagErr_u, CONVERT(DECIMAL(#,#), p.modelMagErr_g) AS modelMagErr_g, CONVERT(DECIMAL(#,#), p.modelMagErr_r) AS modelMagErr_r, CONVERT(DECIMAL(#,#), p.modelMagErr_i) AS modelMagErr_i, CONVERT(DECIMAL(#,#), p.modelMagErr_z) AS modelMagErr_z,  -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u) AS petroR5#_u, CONVERT(DECIMAL(#,#), p.petroR5#_g) AS petroR5#_g, CONVERT(DECIMAL(#,#), p.petroR5#_r) AS petroR5#_r, CONVERT(DECIMAL(#,#), p.petroR5#_i) AS petroR5#_i, CONVERT(DECIMAL(#,#), p.petroR5#_z) AS petroR5#_z,    CONVERT(DECIMAL(#,#), p.petroR5#Err_u) AS petroR5#Err_u, CONVERT(DECIMAL(#,#), p.petroR5#Err_g) AS petroR5#Err_g, CONVERT(DECIMAL(#,#), p.petroR5#Err_r) AS petroR5#Err_r, CONVERT(DECIMAL(#,#), p.petroR5#Err_i) AS petroR5#Err_i, CONVERT(DECIMAL(#,#), p.petroR5#Err_z) AS petroR5#Err_z,  -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u) AS petroR9#_u, CONVERT(DECIMAL(#,#), p.petroR9#_g) AS petroR9#_g, CONVERT(DECIMAL(#,#), p.petroR9#_r) AS petroR9#_r, CONVERT(DECIMAL(#,#), p.petroR9#_i) AS petroR9#_i, CONVERT(DECIMAL(#,#), p.petroR9#_z) AS petroR9#_z    CONVERT(DECIMAL(#,#), p.petroR9#Err_u) AS petroR9#Err_u, CONVERT(DECIMAL(#,#), p.petroR9#Err_g) AS petroR9#Err_g, CONVERT(DECIMAL(#,#), p.petroR9#Err_r) AS petroR9#Err_r, CONVERT(DECIMAL(#,#), p.petroR9#Err_i) AS petroR9#Err_i, CONVERT(DECIMAL(#,#), p.petroR9#Err_z) AS pet
SELECT s.specObjID, s.objid, s.ra,s.dec, p.z AS photoz, p.zerr AS photoz_err, s.z AS specz, s.zerr AS specz_err, s.dered_u,s.dered_g,s.dered_r,s.dered_i, s.dered_z,s.modelMagErr_u,s.modelMagErr_g, s.modelMagErr_r,s.modelMagErr_i,s.modelMagErr_z, s.type as specType, q.type as photpType, q.petroRad_u,q.petroRad_g,q.petroRad_r, q.petroRad_i,q.petroRad_z, q.petroRadErr_u,q.petroRadErr_g,q.petroRadErr_r, q.petroRadErr_i,q.petroRadErr_z, q.deVRad_u,q.deVRadErr_u,q.deVRad_g,q.deVRadErr_g, q.deVRad_r,q.deVRadErr_r, q.deVRad_i,q.deVRadErr_i,q.deVRad_z,q.deVRadErr_z, q.extinction_u,q.extinction_g,q.extinction_r, q.extinction_i,q.extinction_z, q.psfMag_u,q.psfMagErr_u, q.psfMag_g,q.psfMagErr_g, q.psfMag_r,q.psfMagErr_r, q.psfMag_i,q.psfMagErr_i, q.psfMag_z,q.psfMagErr_z, q.fiberMag_u,q.fiberMagErr_u, q.fiberMag_g,q.fiberMagErr_g, q.fiberMag_r,q.fiberMagErr_r, q.fiberMag_i,q.fiberMagErr_i, q.fiberMag_z,q.fiberMagErr_z, q.expAB_u,q.expRad_u,q.expPhi_u, q.expAB_g,q.expRad_g,q.expPhi_g, q.expAB_r,q.expRad_r,q.expPhi_r, q.expAB_i,q.expRad_i,q.expPhi_i, q.expAB_z,q.expRad_z,q.expPhi_z    INTO mydb.specPhotoDR1#v2 FROM SpecPhotoAll AS s    JOIN photoObjAll AS q ON s.objid=q.objid AND q.dered_u># AND q.dered_g># AND q.dered_r># AND q.dered_z># AND q.dered_i># AND q.expAB_r ># LEFT OUTER JOIN Photoz AS p ON s.objid=p.objid
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean,  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photometrically estimated redshifts and distances ISNULL(pz.objID,#) as pz_objid
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, p.mode, p.type, p.clean,  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photometrically estimated redshifts and distances ISNULL(pz.objID,#
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), p.type, p.clean,  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photometrically estimated redshifts and distan
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photometrically
SELECT  ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photo
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ paramters - Photom
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors   /* CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),  */ -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -----------------------------------------------------------------------
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   /*CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),     */ --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -----------------------------------------------------------------------
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   */CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -----------------------------------------------------------------------
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),   */ CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -----------------------------------------------------------------------
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors   */ CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -----------------------------------------------------------------------
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- --
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean),  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ------------------------------------------------------------------
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean,  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   /*CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  -------------------------------------------------------------------
select p.ObjID, p.ra, p.dec, p.u, p.Err_u, p.g, p.Err_g, p.r, p.Err_r, p.i,p.Err_i, p.z, p.Err_z from photoObj p, dbo.fGetNearbyObjEq(#,#,#) n where p.objID = n.objID AND p.type = #
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters -----------------------------------------------------------------------   p.objID, f.id as FIRST_ID, CONVERT(DECIMAL(#,#), f.ra) as FIRST_ra, CONVERT(DECIMAL(#,#), f.dec) as FIRST_dec, CONVERT(DECIMAL(#,#), p.ra) as SDSS_ra, CONVERT(DECIMAL(#,#), p.dec) as SDSS_dec, CONVERT(DECIMAL(#,#), p.mode), CONVERT(DECIMAL(#,#), p.type), CONVERT(DECIMAL(#,#), p.clean,  --  p.flags_u), CONVERT(DECIMAL(#,#), p.flags_g), CONVERT(DECIMAL(#,#), p.flags_r), CONVERT(DECIMAL(#,#), p.flags_i), CONVERT(DECIMAL(#,#), p.flags_z,  -- PSF magnitude with errors   CONVERT(DECIMAL(#,#), p.psfMag_u), CONVERT(DECIMAL(#,#), p.psfMag_g), CONVERT(DECIMAL(#,#), p.psfMag_r), CONVERT(DECIMAL(#,#), p.psfMag_i), CONVERT(DECIMAL(#,#), p.psfMag_z),   CONVERT(DECIMAL(#,#), p.psfMagErr_u), CONVERT(DECIMAL(#,#), p.psfMagErr_g), CONVERT(DECIMAL(#,#), p.psfMagErr_r), CONVERT(DECIMAL(#,#), p.psfMagErr_i), CONVERT(DECIMAL(#,#), p.psfMagErr_z),  -- Petrosian magnitude with errors   CONVERT(DECIMAL(#,#), p.petroMag_u), CONVERT(DECIMAL(#,#), p.petroMag_g), CONVERT(DECIMAL(#,#), p.petroMag_r), CONVERT(DECIMAL(#,#), p.petroMag_i), CONVERT(DECIMAL(#,#), p.petroMag_z),        CONVERT(DECIMAL(#,#), p.petroMagErr_u), CONVERT(DECIMAL(#,#), p.petroMagErr_g), CONVERT(DECIMAL(#,#), p.petroMagErr_r), CONVERT(DECIMAL(#,#), p.petroMagErr_i), CONVERT(DECIMAL(#,#), p.petroMagErr_z),      --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),    CONVERT(DECIMAL(#,#), p.modelMagErr_u), CONVERT(DECIMAL(#,#), p.modelMagErr_g), CONVERT(DECIMAL(#,#), p.modelMagErr_r), CONVERT(DECIMAL(#,#), p.modelMagErr_i), CONVERT(DECIMAL(#,#), p.modelMagErr_z),   -- Colours from magnitudes      CONVERT(DECIMAL(#,#),p.modelMag_u - p.modelMag_r) AS mU_mR,      CONVERT(DECIMAL(#,#),p.modelMag_g - p.modelmag_r) AS mG_mR,      CONVERT(DECIMAL(#,#),p.modelMag_r - p.modelmag_i) AS mR_mI,      CONVERT(DECIMAL(#,#),p.modelMag_i - p.modelmag_z) AS mI_mZ,        -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR5#_u), CONVERT(DECIMAL(#,#), p.petroR5#_g), CONVERT(DECIMAL(#,#), p.petroR5#_r), CONVERT(DECIMAL(#,#), p.petroR5#_i), CONVERT(DECIMAL(#,#), p.petroR5#_z),    CONVERT(DECIMAL(#,#), p.petroR5#Err_u), CONVERT(DECIMAL(#,#), p.petroR5#Err_g), CONVERT(DECIMAL(#,#), p.petroR5#Err_r), CONVERT(DECIMAL(#,#), p.petroR5#Err_i), CONVERT(DECIMAL(#,#), p.petroR5#Err_z),   -- Radius containing #% of Petrosian flux with errors    CONVERT(DECIMAL(#,#), p.petroR9#_u), CONVERT(DECIMAL(#,#), p.petroR9#_g), CONVERT(DECIMAL(#,#), p.petroR9#_r), CONVERT(DECIMAL(#,#), p.petroR9#_i), CONVERT(DECIMAL(#,#), p.petroR9#_z),    CONVERT(DECIMAL(#,#), p.petroR9#Err_u), CONVERT(DECIMAL(#,#), p.petroR9#Err_g), CONVERT(DECIMAL(#,#), p.petroR9#Err_r), CONVERT(DECIMAL(#,#), p.petroR9#Err_i), CONVERT(DECIMAL(#,#), p.petroR9#Err_z),   -- Stokes Q and U parameters with errors     CONVERT(DECIMAL(#,#), p.q_u), CONVERT(DECIMAL(#,#), p.q_g), CONVERT(DECIMAL(#,#), p.q_r), CONVERT(DECIMAL(#,#), p.q_i), CONVERT(DECIMAL(#,#), p.q_z),    CONVERT(DECIMAL(#,#), p.qErr_u), CONVERT(DECIMAL(#,#), p.qErr_g), CONVERT(DECIMAL(#,#), p.qErr_r), CONVERT(DECIMAL(#,#), p.qErr_i), CONVERT(DECIMAL(#,#), p.qErr_z),     CONVERT(DECIMAL(#,#), p.u_u), CONVERT(DECIMAL(#,#), p.u_g), CONVERT(DECIMAL(#,#), p.u_r), CONVERT(DECIMAL(#,#), p.u_i), CONVERT(DECIMAL(#,#), p.u_z),    CONVERT(DECIMAL(#,#), p.uErr_u), CONVERT(DECIMAL(#,#), p.uErr_g), CONVERT(DECIMAL(#,#), p.uErr_r), CONVERT(DECIMAL(#,#), p.uErr_i), CONVERT(DECIMAL(#,#), p.uErr_z),  ----------------------------------------------------------------------- -- PhotoZ para
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_u,#)),    CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_r,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_i,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_z,#)),           CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)) AS mU_mR,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)) AS mG_mR,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)) AS mR_mI,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#)) AS mI_mZ       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_u,#)),    CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_r,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_i,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_z,#)),           CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)) AS magU_magR,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)) AS magG_magR,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)) AS magR_magI,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#)) AS magI_magZ       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_u,#)),    CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_r,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_i,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_z,#)),           CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)) AS u-r,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)) AS g-r,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)) AS r-i,      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#)) AS i-z       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_u,#)),    CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_r,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_i,#)),    CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_z,#)),           CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#))       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors   CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_u,#)), CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g,#)), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_r,#)), CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_i,#)), CONVERT(DECIMAL(#,#), ISNULL(p.modelMag_z,#)),           CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#))       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #  --better of DeVaucouleurs/Exponential magnitude fit with errors    CONVERT(DECIMAL(#,#), p.modelMag_u), CONVERT(DECIMAL(#,#), p.modelMag_g), CONVERT(DECIMAL(#,#),  CONVERT(DECIMAL(#,#), p.modelMag_r), CONVERT(DECIMAL(#,#), p.modelMag_i), CONVERT(DECIMAL(#,#), p.modelMag_z),            CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_u - p.modelMag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_g - p.modelmag_r,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_r - p.modelmag_i,#)),      CONVERT(DECIMAL(#,#),ISNULL(p.modelMag_i - p.modelmag_z,#))       FROM MyDB.FIRST_Reduced_#p0#deg AS f    OUTER APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON p.objID = x.objID
SELECT TOP #      CONVERT(DECIMAL(#,#),ISNULL(pz.distMod,#)), CONVERT(DECIMAL(#,#),ISNULL(s.z,#))    FROM MyDB.FIRST_Reduced_#p0#deg AS f   OUTER APPLY dbo.fGetNearestObjEq(f.ra,f.dec,#) AS x   JOIN PhotoZ pz ON pz.objID = x.objID   LEFT JOIN SpecObjAll s ON s.bestObjID = pz.objID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND #
INSERT INTO #upload values
SELECT up_id, dbo.fGetNearestSpecObjIdAllEq(up_ra,up_dec,#) as SpecobjId   FROM #upload WHERE dbo.fGetNearestSpecObjIdAllEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
SELECT * FROM w3
SELECT objID,  	    ra, dec, 	   dered_g, dered_r, dered_i, dered_z,    cModelMag_r, psfMag_r,   probPSF_r into mydb.w3 from PhotoPrimary 	 WHERE     ra > # and ra < # and dec > # and dec < #
SELECT objID,  	    ra, dec, 	   dered_g, dered_r, dered_i, dered_z,    cModelMag_r, psfMag_r,   probPSF_r into mydb.cosmos from PhotoPrimary 	 WHERE     ra > # and ra < # and dec > # and dec < #
select plate, mjd, fiberID from dbo.fGetNearbySpecObjAllEq(#, #, #)
select * from aspcapStar where apstar_id=&&&
SELECT * FROM tremonti_#
SELECT s.plate, s.fiberid, s.mjd, ga.oiii_#_flux, ga.oiii_#_flux_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.tremonti_#  FROM GalSpecLine as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.oiii_#_flux >#*ga.oiii_#_flux_err   AND ga.oiii_#_flux <#*ga.oiii_#_flux_err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.oiii_#_flux_err > #   AND g.specobjid > #   AND sph.z > #
SELECT s.plate, s.fiberid, s.mjd, ga.Flux_OIII_#, ga.Flux_OIII_#_err, (sph.modelmag_g-sph.modelmag_r) as col_g_r,    sph.modelmag_g-#*log1#(#E+#*sph.z)+# as M_g, (sph.modelmag_u-sph.modelmag_r) as col_u_r,   sph.modelmag_r-#*log1#(#E+#*sph.z)+# as M_r, sph.subClass, g.petroRad_g, sph.z, sph.extinction_g    INTO mydb.portsmuth_#  FROM emissionlinesport as ga, specobj as s, Galaxy as g, SpecPhoto as sph    WHERE ga.Flux_OIII_# >#*ga.Flux_OIII_#_Err   AND ga.Flux_OIII_# <#*ga.Flux_OIII_#_Err   AND s.class = &&&   AND s.specobjid = ga.specobjid   AND s.specobjid = g.specobjid    AND sph.specobjid = g.specobjid   AND sph.specobjid = ga.specobjid   AND ga.Flux_OIII_#_err > #   AND g.specobjid > #   AND sph.z > #
SELECT TOP # s.plate,s.mjd,s.fiberid FROM BESTDR1#..SpecObj as s 	JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID WHERE  s.zWarning = #
select p.run, p.camcol, p.field from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
SELECT specClass, count(*)  FROM SpecObjAll  GROUP BY specClass
SELECT specClass, count(*)  FROM SpecObj  GROUP BY specClass
SELECT TOP #  specobj.plate as specobj_plate, specobj.mjd as specobj_mjd,  specobj.fiberid as specobj_fiberid,   specobj.ra as specobj_ra, specobj.dec as specobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestSpecObjEq( star.ra, star.dec, #) AS near   JOIN specobj ON near.specobjid=specobj.specobjid
select p.ra, p.dec, p.z, p.Err_z from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid where ((p.flags & #) != #) AND ((p.flags & #) = #) AND (((p.flags & #) = #) AND (p.psfmagerr_z <= #)) AND (((p.flags & #) = #) or (p.flags & #) = #)
select p.ra, p.dec, p.g, p.Err_g from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid where ((p.flags & #) != #) AND ((p.flags & #) = #) AND (((p.flags & #) = #) AND (p.psfmagerr_g <= #)) AND (((p.flags & #) = #) or (p.flags & #) = #)
select p.ra, p.dec, p.i, p.Err_i from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid where ((p.flags & #) != #) AND ((p.flags & #) = #) AND (((p.flags & #) = #) AND (p.psfmagerr_i <= #)) AND (((p.flags & #) = #) or (p.flags & #) = #)
select p.ra, p.dec, p.r, p.Err_r from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid where ((p.flags & #) != #) AND ((p.flags & #) = #) AND (((p.flags & #) = #) AND (p.psfmagerr_r <= #)) AND (((p.flags & #) = #) or (p.flags & #) = #)
