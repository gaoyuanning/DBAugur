select * from PhotoObjAll where objId=#
select * from PhotoTag where objId=#
SELECT DISTINCT TOP # p.run, p.rerun, p.camcol, max(p.field) as &&&, max(p.ra) as &&&, max(p.dec) as &&& FROM PhotoObjAll p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) GROUP BY p.run, p.rerun, p.camcol
select s.ObjID,s.class,s.subclass,s.z,s.zErr,s.type from SpecPhoto s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
select s.ObjID, s.ra,s.dec,s.deVRad_r,s.deVAB_r,s.raErr,s.decErr,s.type,s.modelMag_u,s.modelMagErr_u,s.modelMag_g,s.modelMagErr_g,s.modelMag_r,s.modelMagErr_r,s.modelMag_i,s.modelMagErr_i,s.modelMag_z,s.modelMagErr_z from PhotoPrimary s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
SELECT p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, psfFlux_u, psfFlux_g, psfFlux_r, psfFlux_i, psfFlux_z, psfFluxIvar_u, psfFluxIvar_g, psfFluxIvar_r, psfFluxIvar_i, psfFluxIvar_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT class, count(*)  FROM SpecObj  GROUP BY class
select * from sppParams where specObjId=#
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
select * from Field where fieldId=#
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select * from Photoz where objid=#
select * from PhotozRF where objid=#
select * from galSpecLine where specObjId=#
SELECT TOP # *
SELECT p.ra , p.dec, p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, p.nMgyPerCount_u, p.nMgyPerCount_g, p.nMgyPerCount_r, p.nMgyPerCount_i, p.nMgyPerCount_z FROM PhotoObjAll p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
select psfSigma1_z, psfSigma2_z, psfB_z, psfP0_z, psfBeta_z, psfSigmaP_z, psfSigma1_u, psfSigma2_u, psfB_u, psfP0_u, psfBeta_u, psfSigmaP_u, psfSigma1_g, psfSigma2_g, psfB_g, psfP0_g, psfBeta_g, psfSigmaP_g, psfSigma1_r, psfSigma2_r, psfB_r, psfP0_r, psfBeta_r, psfSigmaP_r, psfSigma1_i, psfSigma2_i, psfB_i, psfP0_i, psfBeta_i, psfSigmaP_i from Field where run = # and rerun = # and camcol = # and field = #
select * from galSpecIndx where specObjId=#
select * from stellarMassFSPSGranWideNoDust where specObjId=#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID  FROM galaxy AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE p.ra < # AND p.ra > #   AND # < p.dec AND p.dec < #   AND p.CLEAN = #  AND p.psfMag_r - p.cModelMag_r >= #  AND p.petroMag_r < #
select * from wise_xmatch x join wise_allsky a on x.wise_cntr=a.cntr where x.sdss_objid=#
SELECT    p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
SELECT  sp.ra, sp.dec, sp.z as redshift,  sp.cModelMag_g as g, sp.cModelMagerr_g as err_g,   sp.cModelMag_i as i, sp.cModelMagerr_i as err_i,  gs.h_alpha_eqw, gs.oii_#_eqw,   p.aperFlux7_g, p.aperFlux7Ivar_g as var_g,  p.aperFlux7_i, p.aperFlux7Ivar_i as var_i    FROM GalSpecLine AS gs   JOIN SpecPhoto AS sp ON sp.specobjid = gs.specobjid   JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS GN  ON GN.specobjID = gs.specobjid  JOIN Galaxy as gal ON gal.specobjId = gs.specobjid  JOIN PhotoObjAll as p ON p.specObjId = gs.specobjID    WHERE   sp.cModelMag_g-sp.cModelMag_i between # and #   and sp.z > #  and sp.cModelMag_i-#*log1#(#E+#*sp.z) < #
SELECT  sp.ra, sp.dec, sp.z as redshift,  sp.cModelMag_g as g, sp.cModelMagerr_g as err_g,   sp.cModelMag_i as i, sp.cModelMagerr_i as err_i,  gs.h_alpha_eqw, gs.oii_#_eqw,   p.aperFlux7_g, p.aperFlux7Ivar_g as var_g,  p.aperFlux7_i, p.aperFlux7Ivar_i as var_i    FROM GalSpecLine AS gs   JOIN SpecPhoto AS sp ON sp.specobjid = gs.specobjid   JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS GN  ON GN.specobjID = gs.specobjid  JOIN Galaxy as gal ON gal.specobjId = gs.specobjid  JOIN PhotoObjAll as p ON p.specObjId = gs.specobjID    WHERE   h_alpha_eqw between # and #   and oii_#_eqw between # and #   and sp.cModelMag_g-sp.cModelMag_i between # and #   and sp.z between # and #   and sp.cModelMag_i-#*log1#(#E+#*sp.z) < #
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
select * from galSpecInfo where specObjId=#
select * from stellarMassFSPSGranWideDust where specObjId=#
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
select * from Frame where fieldId=#
select * from SpecObjAll where specObjId=#
select description from DBObjects where name=&&&
select text from DBObjects where name=&&&
select * from fDocFunctionParams(&&&)
select * from stellarMassFSPSGranEarlyDust where specObjId=#
select * from emissionLinesPort where specObjId=#
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and nnIsInside=#   and nnCount>#   and zErr BETWEEN # and #
select * from dbo.fDocColumns(&&&)
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
select * from stellarMassFSPSGranEarlyNoDust where specObjId=#
select * from sppLines where specObjId=#
select * from stellarMassPassivePort where specObjId=#
select top # * from galaxy
select name, description from DBObjects where access=&&& and type=&&& order by name
select u.*, p.objId, ltrim(str(p.ra,#,#)) as ra, ltrim(str(p.dec,#,#)) as dec, dbo.fPhotoTypeN(p.type) as type from #x x, #upload u, photoTag p  where u.up_id = x.up_id and x.objID=p.objID and p.mode=# order by x.up_id
SELECT DISTINCT s.instrument, s.run2d, s.plate, s.mjd, s.fiberID FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select distinct parent from DBViewCols where viewname=&&&
select * from stellarMassPCAWiscBC0# where specObjId=#
SELECT   specObjID, mjd, z, class, subClass, ra, dec,   sourceType, type, psfMag_u, psfMag_g,   psfMag_r, psfMag_i, psfMag_z, psfMagErr_u,  psfMagErr_g, psfMagErr_r, psfMagErr_i, psfMagErr_z FROM  SpecPhotoAll WHERE   htmid*# & # < (# * .#)
SELECT TOP # s.ra, s.dec, s.psfmag_g, (s.psfmag_g - s.psfmag_r) as gmr,  pm.pmra, pm.pmdec, pm.pmraerr, pm.pmdecerr, pm.pml, pm.pmb FROM star s  JOIN propermotions pm ON s.objid = pm.objid WHERE  s.ra between #-# and #+#  and s.dec between #-# and #+#
select top # p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, s.z as redshift, s.specobjid from star p, specobj s where p.objid=s.bestobjid and (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)  and (p.i BETWEEN # AND #)  and (p.z BETWEEN # AND #)  and s.z BETWEEN # AND #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw > # and gsl.h_beta_reqw > # and gsl.nii_#_reqw > # and gsl.h_alpha_reqw > #
SELECT TOP # objID
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw > # and gsl.h_beta_reqw > # and gsl.nii_#_reqw > # and gsl.h_alpha_reqw > #,
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw/gsl.h_beta_reqw > # and gsl.nii_#_reqw/gsl.h_alpha_reqw > #
SELECT TOP # ra, dec,    i,    Redshift into mydb.MyTable_# from Galaxy
SELECT objID, ra, dec, u, err_u, TAI_u FROM PhotoObj  WHERE   type = #
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
SELECT objID, ra, dec, u, err_u, TAI_u FROM PhotoObj  WHERE   class = #
SELECT objID, ra, dec, u, err_u, TAI_u FROM PhotoObj  WHERE   class = galaxy
SELECT objID, ra, dec, u, err_u, TAI_u FROM PhotoObj  WHERE   class = star
select description from DataConstants where field=&&&  and [name]=&&&
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw > #, gsl.h_beta_reqw > #, gsl.nii_#_reqw > #, gsl.h_alpha_reqw > #,
SELECT SDSSname, ra, dec, u, err_u, TAI_u FROM PhotoObj  WHERE   class = &&&
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw > #, gsl.h_beta_reqw > #, gsl.nii_#_reqw > #, gsl.h_alpha_reqw > #
SELECT TOP # gsl.neiii_#_reqw, gsl.h_beta_reqw, gsl.h_beta_reqw_err, gsl.oii_#_reqw, gsl.oii_#_reqw_err, gsl.nii_#_reqw, gsl.nii_#_reqw_err, gsl.h_alpha_reqw, gsl.h_alpha_reqw_err, p.objid, p.ra,p.dec,p.petror9#_r, p.dered_z, p.dered_r, p.dered_g   FROM Galaxy as p    JOIN galSpecLine AS gsl ON p.specobjid = gsl.specobjid WHERE gsl.oii_#_reqw > #
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
SELECT * FROM MyTable_#
SELECT TOP # ra, dec,   z,    i,    g as Redshift into mydb.MyTable_# from Galaxy
SELECT TOP # ra, dec,   z,    i,    g as Redshift into mydb.MyTable_# from Quasar
SELECT TOP # ra, dec,   z,    i,    g as Redshift into mydb.MyTable_# from Star
SELECT TOP # ra, dec,   z,    i,    g as Redshift into mydb.MyTable_# from stars
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_xiii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE (p.i - p.z) > # AND (p.i - p.z) < # AND p.u > # AND s.zWarning = #
SELECT * FROM Aliy_#_A1#_xii
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_xii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT ra,dec,r FROM PhotoObj WHERE ra BETWEEN # AND # AND dec BETWEEN # AND # AND r < # AND r > # AND clean = #
SELECT TOP # ra, dec, z, i, g as Redshift into mydb.MyTable_# from Quasars
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_x    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_ii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT * FROM lowz1#_v5_photo_specobj
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
SELECT * FROM Aliy_#_A1#_ii
select * from stellarMassStarformingPort where specObjId=#
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID into mydb.MyTable_# from galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE p.ra < # AND p.ra > #      AND # < p.dec AND p.dec < #      AND p.CLEAN = #     AND p.psfMag_r - p.cModelMag_r >= #     AND p.petroMag_r < #
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A3#_i    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #   AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT sl.plate, sl.mjd, sl.fiber,  sl.caIIKside, sl.caIIKerr, sl.caIIKmask,  sp.fehadop, sp.fehadopunc,sp. fehadopn,  sp.loggadopn,sp.loggadopunc,sp.loggadopn  FROM sppLines AS sl  JOIN sppParams AS sp ON sl.specobjid = sp.specobjid WHERE  fehadop < # and fehadopunc between # and #  AND fehadopn > #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID into mydb.MyTable from galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE p.ra < # AND p.ra > #      AND # < p.dec AND p.dec < #      AND p.CLEAN = #     AND p.psfMag_r - p.cModelMag_r >= #     AND p.petroMag_r < #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE p.ra < # AND p.ra > #      AND # < p.dec AND p.dec < #      AND p.CLEAN = #     AND p.psfMag_r - p.cModelMag_r >= #     AND p.petroMag_r < #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID into mydb.MyTable from galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE p.ra < # AND p.ra > #      AND # < p.dec AND p.dec < #      AND s.clean = #     AND p.psfMag_r - p.cModel_r >= #     AND p.petroMag_r < #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE p.ra < # AND p.ra > #      AND # < p.dec AND p.dec < #      AND s.clean = #     AND p.psfMag_r - p.cModel_r >= #     AND p.petroMag_r < #
select * from stellarMassPCAWiscM1# where specObjId=#
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n   JOIN PhotoPrimary p ON n.objID=p.objID
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE # < p.ra < #      AND # < p.dec < #      AND s.clean = #     AND p.psfMag_r - p.cModel_r >= #     AND p.petroMag_r < #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE # < p.ra< #      AND # < p.dec< #      AND s.clean = #     AND p.psfMag_r - p.cModel_r >= #     AND p.petroMag_r < #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID into mydb.MyTable from galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE # < p.ra<#      AND # < p.dec<#      AND s.clean = #     AND p.psfMag_r - p.cModel_r >= #     AND p.petroMag_r < #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId           FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL SELECT         p.objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,        dbo.fPhotoTypeN(p.type) as type,        g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,        s.z as z_spec      FROM #upload u           JOIN #x x ON x.up_id = u.up_id           JOIN PhotoTag p ON p.objID = x.objID            JOIN galaxy g ON g.objID = x.objID           JOIN SpecObj s ON s.bestobjid = x.objID     ORDER BY x.up_id
INSERT INTO #upload values
SELECT TOP #   p.u, p.g, p.r, p.i, p.z, s.class, s.z, s.zerr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE   p.u BETWEEN # AND #   AND p.g BETWEEN # AND #   AND s.class <> &&&   AND s.class <> &&&   AND s.class <> &&&   AND s.class <> &&&
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID into mydb.MyTable from galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE #<p.ra<#      AND # <p.dec<#      AND s.clean=#     AND p.psfMag_r - p.cModel_r >=#     AND p.petroMag_r <#
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE #<p.ra<#      AND # <p.dec<#      AND s.clean=#     AND p.psfMag_r - p.cModel_r >=#     AND p.petroMag_r <#
SELECT TOP #  objid,ra,dec,u,g,r,i,z FROM Star WHERE  r BETWEEN # AND #  AND ra between # and #  AND dec between # and #
SELECT TOP # G.cx, G.cy, G.cz, p.u, p.g, p.r, p.i, p.z, G.objID, G.modelMag_u, G.modelMag_g, p.petroR5#_g, p.petroR5#_u, p.petroR5#_r, p.petroR5#_i, p.petroR5#_z, G.ra, G.dec  FROM GALAXY as G JOIN SpecObj AS s ON s.bestobjid = G.objid JOIN PhotoObj AS p ON s.bestobjid = p.objid WHERE (G.Flags
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.psfMag_g,p.psfMag_i,p.psfMag_r,p.psfMag_u,p.psfMag_z,p.psfMagErr_g,p.psfMagErr_i,p.psfMagErr_r,p.psfMagErr_u,p.psfMagErr_z  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
select top # * from [mydb]
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  ((mngtarg1 != # or mngtarg3 != #)  and (drp3qual < #)  and (ifudesignsize = #)  and (nsa_z > #)  and (nsa_elpetro_mass >#e1#))
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
INSERT INTO #upload values
INSERT INTO #upload values ( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #,  #),( #, #,  #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #,  #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),( #, #, #),( #, #, #),( #, #, #),( #, #,  #),( #, #, #),(
SELECT AlbumId, UnitPrice FROM chinook.Track
SELECT * FROM chinook.Artist
SELECT AlbumId, Title, ArtistId FROM chinook.Album
SELECT * FROM chinook.MediaType
SELECT AlbumId FROM chinook.Track
SELECT GenreId, MediaTypeId FROM chinook.Track
SELECT * FROM chinook.Genre
SELECT SUBSTRING(Name, #, #) FROM chinook.Artist
SELECT Bytes, Milliseconds, MediaTypeId FROM chinook.Track
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT TOP # p.objId,p.ra,p.dec,p.petroMag_r,p.modelMag_g, p.modelMag_r,p.dered_r,p.dered_g,p.petroR5#_r,p.specObjID   FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE #<p.ra<#      AND # <p.dec<#      AND s.clean=#     AND p.PSFMag_r
SELECT * FROM mydb
SELECT   p.objid,p.ra,p.dec,p.r,   s.specobjid,s.z,   dbo.fSpecZWarningN(s.zWarning) as warning,   s.plate, s.mjd, s.fiberid   FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE   p.ra < #+# and p.ra > #-#   AND p.dec < #+# and p.dec > #-#
SELECT   TOP # RA, DEC, VAR_A, VAR_GAMMA, VAR_CHI2  FROM qsoVarPTF  WHERE qsoVarPTF.VAR_CHI2># AND qsoVarPTF.VAR_A>#
SELECT u.up_name as [name],   &&& + cast(p.objId as varchar(#)) + &&&+ cast(p.objId as varchar(#)) + &&& as objID, p.ra, p.dec,   dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID and p.mode=#  ORDER BY x.up_id
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice,          albums.ArtistName as Artist         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice, ar.Name as ArtistName         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         INNER JOIN chinook.Artist as ar         ON ar.ArtistId = a.ArtistId) albums         GROUP BY albums.album, ArtistName         ORDER BY AlbumPrice DESC
SELECT albums.album as album, count(albums.album) as num         FROM (SELECT a.Title AS album         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album
SELECT DISTINCT g.Name AS Genre, mt.Name AS type          FROM chinook.Track AS t          INNER JOIN chinook.MediaType AS mt          ON t.MediaTypeId = mt.MediaTypeId          INNER JOIN chinook.Genre as g          ON t.GenreId = g.GenreId          ORDER BY Genre
SELECT SUBSTRING(Name, #, #) as initial,         count(*) as num         FROM chinook.Artist         GROUP BY SUBSTRING(NAME, #, #)
SELECT t.Milliseconds AS time, t.Bytes AS size, mt.Name AS type          FROM chinook.Track AS t          INNER JOIN chinook.MediaType AS mt          ON t.MediaTypeId = mt.MediaTypeId
SELECT objID, htmID, z, ra, dec, cx, cy, cz, class, subClass, type, survey, programname FROM SpecPhoto WHERE htmid*# & # < (# * #)
select statement: ,# #,#,#,#,#,#,#,#/#/# #:#:# PM,#,#.#,skyserver.sdss.org,SDSS4E,BestDR1#_SSD,SkyserverWS.SearchTools.RadialSearch,#,#,#,SELECT TOP # p.objid
select TOP # albums.AlbumName as AlbumName, albums.ArtistName as ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName, ArtistName ORDER BY AlbumPrice DESC
select albums.AlbumName as AlbumName, albums.ArtistName as ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName, ArtistName ORDER BY AlbumPrice DESC
SELECT DISTINCT g.Name as Genre, mt.Name as type   FROM chinook.Track AS t     INNER JOIN chinook.MediaType AS mt     ON t.MediaTypeId = mt.MediaTypeId    INNER JOIN chinook.Genre as g     ON t.GenreId = g.GenreId ORDER by Genre
select DISTINCT albums.AlbumName, count(albums.AlbumName) numTracks FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName
SELECT SUBSTRING(Name, #, #) AS Initial, count(*) as num from chinook.Artist group by SUBSTRING(Name, #, #)
SELECT t.Milliseconds as time, t.Bytes as size, mt.Name as type   FROM chinook.Track AS t     INNER JOIN chinook.MediaType AS mt     ON t.MediaTypeId = mt.MediaTypeId
select TOP # albums.AlbumName as AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName ORDER BY AlbumPrice DESC
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice,          albums.ArtistName as Artist         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice, ar.Name as ArtistName         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         INNER JOIN chinook.Artist as ar         ON ar.ArtistId = a.ArtistId) albums         GROUP BY albums.album, Artist         ORDER BY AlbumPrice DESC
SELECT u, g, r, i, z FROM Galaxy WHERE htmid*# & # < (# * .#)
SELECT u, g, r, i, z FROM Galaxy WHERE htmid*# & # < (# * #)
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice,          albums.ArtistName as Artist         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice, ar.Name as ArtistName         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         INNER JOIN chinook.Artist as ar         ON ar.ArtistId = a.ArtistId) albums         GROUP BY albums.album         ORDER BY AlbumPrice DESC
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice,          albums.ArtistName as Artist         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice, art.Name as ArtistName         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         INNER JOIN chinook.Artist as ar         ON ar.ArtistId = a.ArtistId) albums         GROUP BY albums.album         ORDER BY AlbumPrice DESC
SELECT u.up_up_id as up_id, dbo.fDistanceEq(u.up_ra,u.up_dec,p.ra,p.dec) as distance,p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd FROM #upload u JOIN #x x ON x.up_id = u.up_id JOIN PhotoObj p ON p.objID = x.objID ORDER BY u.up_id,distance
select TOP # albums.AlbumName as AlbumName, albums.ArtistName as ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName as AlbumName, albums.ArtistName as ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY ArtistName GROUP BY AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName as AlbumName, albums.ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName as AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON t.ArtistId = ar.ArtistId ) albums GROUP BY AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName as AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId GROUP BY ArtistName ) albums GROUP BY AlbumName ORDER BY AlbumPrice DESC
select ra,dec from specObj where ra BETWEEN # and # AND dec BETWEEN # and #
select top # * from [SDSSspecgalsDR8]
select TOP # albums.AlbumName, albums.ArtistName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name as ArtistName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY albums.AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName, abcount(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, ar.Name, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY albums.AlbumName ORDER BY AlbumPrice DESC
select TOP # albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM ( SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice FROM chinook.Track AS t INNER JOIN chinook.Album as a ON t.AlbumId = a.AlbumId INNER JOIN chinook.Artist as ar ON a.ArtistId = ar.ArtistId ) albums GROUP BY albums.AlbumName ORDER BY AlbumPrice DESC
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers --- basic spectral data S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr, --- some useful imaging parameters G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r, --- line fluxes for BPT diagram and other derived spec.parameters GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
select TOP # albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER BY AlbumPrice DESC
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album         ORDER BY AlbumPrice DESC
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album         ORDER BY AlbumPrice DESCENDING
select DISTINCT TOP # albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER BY AlbumPrice DESC
select DISTINCT albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER BY AlbumPrice DESC
SELECT TOP # albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album
select TOP # DISTINCT albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER BY AlbumPrice DESC
SELECT albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album         LIMIT #
select DISTINCT albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER BY AlbumPrice DESC     LIMIT #
select DISTINCT albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName     ORDER DESC     LIMIT #
SELECT albums.album as album, count(albums.album) as num, SUM(albums.TrackPrice) as AlbumPrice         FROM (SELECT a.Title AS album, t.UnitPrice as TrackPrice         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId) albums         GROUP BY albums.album
select DISTINCT albums.AlbumName, count(albums.AlbumName) as NumSongs, sum(albums.TrackPrice) as AlbumPrice FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName
select DISTINCT albums.AlbumName, count(albums.AlbumName), sum(albums.TrackPrice) FROM (SELECT a.Title as AlbumName, t.UnitPrice as TrackPrice   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName
select DISTINCT albums.AlbumName, count(albums.AlbumName) FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName
select albums.AlbumName, count(albums.AlbumName) FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums     GROUP BY albums.AlbumName
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers --- basic spectral data S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr, --- some useful imaging parameters G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r, --- line fluxes for BPT diagram and other derived spec.parameters GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
select albums.AlbumName, count(albums.AlbumName) FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId group by a.Title) albums
select albums.AlbumName, count(albums.AlbumName) FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId) albums
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_ flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
SELECT a.Title AS album,         count(a.Title) as num         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         ORDER BY a.Title
SELECT s.specObjID,s.h_alpha_eqw,s.h_alpha_eqw_err,s.h_beta_eqw, s.h_beta_eqw_err,s.nii_#_eqw, s.nii_#_eqw_err,s.oiii_#_eqw,s.oiii_#_eqw_err,  s.h_alpha_flux,s.h_alpha_flux_err,s.h_beta_flux,s.h_beta_fluz_err,s.nii_#_flux, s.nii_#_flux_err,s.oiii_#_flux,s.oiii_#_flux_err,i.specObjID,  FROM PhotoObjAll JOIN galSpecLine AS s ON s.specObjID = g.specObjID JOIN galSpecInfo AS s ON i.specObjID = g.specObjID WHERE  g.ra BETWEEN # AND #
SELECT a.Album AS album,         count(a.AlbumId) as num         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         ORDER BY a.Album
select AlbumName, count(AlbumName) FROM (SELECT a.Title as AlbumName   FROM chinook.Track AS t    INNER JOIN chinook.Album as a     ON t.AlbumId = a.AlbumId)
SELECT a.Album AS album,         count(a.AlbumId) as num,         FROM chinook.Track AS t         INNER JOIN chinook.Album AS a         ON a.AlbumId = t.AlbumId         ORDER BY a.Album
SELECT s.specObjID,s.h_alpha_eqw,s.h_alpha_eqw_err,s.h_beta_eqw, s.h_beta_eqw_err,s.nii_#_eqw, s.nii_#_eqw_err,s.oiii_#_eqw,s.oiii_#_eqw_err,  s.h_alpha_flux,s.h_alpha_flux_err,s.h_beta_flux,s.h_beta_fluz_err,s.nii_#_flux, s.nii_#_flux_err,s.oiii_#_flux,s.oiii_#_flux_err,i.specObjID,  FROM PhotoObjAll AS g JOIN galSpecLine AS s ON s.specObjID = g.specObjID JOIN galSpecInfo AS s ON i.specObjID = g.specObjID WHERE  g.ra BETWEEN # AND #
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers --- basic spectral data S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr, --- some useful imaging parameters G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r, --- line fluxes for BPT diagram and other derived spec.parameters GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_ flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND  S.z > #;
select #*floor(milliseconds/#) as durationSec ,      count(*) as num   from chinook.Track  group by floor(milliseconds/#)  order by durationSec
select * from zooConfidence where objid=#
select * from zoo2Stripe8#Coadd2 where dr8objid=#
select * from zoo2Stripe8#Coadd1 where dr8objid=#
select * from zoo2MainSpecz where dr8objid=#
select ra, dec, u, TAI_u from photoObj where run BETWEEN # and #
SELECT DISTINCT g.Name as Genre, mt.Name as type   FROM chinook.Track AS t     INNER JOIN chinook.MediaType AS mt     ON t.MediaTypeId = mt.MediaTypeId    INNER JOIN chinook.Genre as g     ON t.GenreId = g.GenreId
SELECT g.Name as Genre, mt.Name as type   FROM chinook.Track AS t     INNER JOIN chinook.MediaType AS mt     ON t.MediaTypeId = mt.MediaTypeId    INNER JOIN chinook.Genre as g     ON t.GenreId = g.GenreId
select ra, dec,u,g,r,i,z from photoObj where run between # and #
SELECT g.Name as Genre, mt.Name as type   FROM chinook.Track AS t     INNER JOIN chinook.MediaType AS mt     ON t.MediaTypeId = mt.MediaTypeId    INNER JOIN chinnook.Genre as g     ON t.GenreId = g.GenreId
select ra,dec,bestobjID from specObj where ra BETWEEN # and # AND dec BETWEEN # and # AND class = &&&
select ra,dec from specObj, class = GALAXY
select ra,dec from specObj class = GALAXY where ra BETWEEN # and # AND dec BETWEEN # and #
select ra,dec from specObj class = 'GALAXY
SELECT SUBSTRING(Name, #, #) as initial,         count(*) as num         FROM chinook.Artist         GROUPBY SUBSTRING(NAME, #, #)
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT SUBSTRING(Name, #, #) as initial         count(*) as num         FROM chinook.Artist         GROUPBY SUBSTRING(NAME, #, #)
SELECT SUBSTRING(Name, #, #) AS Initial ,      count(*) as num   from chinook.Artist  group by SUBSTRING(Name, #, #)
SELECT SUBSTRING(Name, #, #) AS Initial ,      count(*) as num   from chinook.Artist  group by Initial
SELECT SUBSTRING(Name, #, #) AS Initial ,      count(*) as num   from chinook.Artist  group by Initial  order by Initial
SELECT SUBSTRING(Name, #, #) AS Initial ,      count(*) as num   from chinook.Artist  group by Initial  order by Inital
SELECT SUBSTRING(name, #, #) AS Initial ,      count(*) as num   from chinook.Artist  group by Initial  order by Inital
SELECT t.Milliseconds AS time, t.Bytes AS size, mt.Name AS type          FROM chinook.Track AS t          INNER JOIN chinook.MediaType AS mt          ON time.MediaTypeId = mt.MediaTypeId
SELECT t.Milliseconds AS time,                  t.Bytes AS size,                  mt.Name AS type          FROM chinook.Track AS t          INNER JOIN chinook.MediaType AS mt          ON time.MediaTypeId = mt.MediaTypeId
SELECT top # objid, ra, dec, psfmag_i-extinction_i AS mag_i, psfmag_r-extinction_r AS mag_r, z  FROM SpecPhoto  WHERE   (class = &&&)
SELECT Milliseconds as time, Bytes as size, MediaTypeId as type FROM chinook.Track
SELECT TOP # G.objID, GN.distance  FROM Galaxy as G  JOIN dbo.fGetNearbyObjEq(#.,#, #) AS GN  ON G.objID = GN.objID  ORDER BY distance
select Milliseconds as time ,      Bytes as size ,      MediaTypeId as type    from chinook.Track
SELECT Miliseconds, Bytes FROM chinook.Track
select milliseconds as time ,      bytes as size   from chinook.Track
SELECT TOP #   objID, ra, dec,   sqrt( power(rowv,#) + power(colv, #) ) as velocity   FROM PhotoObj   WHERE   (power(rowv,#) + power(colv, #)) > #   AND rowv != # and colv != #
select * from zooSpec where objid=#
select * from zooNoSpec where objid=#
select * from zooMonochromeBias where objid=#
select * from zoo2MainPhotoz where dr8objid=#
SELECT SUM(Track.UnitPrice) AS Total Price
SELECT COUNT(SUBSTRING(Name,#,#)), SUBSTRING(Name,#,#) AS letter FROM chinook.Artist GROUP BY SUBSTRING(Name,#,#)
SELECT Milliseconds, Bytes, MediaTypeId FROM chinook.Track WHERE MediaTypeID = #
SELECT mangaID,manga_tileid,ifudesignsize  FROM mangatarget  WHERE (manga_target1 & (power(#,#)) != #) AND manga_tileid > # AND IFUDESIGNSIZE > #
select * from SpecLineIndex where specObjId=#
SELECT p.objid, p.dered_u AS u, p.psfMagErr_u as u_err, p.dered_g AS g, p.psfMagErr_g as g_err, p.dered_r AS r, p.psfMagErr_r as r_err, p.dered_i AS i, p.psfMagErr_i as i_err, p.dered_z AS z, p.psfMagErr_z as z_err FROM photoObj p JOIN dbo.fGetNearbyObjEq(#, #, #) n ON p.objid = n.objID WHERE p.type = # AND p.psfMag_g BETWEEN # AND # AND p.psfMag_u/p.psfMagerr_u > # AND p.psfMag_g/p.psfMagerr_g > # AND p.psfMag_r/p.psfMagerr_r > # AND p.psfMag_i/p.psfMagerr_i > # AND p.psfMag_z/p.psfMagerr_z > #
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_r, type_r, psfMagErr_r FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_u, type_u, psfMagErr_u FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID,     S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,    G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,    GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM specObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
select * from ELRedshift where specObjId=#
select * from XCRedshift where specObjId=#
select * from SpecLine where specObjId=#
select * from PhotoZ where objId=#
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM specobj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM galSpec S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM galSpecObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM GSE.specObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID, --- basic identifiers  --- basic spectral data  S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  --- some useful imaging parameters  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  --- line fluxes for BPT diagram and other derived spec.parameters  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID --- add some quality cuts to get rid of obviously bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_g, type_g, psfMagErr_g FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT p.objid, p.psfMag_u AS u, p.psfMagErr_u as u_err, p.psfMag_g AS g, p.psfMagErr_g as g_err, p.dered_r AS r, p.psfMagErr_r as r_err, p.dered_i AS i, p.psfMagErr_i as i_err, p.dered_z AS z, p.psfMagErr_z as z_err FROM photoObj p JOIN dbo.fGetNearbyObjEq(#, #, #) n ON p.objid = n.objID WHERE p.type = # AND p.psfMag_g BETWEEN # AND # AND p.psfMag_u/p.psfMagerr_u > # AND p.psfMag_g/p.psfMagerr_g > # AND p.psfMag_r/p.psfMagerr_r > # AND p.psfMag_i/p.psfMagerr_i > # AND p.psfMag_z/p.psfMagerr_z > #
SELECT * FROM dr1#_apr1#_#_#_#
SELECT * FROM dr1#_apr1#_#_mp1_#
SELECT * FROM dr1#_apr1#_#_m3_#
SELECT ALL  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,p.type,  s.class, s.z as redshift, s.class FROM PhotoPrimary AS p  JOIN SpecObj AS s ON s.class = &&& WHERE   p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND p.type = #
select s.z,s.ra,s.dec as redshift into mydb.dr1#_apr1#_#_#_# from galaxy p, specobj s, dbo.fgetNearByObjEq(#,#,#) n where p.objid=s.bestobjid and p.objid=n.objid and s.bestobjid=n.objid and s.z BETWEEN # AND #
SELECT  G.ra, G.dec, S.mjd, S.plate, S.fiberID,     S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,    G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r,  G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g,  G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i,  G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,    GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux,  GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err,  GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux,  GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass,  GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM specObj S CROSS APPLY   dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G,  GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX,   GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
select s.z,s.ra,s.dec as redshift into mydb.dr1#_apr1#_#_mp1_# from galaxy p, specobj s, dbo.fgetNearByObjEq(#,#,#) n where p.objid=s.bestobjid and p.objid=n.objid and s.bestobjid=n.objid and s.z BETWEEN # AND #
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND # AND p.g BETWEEN # AND # AND p.r BETWEEN # AND # AND p.i BETWEEN # AND # AND p.z BETWEEN # AND #
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT AlbumId, Title FROM chinook.Album
select name from sysobjects where type=&&& and category=# order by name asc
select name from sysobjects where xtype in (N&&&, N&&&, N&&&, N&&&, N&&&) order by name asc
SELECT G.ra, G.dec, S.mjd, S.plate, S.fiberID,   S.z, S.zErr, S.rChi2, S.velDisp, S.velDispErr,  G.extinction_r, G.petroMag_r, G.psfMag_r, G.psfMagErr_r, G.modelMag_u, modelMagErr_u, G.modelMag_g, modelMagErr_g, G.modelMag_r, modelMagErr_r, G.modelMag_i, modelMagErr_i, G.modelMag_z, modelMagErr_z, G.petroR5#_r, G.petroR9#_r,  parameters GSL.nii_#_flux, GSL.nii_#_flux_err, GSL.h_alpha_flux, GSL.h_alpha_flux_err, GSL.oiii_#_flux, GSL.oiii_#_ flux_err, GSL.h_beta_flux, GSL.h_beta_flux_err, GSL.h_delta_flux, GSL.h_delta_flux_err, GSX.d4#, GSX.d4#_err, GSE.bptclass, GSE.lgm_tot_p5#, GSE.sfr_tot_p5#, G.objID, GSI.specObjID INTO mydb.SDSSspecgalsDR8 FROM SpecObj S CROSS APPLY dbo.fGetNearestObjEQ(S.ra, S.dec, #) N, Galaxy G, GalSpecInfo GSI, GalSpecLine GSL, GalSpecIndx GSX, GalSpecExtra GSE WHERE N.objID = G.objID AND GSI.specObjID = S.specObjID AND GSL.specObjID = S.specObjID AND GSX.specObjID = S.specObjID AND GSE.specObjID = S.specObjID  bad measurements AND (G.petroMag_r > # AND G.petroMag_r < #) AND (G.modelMag_u-G.modelMag_r) > # AND (G.modelMag_u-G.modelMag_r) < # AND (modelMag_u > # AND modelMag_u < #) AND  (modelMag_g  >  #  AND  modelMag_g  <  #) AND  (modelMag_r  >  #  AND  modelMag_r  <  #) AND  (modelMag_i  >  #  AND  modelMag_i  <  #) AND  (modelMag_z  >  #  AND  modelMag_z  <  #) AND  S.rChi2 < # AND  (S.zErr > #  AND S.zErr < #) AND   S.z > #;
select top # c.Title as &&&, c.Name as &&&, c.NumberOfTracks as Tracks, c.AlbumPrice as &&&   from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c  order by AlbumPrice desc
select top # c.AlbumPrice as &&&, c.NumberOfTracks as Tracks, c.Title as &&&, c.Name as &&&  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c  order by AlbumPrice desc
SELECT p.objid, p.type, p.clean, p.ra, p.dec, p.psfMag_u, p.psfMag_g, p.psfMag_r, p.psfMag_i, p.psfMag_z, p.petroR9#_u, p.petroR9#_g, p.petroR9#_r, p.petroR9#_i, p.petroR9#_z, p.psffwhm_u, p.psffwhm_g, p.psffwhm_r, p.psffwhm_i, p.psffwhm_z, p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, pz.z, pz.zErr FROM PhotoObj AS p , dbo.fGetNearbyObjEq(#, #, #) AS n LEFT JOIN Photoz AS pz ON pz.objID = n.objID WHERE n.objID = p.objID
select top # c.AlbumPrice as &&&, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c  order by AlbumPrice desc
select top # c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by AlbumPrice desc
select c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by AlbumPrice desc #
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
select c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by AlbumPrice desc
select c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by AlbumPrice DESC
select c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by (AlbumPrice) DESC
select Album.Title, Count(*) as TrackCount from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Album.Title
select top # Album.Title, Count(*) as TrackCount from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Album.Title
select c.AlbumPrice, c.NumberOfTracks, c.Title, c.Name  from (select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId) c order by (AlbumPrice DESC)
select top #Album.Title, Count(*) as TrackCount from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Album.Title
select p.stable_id   ,    cam.attr_id,cp.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp      on cp.internal_id=p.internal_id     and cp.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&& union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&
select * from   openquery([#.#],&&&'paac_jhu_#&&& union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join sample s      on s.patient_id=p.internal_id    inner join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
select Track.AlbumId, Album.Title, Count(*) as TrackCount from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title
select Track.AlbumId, Album.Title, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title
select gp.stable_id as genetic_profile_id ,      gp.name as genetic_profile_name ,      gp.description as genetic_profile_description ,      cs.cancer_study_id ,      gp.genetic_alteration_type ,      gp.show_profile_in_analysis_tab   from cancer_study cs   join genetic_profile gp     on gp.cancer_study_id=cs.cancer_study_id  where cs.cancer_study_identifier=&&&
select * from OPENQUERY([#.#],&&&' &&&) as case_ids   from cancer_study cs     inner join sample_list sl       on sl.CANCER_STUDY_ID=cs.CANCER_STUDY_ID   join sample_list_list sll      on sl.list_id=sll.list_id   join sample s     on s.internal_id=sll.sample_id where cs.cancer_study_identifier=&&&paac_jhu_#&&& group by sl.stable_id,sl.cancer_study_id order by #,#') a
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.ArtistId
select Track.AlbumId, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId
select Track.AlbumId, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Track.Name
select sl.stable_id as case_list_id, max(sl.name) as case_list_name ,      max(sl.description) as case_list_description ,      sl.cancer_study_id ,      STRING_AGG(s.stable_id ,&&&) as case_ids   from cancer_study cs     inner join sample_list sl       on sl.CANCER_STUDY_ID=cs.CANCER_STUDY_ID   join sample_list_list sll      on sl.list_id=sll.list_id   join sample s     on s.internal_id=sll.sample_id where cs.cancer_study_identifier=&&& group by sl.stable_id,sl.cancer_study_id order by #,#
select Album.Title as AlbumTitle, Track.AlbumId, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title, Track.Name
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId  inner join chinook.Artist on Album.ArtistId = Artist.Name
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title, Track.Name
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title, Track.Name,
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Track.AlbumId, Album.Title, Track.Name,
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId) Track.AlbumId, Album.Title, Track.Name,
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Count(Track.AlbumId)
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Count(Track.AlbumId), Track.AlbumId, Album.Title, Track.Name
select CANCER_STUDY_IDENTIFIER as cancer_study_id,name,description from cancer_study order by name
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks  from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name as TrackName, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Album.Title, Track.AlbumId, Track.Name
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Album.Title, Track.AlbumId, Track.Name
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId  from (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&  From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a  group by AlbumId) b  inner join chinook.Album on b.AlbumId = Album.AlbumId
select Album.Title as AlbumTitle, Track.AlbumId, Track.Name, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Track.Name, Album.Title
select Track.AlbumId, Track.Name, Album.Title as AlbumTitle from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Track.Name, Album.Title
select Track.AlbumId, Track.Name, Album.Title as AlbumTitle, Count(*) as Count from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Track.Name, Album.Title
select Track.AlbumId, Album.Title as AlbumTitle from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.AlbumId, Album.Title
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId inner join chinook.Artist
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId inner join chinook.Artist
select a.Genre_Name, a.Media_Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId) a Order By Genre_Name
select a.ID, a.Genre_Name, a.Media_Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId) a Order By Genre_Name
select a.ID, a.Genre_Name, a.Media_Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId) a Order By ID
select a.Genre_Name, a.ID from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId) a Order By ID
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff,a.logg, a.metals, a.alphafe,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = #   and a.teff > # and a.metals < #
select a.Genre_Name, a.ID from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.Genre_Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as Genre_Name, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.Genre_Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.`Genre Name` from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select `a.Genre Name` from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select [a.Genre Name] from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.[Genre Name] from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.&&& from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select a.Genre Name from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
select &&& from (select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID) a
SELECT * FROM Aliy_#_A1#_iiii
SELECT * FROM Aliy_#_A1#_vii
select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Order By ID
select count(*) as NumberOfAlbums, a.NumberOfTracks from (select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId) a group by NumberOfTracks
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId inner join chinook.Artist on Album.ArtistId = Artist.Name
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_vii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #   AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
select s.z,s.ra,s.dec as redshift into mydb.dr1#_apr1#_#_m3_# from galaxy p, specobj s, dbo.fgetNearByObjEq(#,#,#) n where p.objid=s.bestobjid and p.objid=n.objid and s.bestobjid=n.objid and s.z BETWEEN # AND #
select top # Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title  as AlbumTitle from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Sum(Track.UnitPrice) desc
select Genre.Name as GenreName, MediaType.Name as MediaTypeName, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
SELECT * FROM Aliy_#_A1#_vi
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId inner join chinook.Artist on Album.ArtistId= Artist.Name
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_vi    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from   (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId inner join chinook.Artist on b.ArtistId= Artist.Name
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_v    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_iv    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId from  (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from  (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b inner join chinook.Album on b.AlbumId = Album.AlbumId
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_iiii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks, Album.Title, Album.ArtistId, Artist.ArtistId as AID, Artist.Name from  (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class into mydb.Aliy_#_A1#_iii    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
SELECT s.specObjID, s.ra, s.dec, s.z, s.zErr, s.class   into mydb.Aliy_#_A1#    FROM SpecPhotoAll s    WHERE s.ra BETWEEN # AND #    AND s.dec BETWEEN # AND #   AND s.z BETWEEN # AND #   AND s.class = &&&
select b.AlbumId, b.AlbumPrice, b.NumberOfTracks from  (select a.AlbumId, Sum (a.UnitPrice) as AlbumPrice, count(*) as NumberOfTracks from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b
select b.AlbumId, b.Album Price, b.Number of Tracks from  (select a.AlbumId, Sum (a.UnitPrice) as &&&, count(*) as &&& from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b
select b.AlbumId, b.Album Price, b.Number Of Tracks from  (select a.AlbumId, Sum (a.UnitPrice) as &&&, count(*) as &&& from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b
select b.AlbumId, b.&&&, b.&&& from  (select a.AlbumId, Sum (a.UnitPrice) as &&&, count(*) as &&& from   (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a   group by AlbumId) b
SELECT DISTINCT p.ra, p.dec, p.clean, p.u, p.g, p.r, p.i, p.z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
select top # Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title  from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Sum(Track.UnitPrice) desc
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title top # from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Sum(Track.UnitPrice) desc
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Sum(Track.UnitPrice) desc
SELECT * FROM Aliy_#_A1#
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Album.Title order by Sum(Track.UnitPrice) desc
select a.AlbumId, Sum (a.UnitPrice) as &&&, count(*) as &&& from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order by AlbumId
select a.AlbumId, Sum (a.UnitPrice) as &&&, count(*) as &&&, from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order by AlbumId
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Album.Title order by Track.UnitPrice desc  limit #
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Album.Title order by Track.UnitPrice desc limit #
select a.AlbumId, Sum (a.UnitPrice) as &&& from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order by AlbumId
select a.AlbumId, Sum (a.UnitPrice) as Album Price from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order by AlbumId
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Album.Title order by Track.UnitPrice desc
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Album.Title order by Track.UnitPrice asc
select a.AlbumId, Sum (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order by AlbumId
select a.AlbumId, Sum (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId Order By AlbumId
select a.AlbumId, Sum (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Track.UnitPrice desc
select a.AlbumId, a.UnitPrice from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a
select a.AlbumId, a.UnitPrice  (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&&, sum (InvoiceLine.UnitPrice) From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId Group by AlbumId
select a.AlbumId, a.UnitPrice, Sum (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.AlbumId, a.UnitPrice, Sum (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Track.UnitPrice desc
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Track.UnitPrice desc group by Track.UnitPrice, Artist.Name, Album.Title
select Sum(Track.UnitPrice) as AlbumCost, Artist.Name as ArtistName, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title order by Track.UnitPrice desc
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name, Track.UnitPrice, Album.Title order by Track.UnitPrice desc
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group byArtist.Name, Track.UnitPrice, Album.Title order by Track.UnitPrice desc
select a.AlbumId, a.UnitPrice from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a SUM (UnitPrice) group by AlbumId
select a.AlbumId, a.UnitPrice from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a SUM (a.UnitPrice) group by AlbumId
select a.AlbumId, a.UnitPrice, sum (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name, Album.Title
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name desc, Artist.Name, Album.Title
select a.AlbumId, a.UnitPrice from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Artist.Name desc, Artist.Name, Album.Title
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Artist.Name des, Artist.Name, Album.Title
select a.AlbumId from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select count(*) as NumberOfAlbums, a.AlbumId from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select count(*) as NumberOfAlbums, a.AlbumId from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by NumberOfTracks
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Artist.Name
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by AlbumCost
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice, Artist.Name
select a.AlbumId, a.UnitPrice, SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Track.UnitPrice, Artist.Name
select a.AlbumId, a.UnitPrice, SUM (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.AlbumId, a.UnitPrice SUM (a.UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId order by Track.UnitPrice
select a.AlbumId SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.UnitPrice SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.UnitPrice, a.AlbumId SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.UnitPrice
select Artist.Name as ArtistName, Sum(Track.UnitPrice) as AlbumCost, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name, Track.UnitPrice, Album.Title
select Artist.Name as ArtistName, Sum(Track.UnitPrice), Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name, Track.UnitPrice, Album.Title
select Artist.Name as ArtistName, Track.Name, Sum(Track.UnitPrice), Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name, Track.Name, Track.UnitPrice, Album.Title
select a.*, SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.UnitPrice, SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
SELECT * FROM Aliy_#_#
select a SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.* SUM (UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select a.* sum(UnitPrice) from (select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId) a group by AlbumId
select Artist.Name as ArtistName, Track.Name, Track.UnitPrice, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Artist.Name, Track.Name, Track.UnitPrice, Album.Title
select Artist.Name as ArtistName, Track.Name, Track.UnitPrice, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.Name, Track.UnitPrice, Album.Title, Artist.Name
select Track.Name, Track.UnitPrice, Album.Title, Artist.Name as ArtistName from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.Name, Track.UnitPrice, Album.Title, Artist.Name
select Track.Name, Track.UnitPrice, Album.Title, Artist.Name from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.Name, Track.UnitPrice, Album.Title, Artist.Name
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId Group by AlbumId
select Track.Name, Track.UnitPrice, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId inner join chinook.Artist on chinook.Album.ArtistId=chinook.Artist.ArtistId group by Track.Name, Track.UnitPrice, Album.Title
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId as &&& From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.Name, Track.UnitPrice, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId group by Track.Name, Track.UnitPrice, Album.Title
select Track.Name, Album.Title from chinook.Track inner join chinook.Album on chinook.Track.AlbumId=chinook.Album.AlbumId group by Track.Name, Album.Title
select Track.AlbumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.Album, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select AblumId, TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track  Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
SELECT GenreId, MediaTypeId FROM chinook.Tracks
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId From chinook.Track
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId  From chinook.Track Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId  From chinook.* Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId  From chinook Inner Join chinook.InvoiceLine on Track.TrackId = InvoiceLine.TrackId
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId  From chinook.Track Join chinook.InvoiceLine
select Track.AblumId, Track.TrackId, InvoiceLine.UnitPrice, InvoiceLine.TrackId  From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select Album.Title, Album.AlbumId from chinook.Album inner join group by Album.Title, Album.AlbumId
select distinct Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select Title, AlbumId from chinook.Album group by Title, AlbumId
select Title, AlbumId from chinook.Album group by Title
select Title, AlbumId| from chinook.Album group by Title
select TrackId, AlbumId From chinook.Track select TrackId, UnitPrice from chinook.InvoiceLine   Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select distinct Track.AlbumId as &&&, InvoiceLine.TrackId, InvoiceLine.UnitPrice  From chinook.Track Join chinook.InvoiceLine
select distinct Track.AlbumId as &&&, InvoiceLine.TrackId, InvoiceLine.UnitPrice  From chinook.Track Inner Join chinook.InvoiceLine
SELECT DISTINCT survey, programname FROM platex ORDER BY survey
select Genre.Name as GenreName, MediaType.Name as MediaName, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name as GenreName, MediaType.Name as MediaName, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name in asc
select Genre.Name as GenreName, MediaType.Name as MediaName, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId order by Genre.Name, MediaType.Name
select Genre.Name as Genre Name, MediaType.Name as Media Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name, MediaType.Name as MediaName, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name, MediaType.Name1, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name, MediaType.Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
SELECT star.apstar_id,  star.apogee_id, star.ra, star.dec, star.glon, star.glat,  star.apogee_target1, star.apogee_target2,   aspcap.teff,aspcap.logg,aspcap.metals FROM apogeeStar star  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) near on  star.apstar_id=near.apstar_id  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id
select Genre.Name, MediaType.MediaTypeId, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.MediaTypeId
select Genre.Name, MediaType.MediaTypeId, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name, MediaType.Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name
select Genre.Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name
select Genre.Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId group by Genre.Name
select TrackId, AlbumId From chinook.Track select TrackId, UnitPrice from chinook.InvoiceLine
select Genre.Name, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId
select Genre.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId
select a.FL, count(*) as Counts from (select substring(Name,#,#) as FL from chinook.Artist) a group by FL
select Genre.Name, MediaType.Name from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId
select Track.GenreId, Track.MediaTypeId, Genre.Name, MediaType.Name from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId
select TrackId, AlbumId From chinook.Track (select TrackId, UnitPrice from chinook.InvoiceLine) a
select MediaType.Name, Count(*) from chinook.Track inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId
select TrackId, UnitPrice from chinook.InvoiceLine
select MediaType.Name, Count(*) as Count from chinook.Track inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId
select Genre.Name, MediaType.Name, Count(*) as Count from ((chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId);
select Genre.Name, MediaType.Name, Count(*) as Count from ((chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId); group by Genre.Name
select Genre.Name, MediaType.Name, Count(*) as Count from ((chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId), inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId) group by Genre.Name
select Bytes, MilliSeconds from chinook.Track where MediaTypeId = #
select Genre.Name, MediaType.Name, Count(*) as Count from ((chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId) group by Genre.Name
select Genre.Name, MediaType.Name, Count(*) as Count from (chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId) group by Genre.Name
select top # ArtistId, Name from chinook.Artist order by ArtistId
select AlbumId, sum(UnitPrice), Count(*) from chinook.Track where AlbumId < # group by AlbumId order by sum(UnitPrice) desc
select top # AlbumId, Title, ArtistId from chinook.Album order by AlbumId, ArtistId
select MediaTypeId, GenreId from chinook.Track group by MediaTypeId, GenreId order by MediaTypeId, GenreId
select Count(*) from chinook.Track group by AlbumId) select Ct, Count(*) from Num group by Ct
select substring(Name, #, #), Count(*) from chinook.Artist group by substring(Name, #, #)
select Genre.Name, MediaType.Name, Count(*) as Count from (chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) group by Genre.Name
select Genre.Name, Count(*) as Count from (chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) group by Genre.Name
select Genre.Name, Count(*) as Coutn from (chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) group by Genre.Name
select Track.GenreId, Track.MediaTypeId, Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId
select Track.GenreId, Track.MediaTypeId, Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId, MediaTypeId
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*# & #)   < (# * #)
select GenreId, MediaTypeId, Count(*) as Count from ((chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId) inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId)
select GenreId, MediaTypeId, Count(*) as Count from (chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId)
select GenreId, MediaTypeId, Count(*) as Count from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId
select GenreId, MediaTypeId, Count(*) as Count from chinook.Track group by GenreId, MediaTypeId inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId
select GenreId, MediaTypeId, Count(*) as Count from chinook.Track group by GenreId, MediaTypeId inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId; inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId;
select GenreId, MediaTypeId, Count(*) as Count from chinook.Track group by GenreId, MediaTypeId inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId, inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId;
select GenreId, MediaTypeId, Count(*) as Count from chinook.Track group by GenreId, MediaTypeId
SELECT SUBSTRING(Name, #, #) FROM chinook.Artist AS name
select GenreId, MediaTypeId, Count(*) from chinook.Track  group by GenreId, MediaTypeId
select GenreId, MediaTypeId, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId, MediaTypeId
select GenreId, MediaTypeId from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId, MediaTypeId
select a.NumberOfTracks from (select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId) a
select GenreId, MediaTypeId, Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by GenreId, MediaTypeId
select GenreId, MediaTypeId, Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select NumberOfTracks from (select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId)
select count(*) as NumberOfAlbums, NumberOfTracks from (select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId) group by NumberOfTracks
select Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join chinook.Genre on chinook.Track.GenreId=chinook.Genre.GenreId inner join chinook.MediaType on chinook.Track.MediaTypeId=chinook.MediaType.MediaTypeId group by Genre.Name, MediaType.Name
select Genre.Name, MediaType.Name, Count(*) from chinook.Track inner join Genre on chinook.Track.GenreId=chinook.Genre.GenreId group by Genre.Name, MediaType.Name
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId     (group by NumberOfTracks)
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId     group by NumberOfTracks
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId, NumberOfTracks
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId  Group by NumberOfTracks
SELECT
SELECT DISTINCT  Genre.Name AS &&&, MediaType.Name AS Media Name
SELECT Bytes, Milliseconds FROM chinook.Track
SELECT DISTINCT  Genre.Name AS &&&, Track.MediaTypeId AS &&&, MediaType.MediaTypeId AS &&& , MediaType.Name AS Media Name
select temp
select count(*) as Count, * from temp group by NumberOfTracks
select count(*) as NumberOfTracks, AlbumId from chinook.Track group by AlbumId into temp
SELECT u.up_name as [name],   p.objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		 or #='#=A--  
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		&&&#=A--
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		 or #='#=A and &&&=&&&
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		&&&#=A and &&&='#
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		'#=A and &&&=&&&
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		 '#=A &&&
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		&&&#=A '
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		'#=A and #=#
SELECT u.up_name as [name],   &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		 or #='#=A and #=#
select count(*) as Count, AlbumId from chinook.Track group by AlbumId into temp1
select count(*) as Count, AlbumId from chinook.Track group by AlbumId into temp
select count(*) as Count, AlbumId from chinook.Track group by AlbumId
select count(*) as Count, AlbumId from chinook.Track
SELECT Bytes, Milliseconds FROM Track
select count(*) as count, AlbumId from chinook.Track group by AlbumId
select count(*) as count, AlbumId from chinook.Track group by AlbumId group by count
select AlbumId from chinook.Track group by AlbumId, count(*) as count
select AlbumId, count(*) as Count from chinook.Track
select AlbumId from chinook.Track, count(*) as Count
SELECT Artist.Name, SUM(Track.UnitPrice) AS Total Price
select substring(Name,#,#) as FL into temp from chinook.Artist
select FL, count(*) from temp group by FL
SELECT * FROM spec_QSO_#
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Group by Track.MediaTypeId
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Group by MediaTypeId
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Group by &&&
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId Group by M ID
SELECT COUNT(AlbumId) AS Album Count
SELECT        s.specObjID,s.bestObjID,s.targetObjID,       s.ra, s.dec,s.mjd,       s.spectroFlux_u,s.spectroFlux_g,s.spectroFlux_r,       s.spectroFlux_i,s.spectroFlux_z,       s.spectroSynFlux_u,s.spectroSynFlux_g,s.spectroSynFlux_r,       s.spectroSynFlux_i,s.spectroSynFlux_z,       m.specObjID,m.ra,m.dec,       m.psfMag_u,  m.psfMag_g,  m.psfMag_r,  m.psfMag_i,       m.psfMag_z,  m.fiberMag_u,m.fiberMag_g,m.fiberMag_r,       m.fiberMag_i,m.fiberMag_z,s.sourceType,m.type,    s.mjd as smjd, m.mjd as pmjd     INTO mydb.spec_QSO_#     FROM SpecObjAll as s       JOIN SpecPhotoAll as m ON s.SpecObjID=m.SpecObjID     Where s.sourceType=&&&    And m.mjd > #
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaTypeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Cross Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaYpeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Inner Join chinook.genre on Track.GenreId = Genre.GenreId Inner Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
select Track.GenreId as &&&, Genre.GenreId as ID, Genre.Name as &&&, Track.MediaYpeId as &&&, MediaType.MediaTypeId as &&&, MediaType.Name as &&&   From chinook.Track Cross Join chinook.genre on Track.GenreId = Genre.GenreId Cross Join chinook.MediaType on Track.MediaTypeId = MediaType.MediaTypeId
SELECT TOP #  ROW_NUMBER() OVER(ORDER BY z ASC) + # AS Row,   (ROW_NUMBER() OVER(ORDER BY z ASC) % #) + # AS Batch,   bestObjId, z, survey, subclass, ra, dec,   &&& + survey + &&& +  CAST(run2d AS varchar(#)) + &&& + FORMAT(plate, &&&) +  &&& + FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) + &&& AS url,  &&& +   FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) AS specFile FROM specObj WHERE class = &&& AND zWarning = # AND bestObjId > #   AND survey IN (&&&, &&&)  AND snMedian > #  AND (z >= # AND z < #)  AND (htmid*# & #) < (# * #)  ORDER BY z
SELECT TOP #  ROW_NUMBER() OVER(ORDER BY z ASC) AS Row,   (ROW_NUMBER() OVER(ORDER BY z ASC) % #) + # AS Batch,   bestObjId, z, survey, subclass, ra, dec,   &&& + survey + &&& +  CAST(run2d AS varchar(#)) + &&& + FORMAT(plate, &&&) +  &&& + FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) + &&& AS url,  &&& +   FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) AS specFile FROM specObj WHERE class = &&& AND zWarning = # AND bestObjId > #   AND survey IN (&&&, &&&)  AND snMedian > #  AND (z > # AND z < #)  AND (htmid*# & #) < (# * #) ORDER BY z
SELECT TOP #  ROW_NUMBER() OVER(ORDER BY z ASC) + # AS Row,   (ROW_NUMBER() OVER(ORDER BY z ASC) % #) + # AS Batch,   bestObjId, z, survey, subclass, ra, dec,   &&& + survey + &&& +  CAST(run2d AS varchar(#)) + &&& + FORMAT(plate, &&&) +  &&& + FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) + &&& AS url,  &&& +   FORMAT(plate, &&&) + &&& + CAST(mjd AS varchar(#)) +   &&& + FORMAT(fiberid, &&&) AS specFile FROM specObj WHERE class = &&& AND zWarning = # AND bestObjId > #   AND survey IN (&&&, &&&)  AND snMedian > #  AND (z >= # AND z <= #)  AND (htmid*# & #) < (# * #) ORDER BY z
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP #  a.apogee_id,cast(str(a.glon,#,#) as float) glon,cast(str(a.glat,#,#) as float) glat,a.snr,a.vhelio_avg,a.vscatter,q.teff,q.logg,q.m_h,q.alpha_m  FROM apogeeStar as a  JOIN dbo.fgetNearbyApogeeStarEq(#,#,#) AS b ON b.apstar_id = a.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id  JOIN aspcapStar as q ON a.apstar_id=q.apstar_id
SELECT Title AS Album Title
select p.run, p.camcol, p.field from STAR as p   inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
SELECT COUNT(AlbumId), AlbumId AS Album FROM chinook.Track GROUP BY AlbumId
SELECT COUNT(AlbumId), AlbumId AS Album FROM chinook.Track GROUP BY Album
select distinct survey
SELECT Track.GenreId AS &&&, Genre.GenreId AS ID, Genre.Name AS &&&, Track.MediaTypeId AS &&&, MediaType.MediaTypeId AS &&& , MediaType.Name AS Media Name
select p.stable_id   ,    cam.attr_id,cp.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp      on cp.internal_id=p.internal_id     and cp.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&& union select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&
select * from PhotoObj where objId=#
select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&
select p.stable_id   ,    cam.attr_id,cp.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp      on cp.internal_id=p.internal_id     and cp.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&
SELECT count(*) FROM SpecObj  WHERE class = &&&   AND zWarning = #   and z >= # and z < #   and survey in (&&&, &&&)  and snMedian > #
SELECT Bucket, Minimum+(width*(Bucket-#)) AS Lower,   Minimum+(width*(Bucket)) AS Upper, COUNT(*) AS Count FROM ( SELECT   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&)  ) AS Minimum,  ((  (SELECT MAX(z) *#   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&))  -   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&)))  / #   ) AS Width,  CAST(   (z - (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&))  )  /  ((  (SELECT MAX(z) *#   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&))  -   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&))  ) / #   ) AS INT) + # as Bucket FROM SpecObj WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&)) a GROUP BY Bucket, Minimum, Width ORDER BY Bucket
select name, description from DBObjects where access=&&& and name like &&& or name like &&& and name not like &&& order by name
SELECT count(*)  FROM SpecObj   WHERE class = &&& AND zWarning = # and z >= # and z < # and survey in (&&&, &&&)
SELECT Bucket, Minimum+(width*(Bucket-#)) AS Lower,   Minimum+(width*(Bucket)) AS Upper, COUNT(*) AS Count FROM ( SELECT   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and survey in (&&&, &&&)  ) AS Minimum,  ((  (SELECT MAX(z) *#   FROM SpecObj   WHERE class = &&& AND zWarning = # and survey in (&&&, &&&))  -   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and survey in (&&&, &&&)))  / #   ) AS Width,  CAST(   (z - (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and surveyin (&&&, &&&))  )  /  ((  (SELECT MAX(z) *#   FROM SpecObj   WHERE class = &&& AND zWarning = # and survey in (&&&, &&&))  -   (SELECT MIN(z)   FROM SpecObj   WHERE class = &&& AND zWarning = # and survey in (&&&, &&&))  ) / #   ) AS INT) + # as Bucket FROM SpecObj WHERE class = &&& AND zWarning = # and survey in (&&&, &&&)) a GROUP BY Bucket, Minimum, Width ORDER BY Bucket
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( (flags & dbo.fPhotoFlags(&&&) = #)   and petroR5#_i > #)
SELECT * FROM cmass1#test
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Galaxy  WHERE  ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
INSERT INTO #upload values ( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&, #, #),( #, &&&,
select * from   openquery([#.#],&&&'paac_jhu_#&&& union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
select * from apogeeStar where apstar_id=&&&
SELECT p.objid,p.ra,p.dec,p.g,p.r,p.i, (p.r-p.i) as &&&, (p.g-p.r) as &&&, p.type as obj_ph_type, s.tile, s.boss_target1, s.specobjid, s.class, s.subclass, s.z as redshift into mydb.cmass1#test from PhotoPrimary AS p JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   (modelmag_r-modelmag_i) < #    AND cmodelmag_i BETWEEN # AND #    AND (modelmag_r-modelmag_i) - (modelmag_g-modelmag_r)/#. > #    AND fiber2mag_i < #    AND cmodelmag_i < # + #*((modelmag_r-modelmag_i) - (modelmag_g-modelmag_r)/#. - #)   AND boss_target1 > #   AND class = &&&
SELECT * FROM lowz_web_deftest
SELECT p.objid,p.ra,p.dec,p.g,p.r,p.i, (p.r-p.i) as &&&, (p.g-p.r) as &&&, p.type as obj_ph_type, s.tile, s.boss_target1, p.flags, s.specobjid, s.class, s.subclass, s.z as redshift into mydb.lowz_web_deftest from PhotoPrimary AS p JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   boss_target1 > #   AND class = &&&   AND ABS((modelmag_r - modelmag_i) - (modelmag_g - modelmag_r)/# - #) < #   AND cmodelmag_r BETWEEN # AND #   AND cmodelmag_r < # + (#*(modelmag_g - modelmag_r) + #*((modelmag_r - modelmag_i) - #))/#   AND (psfmag_r - cmodelmag_r) > #
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec,  passive.z as z_noqso, passive.zerr as z_noqso_err,  passive.logmass as passive_logmass,  starforming.logmass as starforming_logmass,  pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive  JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid  JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  (((mngtarg1 & (power(#,#)+power(#,#))) != #)   and ((drp3qual & power(#,#)) = #))
SELECT TOP # G.ObjID, G.u, G.g, G.r, G.i, G.z   FROM Galaxy AS G   JOIN Star AS S   ON G.parentID = S.parentID   WHERE G.parentID > #
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT top # so.bestobjid, so.specobjid, so.plate, so.mjd, so.fiberid,  sp.teffadop, sp.fehadop, sp.loggadop, sp.snr, sp.flag   FROM specobjall so  JOIN sppparams sp ON so.specobjid = sp.specobjid and so.sciencePrimary=#  WHERE sp.teffadop > # and sp.teffadop < #  and fehadop > # and fehadop < #  and loggadop > # and loggadop < #  and sp.flag like &&&  and sp.snr > #
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND #
select top # * from [ngc5#]
SELECT     ra,    dec, dered_u,dered_g,dered_r,dered_i,dered_z    into mydb.Area1Phys3# from PhotoObjAll  Where     ra># and ra<# and dec># and dec<#  And dered_u<# and dered_u>#
select * from OPENQUERY([#.#],   &&&'paac_jhu_#&&& union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id   where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
select * from OPENQUERY([#.#],   &&&'paac_jhu_#&&& union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id   where cs.cancer_study_identifier=&&&paac_jhu_#&&&) a
select * from   openquery([#.#],&&&'paac_jhu_#&&&' union all select p.stable_id   ,    cam.attr_id, cls.attr_value   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id     and cam.patient_attribute=#    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join sample s      on s.patient_id=p.internal_id    left outer join clinical_sample cls      on s.internal_id=cls.internal_id     and cls.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
select * from   openquery([#.#],&&&'paac_jhu_#&&&') a
SELECT TOP # P.ObjID
select top #  S.ra as sdss_ra, S.dec as sdss_dec, W.ra as wise_ra, W.dec as wise_dec,  S.psfmag_r as r, W.w1mpro as w1 from wise_xmatch as X  join wise_allsky as W on X.wise_cntr = W.cntr  join photoTag as S on X.sdss_objid = S.objid where S.nchild = #
select p.stable_id ,      cp.*   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join clinical_patient cp      on cp.internal_id=p.internal_id  where cs.cancer_study_identifier=&&&
SELECT * FROM abell1#_petromagu1
SELECT into mydb.abell1#_petromagu1   objID, ra, dec, z, zErr, class=&&&,   petroMag_u, petroMag_r    FROM SpecPhotoAll      WHERE    ra > # and ra < # and dec > # and dec < #
SELECT into mydb.abell1#_petromagu   objID, ra, dec, z, zErr, class,   petroMag_u, petroMag_g, petroMag_r, petroMag_i, petroMag_z,   extinction_u, extinction_g, extinction_r, extinction_i, extinction_z    FROM SpecPhotoAll      WHERE    ra > # and ra < # and dec > # and dec < #    AND class=&&&
SELECT into mydb.abell1#_petromagu   objID, ra, dec, z, zErr, class,   petroMag_u, petroMag_r    FROM SpecPhotoAll      WHERE    ra > # and ra < # and dec > # and dec < #    AND class=&&&
SELECT TOP # t.thingid, t.ndetect, d.objid, p.psfMag_r, p.psfMagerr_r  FROM thingIndex AS t JOIN detectionindex AS d ON t.thingid = d.thingid JOIN Star AS p ON d.objid = p.objid WHERE t.ndetect > #
SELECT * FROM abell1#_smaller
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.metals, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT top # objID, ra, dec, g, clean FROM PhotoObj WHERE CLEAN=#
SELECT into mydb.abell1#_smaller   objID, ra, dec, z, zErr, class   petroMag_u, petroMag_g, petroMag_r, petroMag_i, petroMag_z,   extinction_u, extinction_g, extinction_r, extinction_i, extinction_z    FROM SpecPhotoAll      WHERE    ra > # and ra < # and dec > # and dec < #    AND class=&&&
SELECT * FROM abell1#
SELECT into mydb.abell1#   objID, ra, dec, z, zErr, class   petroMag_u, petroMag_g, petroMag_r, petroMag_i, petroMag_z,   extinction_u, extinction_g, extinction_r, extinction_i, extinction_z    FROM SpecPhotoAll      WHERE    ra > # and ra < # and dec > # and dec < #    AND class=&&&
SELECT TOP # specObjID, z into mydb.MyTable from SpecObj    WHERE class = &&& AND zWarning = #
select top # * from [MyTable]
SELECT * FROM dbo.fFootprintEq( #,#,#)
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://preprod.skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT  p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.r BETWEEN # AND #
SELECT TOP #
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.param_m_h, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
INSERT INTO #upload values
select * from SiteConstants
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
INSERT INTO #upload values
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z>#
select ra,dec,psfMag_u,psfmagerr_u,psfMag_g,psfMagerr_g,psfMag_r,psfMagerr_r,psfMag_i,psfMagerr_i,psfMag_z,psfMagerr_z from PhotoPrimary where ra between # and # and dec between # and # and psfMag_r<#
SELECT Count(sub.AlbumId) as NumAlbums, sub.NumTracksPerAlbum as NumTracksPerAlbum FROM ( SELECT Count(TrackId) as NumTracksPerAlbum, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.NumTracksPerAlbum
SELECT sub.AlbumId, Album.Title AS AlbumName, sub.NumTracks, sub.TotalPrice, Artist.Name AS ArtistName FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY TotalPrice DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId INNER JOIN chinook.Artist AS Artist ON Artist.ArtistId = Album.ArtistId
select MediaTypeId, GenreId from chinook.Track
SELECT * FROM ( SELECT Count(TrackId) as NumTracks, AlbumId FROM chinook.Track GROUP BY AlbumId) sub ORDER BY sub.NumTracks
select Name, SUBSTRING(Name, #, #) AS FirstCharacter from chinook.Artist GROUP BY Name
select MediaTypeId, Bytes, Milliseconds from chinook.Track
SELECT Count(TrackId), AlbumId, Sum(UnitPrice) FROM chinook.Track GROUP BY AlbumId ORDER BY Sum(UnitPrice) DESC
SELECT Count(TrackId), AlbumId, Sum(UnitPrice) FROM chinook.Track GROUP BY AlbumId ORDER BY Sum(UnitPrice)
SELECT Count(TrackId), AlbumId, Sum(UnitPrice) FROM chinook.Track GROUP BY AlbumId
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.r BETWEEN # AND #
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.r BETWEEN # AND #
SELECT Count(TrackId), AlbumId FROM chinook.Track GROUP BY AlbumId
SELECT sub.AlbumId, Album.Title AS AlbumName, sub.NumTracks, sub.TotalPrice, Artist.Name AS ArtistName FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId INNER JOIN chinook.Artist AS Artist ON Artist.ArtistId = Album.ArtistId
SELECT u.up_name as [name],     &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id 		'A=#
SELECT u.up_name as [name],     &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT sub.AlbumId, Album.Title, sub.NumTracks, sub.TotalPrice, Artist.Name FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId INNER JOIN chinook.Artist AS Artist ON Artist.ArtistId = Album.ArtistId
SELECT sub.AlbumId, Album.Title, sub.NumTracks, sub.TotalPrice FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId INNER JOIN chinook.Artist AS Artist ON Artist.ArtistId = Album.ArtistId
SELECT sub.AlbumId, Album.Title, sub.NumTracks, sub.TotalPrice FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId INNER JOIN chinook.Artist AS Album ON Artist.ArtistId = Album.ArtistId
SELECT sub.AlbumId, Album.Title, sub.NumTracks, sub.TotalPrice FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId
SELECT sub.NumTracks, sub.AlbumId, Album.Title FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId
SELECT sub.NumTracks, Track.AlbumId, Album.Title FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId
SELECT sub.NumTracks, Track.AlbumId, Album.Title FROM ( SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC) sub, INNER JOIN chinook.Album AS Album ON sub.AlbumId = Album.AlbumId
SELECT Track.AlbumId, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId
SELECT Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId
SELECT Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.AlbumId
SELECT Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.AlbumId
SELECT TOP # Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.AlbumId
SELECT NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId
SELECT TOP # Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.AlbumId ORDER BY Track.AlbumId DESC
SELECT TOP # Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice FROM chinook.Track AS Track INNER JOIN chinook.Album AS Album ON Track.AlbumId = Album.AlbumId GROUP BY Track.AlbumId ORDER BY Track.AlbumId DESC
select * from zooMirrorBias where objid=#
select * from zoo2Stripe8#Normal where dr8objid=#
SELECT TOP # Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track, chinook.Album AS Album GROUP BY Track.AlbumId ORDER BY Track.AlbumId DESC
SELECT TOP # Count(Track.TrackId) AS NumTracks, Track.AlbumId, Sum(Track.UnitPrice) AS TotalPrice, Album.Title FROM chinook.Track AS Track, chinook.Album AS Album GROUP BY AlbumId ORDER BY AlbumId DESC
SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC
select AlbumId, sum(UnitPrice) from chinook.Track where AlbumId < # group by AlbumId order by sum(UnitPrice) desc
select top # AlbumId, sum(UnitPrice) from chinook.Track where AlbumId < # group by AlbumId order by sum(UnitPrice) desc
select top # AlbumId, sum(UnitPrice) from chinook.Track where AlbumId < # group by AlbumId order by sum(UnitPrice)
SELECT TOP # Count(TrackId) AS NumTracks, Track.AlbumId, Sum(UnitPrice) AS TotalPrice, Title FROM chinook.Track AS Track, chinook.Album AS Album GROUP BY AlbumId ORDER BY AlbumId DESC
SELECT TOP # Count(TrackId) AS NumTracks, Track.AlbumId, Sum(UnitPrice) AS TotalPrice, Title FROM chinook.Track, chinook.Album GROUP BY AlbumId ORDER BY AlbumId DESC
SELECT TOP # Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice, Title FROM chinook.Track, chinook.Album GROUP BY AlbumId ORDER BY AlbumId DESC
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC LIMIT #, #
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC LIMIT #
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC limit #
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC Limit #
select top # AlbumId, sum(UnitPrice) from chinook.Track group by AlbumId order by AlbumId
select top # AlbumId, sum(UnitPrice) from chinook.Track group by AlbumId order by sum(UnitPrice) desc
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId DESC
SELECT Count(TrackId) AS NumTracks, AlbumId, Sum(UnitPrice) AS TotalPrice FROM chinook.Track GROUP BY AlbumId ORDER BY AlbumId
SELECT TrackId, AlbumId, UnitPrice FROM chinook.Track ORDER BY AlbumId
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) = #   and petroMag_i > #   and (petroMag_r > # or petroR5#_r > #)   and (petroMag_r > # and g > # and r > # and i > #)   and ( (petroMag_r-extinction_r) < #   and (petroMag_r - extinction_r <   (# + (#/#) * (dered_g - dered_r) + # * (dered_r - dered_i)   - # * #) )   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > #)   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r)) < #) )   or ( (petroMag_r - extinction_r < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > (# - # *   (dered_g - dered_r)) )   and ( (dered_g - dered_r) > (# + # * (dered_r - dered_i)) ) )   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r) ) < # ) )
select top # AlbumId, Title, ArtistId from chinook.Album order by AlbumId
select top # AlbumId, Name from chinook.Album order by AlbumId
SELECT Count(TrackId) as NumTracks, AlbumId FROM chinook.Track GROUP BY AlbumId
SELECT plate.programname, class,  COUNT(specObjId) AS numObjs  FROM SpecObjAll JOIN PlateX AS plate ON plate.plate = specObjAll.plate GROUP BY plate.programname, class ORDER BY plate.programname, class
SELECT Count(sub.AlbumId) as NumAlbums, sub.NumTracksPerAlbum FROM ( SELECT Count(TrackId) as NumTracksPerAlbum, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.NumTracksPerAlbum
select AlbumId, sum(UnitPrice) from chinook.Track group by AlbumId order by AlbumId limit #
select AlbumId, sum(UnitPrice) from chinook.Track group by AlbumId order by AlbumId
SELECT AlbumId FROM ( SELECT Count(TrackId) as NumTracks, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub WHERE sub.NumTracks = #
select AlbumId, sum(UnitPrice) from chinook.Track group by AlbumId
SELECT Count(sub.AlbumId), sub.NumTracksPerAlbum FROM ( SELECT Count(TrackId) as NumTracksPerAlbum, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.NumTracksPerAlbum
SELECT Count(sub.AlbumId), sub.NumTracks FROM ( SELECT Count(TrackId) as NumTracks, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.NumTracks
SELECT Count(sub.AlbumId), sub.TrackNumber FROM ( SELECT Count(TrackId) as TrackNumber, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.TrackNumber
SELECT Count(sub.AlbumId) FROM ( SELECT Count(TrackId) as TrackNumber, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.TrackNumber
SELECT Count(sub.AlbumId), FROM ( SELECT Count(TrackId) as TrackNumber, AlbumId FROM chinook.Track GROUP BY AlbumId ) sub GROUP BY sub.TrackNumber
SELECT Count(TrackId) as TrackNumber, AlbumId FROM chinook.Track GROUP BY AlbumId
select * from Photoz2 where objid=#
