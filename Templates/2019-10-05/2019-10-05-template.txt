SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
select p.ObjID, p.ra, p.dec, p.u, p.Err_u, p.g, p.Err_g, p.r, p.Err_r, p.i,p.Err_i, p.z, p.Err_z from photoObj p, dbo.fGetNearbyObjEq(#,#,#) n where p.objID = n.objID AND p.type = #
SELECT ra, dec, petroMag_g, petroMagErr_g, petroMag_r, petroMagErr_r, petroMag_i, petroMagErr_i FROM star WHERE (ra between # and #) and (dec between # and #) and (petroMag_g < #) and (petroMag_g>#)
select * from Photoz where objid=#
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
select s.ObjID,s.class,s.subclass,s.z,s.zErr,s.type from SpecPhoto s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
select s.ObjID, s.ra,s.dec,s.deVRad_r,s.deVAB_r,s.raErr,s.decErr,s.type,s.modelMag_u,s.modelMagErr_u,s.modelMag_g,s.modelMagErr_g,s.modelMag_r,s.modelMagErr_r,s.modelMag_i,s.modelMagErr_i,s.modelMag_z,s.modelMagErr_z from PhotoPrimary s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
select * from PhotoObjAll where objId=#
select * from PhotoTag where objId=#
select * from zooSpec where objid=#
select * from Frame where fieldId=#
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
select * from sppLines where specObjId=#
select * from PhotozRF where objid=#
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
select * from Field where fieldId=#
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and photoErrorClass=#   and nnCount>#   and zErr BETWEEN # and #
select * from zooConfidence where objid=#
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, # ,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z>#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, #,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z>#
select * from PhotoZ where objId=#
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, # ,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<>#
select * from galSpecIndx where specObjId=#
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
select description from DBObjects where name=&&&
select text from DBObjects where name=&&&
select * from dbo.fDocColumns(&&&)
select * from stellarMassPCAWiscM1# where specObjId=#
SELECT  p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select * from SpecLine where specObjId=#
select distinct parent from DBViewCols where viewname=&&&
select * from fDocFunctionParams(&&&)
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,  p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z  FROM fGetObjFromRect(#,#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.u between # AND # AND p.g between # AND #
select * from galSpecInfo where specObjId=#
select * from sppParams where specObjId=#
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select * from emissionLinesPort where specObjId=#
select * from stellarMassPCAWiscBC0# where specObjId=#
SELECT mangaID,manga_tileid,ifudesignsize  FROM mangatarget  WHERE (manga_target1 & (power(#,#)) != #) AND manga_tileid > # AND IFUDESIGNSIZE > #
select * from stellarMassFSPSGranEarlyNoDust where specObjId=#
select * from zooNoSpec where objid=#
select * from SpecObjAll where specObjId=#
select p.run, p.camcol, p.field from STAR as p   inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = # as Galaxy
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
select top # * from galaxy
select top # ra,dec from Frame
SELECT TOP # P.ObjID
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
select * from XCRedshift where specObjId=#
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,p.type,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z <#
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,p.type  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z <#
select top #   specObjID,ra,dec,modelMag_r,modelMag_i,modelMag_u,modelMag_z,modelMag_g,z from    SpecPhotoAll where   ra BETWEEN # AND #   and dec between # and #   and z < #   and modelMag_r > #   and modelMag_u > #   and modelMag_z > #   and modelMag_g > #   and modelMag_i > #   and z > #
select top #   specObjID,ra,dec,modelMag_r,modelMag_i,modelMag_u,modelMag_z,modelMag_g,z from    SpecPhotoAll where   ra BETWEEN # AND #   and dec between # and #   and z < #   and modelMag_r > #   and modelMag_u > #   and modelMag_z > #   and modelMag_g > #   and modelMag_i > #   and z > # #  and modelMag_r < #
select top #   specObjID,ra,dec,modelMag_r,modelMag_i,modelMag_u,modelMag_z,modelMag_g,z from    SpecPhotoAll where   ra BETWEEN # AND #   and dec between # and #   and z < #   and modelMag_r > #   and modelMag_u > #   and modelMag_z > #   and modelMag_g > #   and modelMag_i > #   and z > #   and modelMag_r < #
select ID, GeogStr=Geog.ToString() from Census
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, -
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText(&&&, #) )
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, #
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #.
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, #
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #.
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
SELECT TOP # *
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, -
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText('POLYGON((# #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #, # #)
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
CREATE TABLE Census (                ID bigint primary key not null,             Geog geography not null         )
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select * from SpecLineIndex where specObjId=#
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText
INSERT INTO Census (ID, Geog) VALUES (#, geography::STGeomFromText(&&&,
select * from stellarMassFSPSGranWideDust where specObjId=#
CREATE TABLE Census (            ID bigint primary key not null,         Geog geography not null     )
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
select top # ID, GeogStr=Geog.ToString() from Census
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
CREATE TABLE Census(         ID bigint primary key not null,         Geog geography not null)
select ID, Geog.ToString() from Census
CREATE TABLE Census(         [ID] [numeric](#, #) CONSTRAINT [PK_{shape_name}] PRIMARY KEY,         [Geog] [geography] NOT NULL)
SELECT s.specObjID as spec_id, dbo.fGetUrlFitsSpectrum(s.specObjId) as spec_url FROM PhotoObj AS p JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE p.ra BETWEEN # AND # AND p.dec BETWEEN # AND # AND p.type=# AND s.snMedian>#
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
select description from DataConstants where field=&&&  and [name]=&&&
SELECT TOP #   objID, ra ,dec   FROM   PhotoPrimary   WHERE   ra > # and ra < #   AND dec > # and dec < #
select top #   specObjID,ra,dec,z,zErr,modelMag_u,modelMag_r,modelMag_g,modelMag_i,modelMag_z from SpecPhotoAll where   # < z and z < # and # < dec and dec < # and # < ra and ra < #  and modelMag_u is not Null and modelMag_r is not Null and modelMag_g is not Null and modelMag_i is not Null and modelMag_z is not Null
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
SELECT DISTINCT p.ra, p.dec, p.clean, p.u, p.g, p.r, p.i, p.z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
SELECT TOP #
select * from stellarMassPassivePort where specObjId=#
SELECT TOP # s.plate,s.mjd,s.fiberid FROM BESTDR1#..SpecObj as s 	JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID WHERE  s.zWarning = #
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = #
select top # t0#_bar_a0#_bar_fraction,dr8objid   from zoo2MainPhotoz where t0#_bar_a0#_bar_fraction > #
select top # t0#_bar_a0#_bar_fraction,dr8objid ,r  from zoo2MainPhotoz where t0#_bar_a0#_bar_fraction > #
select top # t0#_bar_a0#_bar_fraction,dr8objid ,redshift  from zoo2MainPhotoz where t0#_bar_a0#_bar_fraction > #
select top # t0#_bar_a0#_bar_fraction,t0#_bar_a0#_bar_flag,dr8objid   from zoo2MainPhotoz where t0#_bar_a0#_bar_fraction > #
select top # t0#_bar_a0#_bar_fraction,t0#_bar_a0#_bar_flag,dr8objid where t0#_bar_a0#_bar_fraction > #  from zoo2MainPhotoz
select top # t0#_bar_a0#_bar_fraction,t0#_bar_a0#_bar_flag,dr8objid where t0#_bar_a0#_bar_fraction>#  from zoo2MainPhotoz
select top # t0#_bar_a0#_bar_fraction,t0#_bar_a0#_bar_flag,dr8objid from zoo2MainPhotoz
select top # name, redshift, logBHMA_hb from spiders_quasar
select distinct top # star.ra, star.dec, #*(star.ra - plate.racen)/cos(plate.deccen*PI()/#) as x, #*(star.dec - plate.deccen) as y, obj.j as mag from apogeestar as star, apogeeObject as obj, apogeePlate as plate where obj.target_id=star.target_id and plate.location_id=star.location_id and plate.plate = # order by mag
select * from sppparams where specobjid=#
select * from stellarMassFSPSGranEarlyDust where specObjId=#
select * from stellarMassFSPSGranWideNoDust where specObjId=#
select name, description from DBObjects where access=&&& and type=&&& order by name
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, #,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<>#
SELECT TOP # s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj FROM BESTDR9..SpecObj as s 	JOIN BESTDR9..PhotoObj AS p ON s.bestObjID = p.objID 	JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_r, type_r, psfMagErr_r FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # p.run,p.rerun,p.camCol,p.field,p.obj FROM BESTDR7..Galaxy AS p 	JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = p.objID
SELECT * FROM MyTable_#
SELECT class, count(*)  FROM SpecObj  GROUP BY class
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, #,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
SELECT TOP #   specObjID,ra,dec,modelMag_u AS u,modelMag_g AS g,modelMag_r AS r,modelMag_i AS i,modelMag_z AS z,modelMagErr_u AS err_u,modelMagErr_g AS err_g,   modelMagErr_r AS err_r,modelMagErr_i AS err_i,modelMagErr_z As err_z,z AS Redshift, zErr AS RedshiftError,type into mydb.MyTable_# from SpecPhoto WHERE   z < #   AND type = #   AND dec BETWEEN # AND #
INSERT INTO #upload values
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, # ,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = #
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#, #,# ,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
select * from zoo2MainSpecz where dr8objid=#
SELECT TOP #   specObjID,ra,dec,modelMag_u AS u,modelMag_g AS g,modelMag_r AS r,modelMag_i AS i,modelMag_z AS z,modelMagErr_u AS err_u,modelMagErr_g AS err_g,   modelMagErr_r AS err_r,modelMagErr_i AS err_i,modelMagErr_z As err_z,z AS Redshift, zErr AS RedshiftError,type into mydb.MyTable_# from SpecPhoto WHERE   z < #   AND type = #   AND ra BETWEEN # AND #
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) as SpecobjId   FROM #upload  WHERE  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   s.ra,s.dec,s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  s.zWarning = #   ORDER BY x.up_id
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.zWarning = #
SELECT TOP #   specObjID,ra,dec,modelMag_u AS u,modelMag_g AS g,modelMag_r AS r,modelMag_i AS i,modelMag_z AS z,modelMagErr_u AS err_u,modelMagErr_g AS err_g,   modelMagErr_r AS err_r,modelMagErr_i AS err_i,modelMagErr_z As err_z,z AS Redshift, zErr AS RedshiftError,type into mydb.MyTable_# from SpecPhoto WHERE   z < #   AND type = #   AND # < ra < #
SELECT TOP #   plate, mjd, fiberid  FROM specObj  WHERE ((PrimTarget & #) > #)   AND (z > #)   AND (z <= #)
SELECT TOP # s.ra, s.dec, s.psfmag_g, (s.psfmag_g - s.psfmag_r) as gmr,  pm.pmra, pm.pmdec, pm.pmraerr, pm.pmdecerr, pm.pml, pm.pmb FROM star s  JOIN propermotions pm ON s.objid = pm.objid WHERE  s.ra between #-# and #+#  and s.dec between #-# and #+#
select top # * from [MyTable_#]
SELECT TOP #  p.objid,p.ra,p.dec,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z <#
SELECT TOP #  p.objid,p.ra,p.dec,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z <#
select top # p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and # OR b BETWEEN # and #
select * from stellarMassStarformingPort where specObjId=#
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND # AND p.g BETWEEN # AND # AND p.r BETWEEN # AND # AND p.i BETWEEN # AND # AND p.z BETWEEN # AND #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select * from zoo2MainPhotoz where dr8objid=#
select * from galSpecLine where specObjId=#
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = #
SELECT TOP # sp.objID,   sp.ra,   sp.dec,   sp.mjd,   px.taiBegin,   px.taiEnd,   sp.fiberID,   sp.z   FROM specPhoto AS sp   JOIN plateX AS px ON sp.plateID = px.plateID   WHERE   (sp.class=&&&)   AND sp.z > #
select * from Photoz2 where objid=#
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT * FROM SampleB
SELECT * FROM SampleA
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #   g.modelmag_g, g.devmag_g, g.expmag_g, g.devrad_g, g.exprad_g, g.devab_g, g.expab_g, g.extinction_g,   g.modelmag_r, g.devmag_r, g.expmag_r, g.devrad_r, g.exprad_r, g.devab_r, g.expab_r, g.extinction_r, s.z INTO mydb.SampleB FROM SpecObj as s JOIN Galaxy as g ON s.specobjid = g.specobjid WHERE petroR9#_r/petroR5#_r < #   AND s.eclass > #   AND (# <= fracdev_g) AND (fracdev_g < #)   AND (# <= s.z) AND (s.z <= #)
SELECT TOP #    g.modelmag_g, g.devmag_g, g.expmag_g, g.devrad_g, g.exprad_g, g.devab_g, g.expab_g, g.extinction_g,   g.modelmag_r, g.devmag_r, g.expmag_r, g.devrad_r, g.exprad_r, g.devab_r, g.expab_r, g.extinction_r, s.z INTO mydb.SampleA FROM SpecObj as s JOIN Galaxy as g ON s.specobjid = g.specobjid WHERE petroR9#_r/petroR5#_r > #   AND s.eclass < #   AND fracdev_g = #   AND (# <= s.z) AND (s.z <= #)
select top # * from [SampleB]
SELECT TOP #   g.modelmag_g, g.devmag_g, g.expmag_g, g.devrad_g, g.exprad_g, g.devab_g, g.expab_g, g.extinction_g,   g.modelmag_r, g.devmag_r, g.expmag_r, g.devrad_r, g.exprad_r, g.devab_r, g.expab_r, g.extinction_r, s.z INTO mydb.SampleB FROM SpecObj as s JOIN Galaxy as g ON s.specobjid = g.specobjid WHERE petroR9#_r/petroR5#_r < #   AND s.eclass > #   AND (# <= fracdev_g) AND (fracdev_g < #)
SELECT TOP #    g.modelmag_g, g.devmag_g, g.expmag_g, g.devrad_g, g.exprad_g, g.devab_g, g.expab_g, g.extinction_g,   g.modelmag_r, g.devmag_r, g.expmag_r, g.devrad_r, g.exprad_r, g.devab_r, g.expab_r, g.extinction_r, s.z INTO mydb.SampleA FROM SpecObj as s JOIN Galaxy as g ON s.specobjid = g.specobjid WHERE petroR9#_r/petroR5#_r > #   AND s.eclass < #   AND fracdev_g = #
SELECT TOP #    s.modelmag_g, s.devmag_g, s.expmag_g, s.devrad_g, s.exprad_g, s.devab_g, s.expab_g, s.extinction_g,   s.modelmag_r, s.devmag_r, s.expmag_r, s.devrad_r, s.exprad_r, s.devab_r, s.expab_r, s.extinction_r, s.z INTO mydb.SampleA FROM SpecObj as s JOIN Galaxy as g ON s.specobjid = g.specobjid WHERE petroR9#_r/petroR5#_r > #   AND s.eclass < #   AND fracdev_g = #
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) > #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
SELECT * FROM MyTable
SELECT u.up_name as name, s.specobjid, s.ra, s.dec, s.plate, s.mjd, s.fiberid,  p.objID, p.run, p.rerun, p.camcol, p.field FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN SpecObjAll s ON s.specObjID = x.specObjID  JOIN PhotoTag p ON p.objID = s.bestObjID &&&#', @log=#, @filter=#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z, p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift, s.plate, s.mjd, s.fiberid into mydb.MyTable from PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE  p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  WHERE p.u > # AND p.g > # AND p.r > # AND p.i > # AND p.z > # AND p.u < # AND p.g < # AND p.r < # AND p.i < # AND p.z < # AND (p.u - p.g) > # AND (p.g - p.r) > # AND (p.r - p.i) > # AND (p.i - p.z) > # AND (p.u - p.g) < # AND (p.g - p.r) < # AND (p.r - p.i) < # AND (p.i - p.z) < # AND ( p.type = # OR p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE p.u > # AND p.g > # AND p.r > # AND p.i > # AND p.z > # AND p.u < # AND p.g < # AND p.r < # AND p.i < # AND p.z < # AND (p.u - p.g) > # AND (p.g - p.r) > # AND (p.r - p.i) > # AND (p.i - p.z) > # AND (p.u - p.g) < # AND (p.g - p.r) < # AND (p.r - p.i) < # AND (p.i - p.z) < # AND ( p.type = # OR p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
select name from sysobjects where type=&&& and category=# order by name asc
select name from sysobjects where xtype in (N&&&, N&&&, N&&&, N&&&, N&&&) order by name asc
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) = #   and petroMag_i > #   and (petroMag_r > # or petroR5#_r > #)   and (petroMag_r > # and g > # and r > # and i > #)   and ( (petroMag_r-extinction_r) < #   and (petroMag_r - extinction_r <   (# + (#/#) * (dered_g - dered_r) + # * (dered_r - dered_i)   - # * #) )   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > #)   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r)) < #) )   or ( (petroMag_r - extinction_r < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > (# - # *   (dered_g - dered_r)) )   and ( (dered_g - dered_r) > (# + # * (dered_r - dered_i)) ) )   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r) ) < # ) )
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.metals, a.metals_err,  a.alphafe, a.alphafe_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target1 &  (dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&))) != #
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&& OR s.class = &&& OR s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&& OR s.class = &&& OR s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > # AND s.zWarning = # AND (s.class = &&& OR s.class = &&& OR s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&& OR s.class = &&& OR s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.z > # AND s.zWarning = # AND s.z < # AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = # AND (s.class = &&&) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u #<#  AND g #<#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u >#  AND g >#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u #<  AND g #<
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN #<  AND g BETWEEN #<
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z <#
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND sz <#
SELECT plate, mjd FROM apogeePlate WHERE location_id=# SELECT plate, mjd FROM apogeePlate WHERE name = &&&
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z < #
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z<#
SELECT ra,dec,u,err_u,g,err_g,r,err_r,i,err_i,z,err_z FROM Star WHERE ra BETWEEN # AND # AND dec BETWEEN # and # AND g<#
SELECT u.up_name as [name],   &&& + cast(p.objId as varchar(#)) + &&&+ cast(p.objId as varchar(#)) + &&& as objID, p.ra, p.dec,   dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID and p.mode=#  ORDER BY x.up_id
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select top #  S.ra as sdss_ra, S.dec as sdss_dec, W.ra as wise_ra, W.dec as wise_dec,  S.psfmag_r as r, W.w1mpro as w1 from wise_xmatch as X  join wise_allsky as W on X.wise_cntr = W.cntr  join photoTag as S on X.sdss_objid = S.objid where S.nchild = #
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
SELECT TOP #  p.objid,p.ra,p.dec,  p.u,p.g,p.r,p.i,p.z,  p.modelMag_u,p.modelMag_g,p.modelMag_r,p.modelMag_i,p.modelMag_z,  p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,  p.petroMag_u,p.petroMag_g,p.petroMag_r,p.petroMag_i,p.petroMag_z,  p.petroMagErr_u,p.petroMagErr_g,p.petroMagErr_r,p.petroMagErr_i,p.petroMagErr_z,  p.ugModelColor,p.grModelColor,p.riModelColor,p.izModelColor,  p.extinction_u,p.extinction_g,p.extinction_r,p.extinction_i,p.extinction_z,  p.petroRad_u,p.petroRad_g,p.petroRad_r,p.petroRad_i,p.petroRad_z,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.modelMag_r < #  AND s.specClass = #  AND s.z<#
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  ((mngtarg1 != # or mngtarg3 != #)  and (drp3qual < #)  and (ifudesignsize = #)  and (nsa_z > #)  and (nsa_elpetro_mass >#e1#))
select * from aspcapStar where apstar_id=&&&
select * from weblogall2#_#_#h_to_#_#h where mm = # and dd = # and hh = #
select yy, mm, dd, hh, mi, ss,  logID, clientIP, op, command, error, browser,  isvisible, referer, bytesOut, bytesIn, elapsed  into weblogall2#_#_#h_to_#_#h  from weblogall  where yy = #   and mm between # and #   and dd between # and #   and hh between # and #
select count(*) as thecount
SELECT DISTINCT survey, programname FROM platex ORDER BY survey
select top # p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, s.z as redshift, s.specobjid from photoobj p, specobj s where p.objid=s.bestobjid and (s.class = &&&) and s.z BETWEEN # AND #
select top # p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, s.z as redshift, s.specobjidfrom photoobj p, specobj swhere p.objid=s.bestobjid and (s.class = &&&) and s.z BETWEEN # AND #
SELECT TOP # ra, dec, specobjid, plate, mjd, fiberid FROM specObj WHERE survey = &&& and programname = &&&
SELECT DISTINCT TOP # SUBCLASS
select distinct top # subClass
select top # p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and # OR b betweeen # and #
select  top # subClass unique
select unique top # subClass
select top # unique subClass
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,ISNULL(s.plate,#) as plate,ISNULL(s.mjd,#) as mjd,ISNULL(s.fiberid,#) as fiberid  FROM ..PhotoObj AS p  LEFT OUTER JOIN ..SpecObj s ON p.objID = s.bestObjID  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  star.apogee_id, star.ra, star.dec, star.glon, star.glat,   star.vhelio_avg, star.vscatter,  obj.j, obj.h, obj.k, obj.ak_targ, obj.ak_targ_method, obj.ak_wise,  aspcap.teff, aspcap.logg, aspcap.param_m_h FROM apogeeStar star  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id  JOIN apogeeObject obj on aspcap.target_id = obj.target_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.vhelio_avg > #) and (star.starflag &  dbo.fApogeeStarFlag(&&&)) = #  and star.nvisits > # order by aspcap.apogee_id
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.run,p.rerun,p.camCol,p.field,p.obj,ISNULL(s.plate,#) as plate,ISNULL(s.mjd,#) as mjd,ISNULL(s.fiberid,#) as fiberid  FROM ..PhotoObj AS p  LEFT OUTER JOIN ..SpecObj s ON p.objID = s.bestObjID  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.run,p.rerun,p.camCol,p.field,p.obj,ISNULL(s.plate,#) as plate,ISNULL(s.mjd,#) as mjd,ISNULL(s.fiberid,#) as fiberid  FROM ..PhotoObj AS p  LEFT OUTER JOIN ..SpecObj s ON p.objID = s.bestObjID  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = #)   ORDER BY x.up_id
SELECT TOP all  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select top # p.objid, p.ra, p.dec from photoobj p, specobj s where p.objid=s.bestobjid and (p.g BETWEEN # AND #)  and (p.g-p.r BETWEEN # AND #)  and (s.class = &&&) and s.z BETWEEN # AND #
SELECT TOP ALL  p.objid,p.u,p.g,p.r,p.i,p.z,  s.class, s.z as redshift, FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select top # p.objid, p.ra, p.decfrom photoobj p, specobj swhere p.objid=s.bestobjid and (p.g BETWEEN # AND #) and (p.g-p.r BETWEEN # AND #) and (s.class = &&&) and s.z BETWEEN # AND #
SELECT TOP all  p.objid,p.u,p.g,p.r,p.i,p.z,  s.class, s.z as redshift, FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select top # p.objid, p.ra, p.dec from photoobj p, specobj s where p.objid=s.bestobjid and (p.g-p.r BETWEEN # AND #)  and s.z BETWEEN # AND #
select top # p.objid, p.ra, p.dec from photoobj p, specobj s where p.objid=s.bestobjid and s.z BETWEEN # AND #
select top # p.objid, p.ra, p.dec from photoobj p
select top # p.objid as name, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #) and (p.g BETWEEN # AND #) and (p.r BETWEEN # AND #) and (p.i BETWEEN # AND #) and (p.z BETWEEN # AND #) and (p.u-p.g BETWEEN # AND #) and (p.g-p.r BETWEEN # AND #) and (p.r-p.i BETWEEN # AND #) and (p.i-p.z BETWEEN # AND #) and (p.u-p.r BETWEEN # AND #)
SELECT * FROM MyTable_lick_idx0#_alllick_highSN
SELECT ALL    p.objID, p.petroMag_u, p.petroMagErr_u, p.petroMag_g, p.petroMagErr_g, p.petroMag_r,p.petroMagErr_r, p.petroMag_i,p.petroMagErr_i, p.petroMag_z,p.petroMagErr_z,   s.z, s.zErr,    gal.lick_hb_sub,   gal.lick_hb_sub_err,   gal.lick_hd_a_sub,   gal.lick_hd_a_sub_err,   gal.lick_hd_f_sub,   gal.lick_hd_f_sub_err,   gal.lick_ca4#_sub,   gal.lick_ca4#_sub_err,   gal.lick_hg_a_sub,   gal.lick_hg_a_sub_err,   gal.lick_hg_f_sub,   gal.lick_hg_f_sub_err,   gal.lick_fe4#_sub,   gal.lick_fe4#_sub_err,   gal.lick_ca4#_sub,   gal.lick_ca4#_sub_err,   gal.lick_mg1_sub,   gal.lick_mg1_sub_err,   gal.lick_mgb_sub,    gal.lick_mgb_sub_err,   gal.lick_fe5#_sub,   gal.lick_fe5#_sub_err,    gal.d4#_sub,   gal.d4#_sub_err,   gal.tauv_cont   into mydb.MyTable_lick_idx0#_alllick_highSN from PhotoObj AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid    JOIN galSpecIndx AS gal ON gal.specobjid = s.specobjid  WHERE     p.petroMag_r <#    AND p.petroMag_g <#    AND p.petroMag_u <#    AND s.z>#   AND s.z<#   AND s.snMedian_u > #   AND s.snMedian_g > #   AND s.snMedian_r > #   AND s.snMedian_i > #   AND s.snMedian_z > #
SELECT ALL    p.objID, p.petroMag_u, p.petroMagErr_u, p.petroMag_g, p.petroMagErr_g, p.petroMag_r,p.petroMagErr_r, p.petroMag_i,p.petroMagErr_i, p.petroMag_z,p.petroMagErr_z,   s.z, s.zErr,    gal.lick_hb_sub,   gal.lick_hb_sub_err,   gal.lick_hd_a_sub,   gal.lick_hd_a_sub_err,   gal.lick_hd_f_sub,   gal.lick_hd_f_sub_err,   gal.lick_ca4#_sub,   gal.lick_ca4#_sub_err,   gal.lick_hg_a_sub,   gal.lick_hg_a_sub_err,   gal.ick_hg_f_sub,   gal.lick_hg_f_sub_err,   gal.lick_fe4#_sub,   gal.lick_fe4#_sub_err,   gal.lick_ca4#_sub,   gal.lick_ca4#_sub_err,   gal.lick_mg1_sub,   gal.lick_mg1_sub_err,   gal.lick_mgb_sub,    gal.lick_mgb_sub_err,   gal.lick_fe5#_sub,   gal.lick_fe5#_sub_err,    gal.d4#_sub,   gal.d4#_sub_err,   gal.tauv_cont   into mydb.MyTable_lick_idx0#_alllick_highSN from PhotoObj AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid    JOIN galSpecIndx AS gal ON gal.specobjid = s.specobjid  WHERE     p.petroMag_r <#    AND p.petroMag_g <#    AND p.petroMag_u <#    AND s.z>#   AND s.z<#   AND s.snMedian_u > #   AND s.snMedian_g > #   AND s.snMedian_r > #   AND s.snMedian_i > #   AND s.snMedian_z > #
select top # * from [galSpecIndx]
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec,  passive.z as z_noqso, passive.zerr as z_noqso_err,  passive.logmass as passive_logmass,  starforming.logmass as starforming_logmass,  pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive  JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid  JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
SELECT * FROM MyTable_lick_idx0#
SELECT * FROM MyTable_lick_idx0#_highSN
SELECT ALL    p.objID, p.petroMag_u, p.petroMagErr_u, p.petroMag_g, p.petroMagErr_g, p.petroMag_r,p.petroMagErr_r, p.petroMag_i,p.petroMagErr_i, p.petroMag_z,p.petroMagErr_z,   s.z, s.zErr,    gal.lick_fe5#,   gal.lick_fe5#_err,    gal.lick_mgb,    gal.lick_mgb_err,   gal.lick_hg_a, gal.lick_hg_a_err,   gal.lick_hb, gal.lick_hb_err,   gal.d4#, gal.d4#_err,   gal.tauv_cont   into mydb.MyTable_lick_idx0#_highSN from PhotoObj AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid    JOIN galSpecIndx AS gal ON gal.specobjid = s.specobjid  WHERE     p.petroMag_r <#    AND p.petroMag_g <#    AND p.petroMag_u <#    AND s.z>#   AND s.z<#   AND s.snMedian_u > #   AND s.snMedian_g > #   AND s.snMedian_r > #   AND s.snMedian_i > #   AND s.snMedian_z > #
SELECT ALL    p.objID, p.petroMag_u, p.petroMagErr_u, p.petroMag_g, p.petroMagErr_g, p.petroMag_r,p.petroMagErr_r, p.petroMag_i,p.petroMagErr_i, p.petroMag_z,p.petroMagErr_z,   s.z, s.zErr,    gal.lick_fe5#,   gal.lick_fe5#_err,    gal.lick_mgb,    gal.lick_mgb_err,   gal.lick_hg_a, gal.lick_hg_a_err,   gal.lick_hb, gal.lick_hb_err,   gal.d4#, gal.d4#_err,   gal.tauv_cont into mydb.MyTable_lick_idx0# from PhotoObj AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid    JOIN galSpecIndx AS gal ON gal.specobjid = s.specobjid  WHERE     p.petroMag_r <#    AND p.petroMag_g <#    AND p.petroMag_u <#    AND s.z>#    AND s.z<#
SELECT * FROM dbo.fFootprintEq( #,#,#)
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
SELECT TOP #  specobj.plate as specobj_plate, specobj.mjd as specobj_mjd,  specobj.fiberid as specobj_fiberid,   specobj.ra as specobj_ra, specobj.dec as specobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestSpecObjEq( star.ra, star.dec, #) AS near   JOIN specobj ON near.specobjid=specobj.specobjid
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID
select * from zoo2Stripe8#Coadd1 where dr8objid=#
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT dbo.fInFootprintEq( #, #, # )
SELECT TOP # objID, cModelMag_g   FROM Galaxy   WHERE   cModelMag_g between # and #
SELECT TOP #   r.run,   r.rerun,   f.camCol,   f.field,   p.objID,   p.ra,   p.dec,   p.modelMag_r,   f.psfWidth_r   FROM   PhotoTag AS p   JOIN Field AS f ON f.fieldid = p.fieldid   JOIN Run AS r ON f.run = r.run   WHERE mode=#   and f.psfWidth_r > #   and p.modelMag_r < #.   and r.stripe = #
SELECT * FROM redshifts
SELECT TOP # absMagG, absMagR, absMagI, z   FROM DR1#.Photoz   INTO redshifts
SELECT TOP # absMagG, absMagR, absMagI, z FROM DR1#.Photoz INTO redshifts
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  TOP # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  TOP # p.apstar_id,     p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
select dr7objid, total_classifications, t0#_bar_a0#_bar_flag from zoo2MainSpecz
select t0#_bar_a0#_bar_flag from zoo2MainSpecz
select t0#_bar_a0#_bar_flag from zoo2MainSpecz where z<#
select z,t0#_bar_a0#_bar_flag from zoo2MainSpecz where z<#
select z,t0#_bar_a0#_bar_flag from DR7.zoo2MainSpecz where z<#
select * from ELRedshift where specObjId=#
select z,zoo2MainPhotoz from DR1#.SpecObj where z<#
select top # p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and #
select z,photoPrimary from DR1#.SpecObj where z<#
select ALl p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and #
select z from DR1#.SpecObj where z<#
select z from DR.#.SpecObj where z<#
select z from DR.#SpecObj where z<#
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON p.objID = b.objID
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
select p.run, p.camcol, p.field from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
select z into mydb.MyTable from SpecObj where z<#
select ALl p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and #  OR b BETWEEN # and #
select top # p.u-p.r,p.g-p.r ,p.r-p.i ,p.r-p.z,p.l,p.b from star p where b BETWEEN # and #  OR b BETWEEN # and #
SELECT DISTINCT p.ra, p.dec, p.g FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT TOP # objID,  	      field, ra, dec into mydb.MyTable from PhotoPrimary 	 WHERE     ra > #. and ra < # and dec > #. and dec < #
select all p.objid,p.u-p.g,p.g-p.r ,p.r-p.i ,p.i-p.z,p.l,p.b from star p where b BETWEEN # and # OR b BETWEEN # and #
select top # p.objid,p.u-p.g,p.g-p.r ,p.r-p.i ,p.i-p.z,p.l,p.b from star p where b BETWEEN # and # OR b BETWEEN # and #
select top # p.objid,p.u-p.g,p.g-p.r ,p.r-p.i ,p.i-p.z,p.u-p.r,p.l,p.b from star p where b BETWEEN # and # OR b BETWEEN # and #
SELECT  TOP # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  TOP # p.apstar_id,     p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN aspcapStar a on a.apstar_id = p.apstar_id    WHERE ra BETWEEN # AND #    AND dec BETWEEN # AND #
SELECT star.apstar_id,  star.apogee_id, star.ra, star.dec, star.glon, star.glat,  star.apogee_target1, star.apogee_target2,   aspcap.teff,aspcap.logg,aspcap.metals FROM apogeeStar star  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) near on  star.apstar_id=near.apstar_id  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.param_m_h, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
select plate, mjd, fiberID from dbo.fGetNearbySpecObjAllEq(#, #, #)
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = # )
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = # OR dec = # )
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = # OR dec = # OR  i = # OR r= # OR g = #)
select name, description from DBObjects where access=&&& and type=&&&A=#' order by name
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = # AND dec = # AND  i = # AND r= # AND g = #)
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = # AND dec = #,  i = # AND r= # AND g = #)
SELECT ra, dec, i, r, g FROM dbo.PhotoObj  WHERE (ra = #, dec = #,  i = #, r= # , g = #)
SELECT ra, dec, i,r,g  FROM dbo.PhotoObj  WHERE (ra = #, dec = #,  i = #, r= # , g = #)
SELECT ra, dec, i,r,g FROM dbo.PhotoObj WHERE (ra = #, dec = #,  i = #, r= # , g = #)
SELECT ra, dec, i,r,g WHERE (ra = #, dec = #,  i = #, r= # , g = #)
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and nnIsInside=#   and nnCount>#   and zErr BETWEEN # and #
select name, description from DBObjects where access=&&& and name like &&& or name like &&& and name not like &&& order by name
SELECT top #   run, rerun, camcol, field,   mjd_r as primary_mjd  FROM Field WHERE  mjd_r > #
SELECT TOP # p.objid, p.ra, p.dec, ISNULL(s.specobjid,#) AS specobjid, ISNULL(s.z, #) AS z  FROM Galaxy AS p LEFT OUTER JOIN SpecObj s ON s.bestObjID = p.objID  WHERE  p.u BETWEEN # AND # AND p.g BETWEEN # AND #
