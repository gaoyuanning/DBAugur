SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
SELECT TOP # p.ra,p.dec,p.type,p.modelmag_g,p.modelmag_r,p.modelmag_i,p.run,p.rerun,p.camcol,p.field,p.obj,p.objid,dbo.fIAUFromEq(p.ra,p.dec),p.z,p.specobjid,p.specClass FROM SpecPhotoAll as p WHERE p.ra<# and p.ra># and p.dec># and p.dec<# and (p.specClass=# or p.specClass=#) order by p.modelmag_r
SELECT TOP # dbo.fIAUFromEq(p.ra,p.dec),p.ra,p.dec,p.modelmag_g,p.modelmag_r,p.modelmag_i FROM Galaxy as p WHERE p.modelmag_r<# and p.ra<# and p.ra># and p.dec># and p.dec<# order by p.modelmag_r
SELECT TOP # p.ra,p.dec,p.type,p.modelmag_g,p.modelmag_r,p.modelmag_i,p.run,p.rerun,p.camcol,p.field,p.obj,p.objid,dbo.fIAUFromEq(p.ra,p.dec),r.z,r.Zerr FROM Galaxy as p, photoz as r WHERE p.ObjID=r.ObjID and p.modelmag_r<# and p.ra<# and p.ra># and p.dec># and p.dec<# order by p.modelmag_r
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select * from PhotoTag where objId=#
select * from PhotoObjAll where objId=#
select * from emissionLinesPort where specObjId=#
select * from stellarMassPassivePort where specObjId=#
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
select description from DBObjects where name=&&&
select distinct c.field, o.description  	from DataConstants c, DBObjects o 	where o.type=&&& and o.name = c.field
select * from DataConstants order by field, value
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
SELECT TOP #  photoobj.run, photoobj.camcol, photoobj.field, photoobj.obj,  photoobj.psfmag_u, photoobj.psfmag_g, photoobj.psfmag_r,  photoobj.psfmag_i, photoobj.psfmag_z,   photoobj.ra as photoobj_ra, photoobj.dec as photoobj_dec,   star.apstar_id, star.ra as star_ra, star.dec as star_dec,   aspcap.teff, aspcap.metals, aspcap.logg FROM apogeeStar AS star   CROSS APPLY dbo.fGetNearestObjEq( star.ra, star.dec, #) AS near   JOIN photoobj ON near.objid=photoobj.objid   JOIN aspcapStar as aspcap ON star.apstar_id = aspcap.apstar_id WHERE star.glat > #. and aspcap.teff > #
select text from DBObjects where name=&&&
select * from dbo.fDocColumns(&&&)
select * from PhotozRF where objid=#
SELECT top #  visit.*, aspcap.teff, aspcap.logg, aspcap.param_m_h FROM apogeeVisit visit  JOIN apogeeStarVisit starvisit on visit.visit_id = starvisit.visit_id  JOIN aspcapStar aspcap on aspcap.apstar_id = starvisit.apstar_id  JOIN apogeeStar star on star.apstar_id = starvisit.apstar_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.apogee_target1 & dbo.fApogeeTarget1(&&&)) > #  and star.nvisits > #  ORDER BY visit.apogee_id
SELECT star.apstar_id,  star.apogee_id, star.ra, star.dec, star.glon, star.glat,  star.apogee_target1, star.apogee_target2,   aspcap.teff,aspcap.logg,aspcap.param_m_h FROM apogeeStar star  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) near on  star.apstar_id=near.apstar_id  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id
SELECT TOP #  star.apogee_id, star.ra, star.dec, star.glon, star.glat,   star.vhelio_avg, star.vscatter,  obj.j, obj.h, obj.k, obj.ak_targ, obj.ak_targ_method, obj.ak_wise,  aspcap.teff, aspcap.logg, aspcap.param_m_h FROM apogeeStar star  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id  JOIN apogeeObject obj on aspcap.target_id = obj.target_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.vhelio_avg > #) and (star.starflag &  dbo.fApogeeStarFlag(&&&)) = #  and star.nvisits > # order by aspcap.apogee_id
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff,a.logg, a.param_m_h, a.param_alpha_m,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = #   and a.teff > # and a.param_m_h < #
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.param_m_h, a.param_m_h_err,  a.param_alpha_m, a.param_alpha_m_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target2 & (dbo.fApogeeTarget2(&&&)) != #)
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.param_m_h, a.param_m_h_err,  a.param_alpha_m, a.param_alpha_m_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target1 &  (dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&))) != #
SELECT plate, mjd FROM apogeePlate WHERE location_id=# SELECT plate, mjd FROM apogeePlate WHERE name = &&&
SELECT TOP # emline.fiberid as fiberID, emline.ra, emline.dec,  emline.z as z_noqso, emline.zerr as z_noqso_err,  emline.sigmaStars as emline_vdisp, emline.sigmaStarsErr as emline_vdisp_err,  pca.vdisp_median as pca_vdisp, pca.vdisp_err as pca_vdisp_err,  sp.veldisp as sp_vdisp, sp.veldisperr as sp_vdisp_err  FROM emissionLinesPort AS emline  JOIN stellarMassPCAWisc AS pca ON emline.specobjid = pca.specobjid  JOIN specObj as sp ON emline.specobjid = sp.specobjid  WHERE emline.plate = # AND emline.mjd = # AND pca.warning=#
SELECT TOP # t.thingid, t.ndetect, d.objid, p.psfMag_r, p.psfMagerr_r  FROM thingIndex AS t JOIN detectionindex AS d ON t.thingid = d.thingid JOIN Star AS p ON d.objid = p.objid WHERE t.ndetect > #
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec,  passive.z as z_noqso, passive.zerr as z_noqso_err,  passive.logmass as passive_logmass,  starforming.logmass as starforming_logmass,  pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive  JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid  JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
SELECT TOP # *
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) = #   and petroMag_i > #   and (petroMag_r > # or petroR5#_r > #)   and (petroMag_r > # and g > # and r > # and i > #)   and ( (petroMag_r-extinction_r) < #   and (petroMag_r - extinction_r <   (# + (#/#) * (dered_g - dered_r) + # * (dered_r - dered_i)   - # * #) )   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > #)   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r)) < #) )   or ( (petroMag_r - extinction_r < #)   and ( (dered_r - dered_i - (dered_g - dered_r)/# - #) > (# - # *   (dered_g - dered_r)) )   and ( (dered_g - dered_r) > (# + # * (dered_r - dered_i)) ) )   and ( (petroMag_r - extinction_r +   # * LOG1#(# * # * petroR5#_r * petroR5#_r) ) < # ) )
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( (flags & dbo.fPhotoFlags(&&&) = #)   and petroR5#_i > #)
select distinct parent from DBViewCols where viewname=&&&
select * from Field where fieldId=#
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
select * from fDocFunctionParams(&&&)
INSERT INTO #upload values
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
select * from SpecObjAll where specObjId=#
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and photoErrorClass=#   and nnCount>#   and zErr BETWEEN # and #
SELECT * FROM dbo.fFootprintEq( #,#,#)
select name, description from DBObjects where access=&&& and type=&&& order by name
SELECT s.ra, s.dec, s.plate, s.mjd, s.fiberid, s.z, s.zerr, s.class, s.subclass, s.tfile, s.snmedian FROM SpecObj as s WHERE s.specObjID = dbo.fGetNearestSpecObjIdEq(#,#,#) AND s.zWarning = # AND s.class = &&&
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.u between # AND # AND p.g between # AND # AND p.i between # AND # AND p.r between # AND # AND p.z between # AND #
select top # G.objID, G.ra, G.dec, p.z, p.zerr from Galaxy as G, photoz as p where G.objID = p.objID And p.z between # and # AND p.zErr BETWEEN # and # AND ((g.flags_r & #) != #) AND ((g.flags_r & #) = #) AND (((g.flags_r & #) = #) or (g.psfmagerr_r <= #)) AND (((g.flags_r & #) = #) or (g.flags_r & #) = #) order by p.z
select top # G.objID, G.ra, G.dec, p.z, p.zerr from Galaxy as G, photoz as p G.objID = p.objID And p.z between # and # AND p.zErr BETWEEN # and # AND ((g.flags_r & #) != #) AND ((g.flags_r & #) = #) AND (((g.flags_r & #) = #) or (g.psfmagerr_r <= #)) AND (((g.flags_r & #) = #) or (g.flags_r & #) = #) order by p.z
select top # G.objID, G.ra, G.dec, p.z, p.zerr from Galaxy as G, photoz as p where G.objID = N.objID and G.objID = p.objID And p.z between # and # AND p.zErr BETWEEN # and # AND ((g.flags_r & #) != #) AND ((g.flags_r & #) = #) AND (((g.flags_r & #) = #) or (g.psfmagerr_r <= #)) AND (((g.flags_r & #) = #) or (g.flags_r & #) = #) order by p.z
select * from stellarMassPCAWiscBC0# where specObjId=#
SELECT TOP #   objID, ra, dec,   sqrt( power(rowv,#) + power(colv, #) ) as velocity   FROM PhotoObj   WHERE   (power(rowv,#) + power(colv, #)) > #   AND rowv != # and colv != #
select * from sppParams where specObjId=#
SELECT STR(z,#,#) z, ra, dec FROM specObj WHERE specClass=# AND dec BETWEEN # AND # AND ra BETWEEN # AND #  AND z BETWEEN # AND #
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
select * from Frame where fieldId=#
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
SELECT DISTINCT survey, programname FROM platex ORDER BY survey
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Galaxy  WHERE  ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT TOP # ra, dec, specobjid, plate, mjd, fiberid FROM specObj WHERE survey = &&& and programname = &&&
select * from Photoz where objid=#
SELECT count(specObjID)
SELECT TOP # s.ra, s.dec, s.psfmag_g, (s.psfmag_g - s.psfmag_r) as gmr,  pm.pmra, pm.pmdec, pm.pmraerr, pm.pmdecerr, pm.pml, pm.pmb FROM star s  JOIN propermotions pm ON s.objid = pm.objid WHERE  s.ra between #-# and #+#  and s.dec between #-# and #+#
SELECT top # so.bestobjid, so.specobjid, so.plate, so.mjd, so.fiberid,  sp.teffadop, sp.fehadop, sp.loggadop, sp.snr, sp.flag   FROM specobjall so  JOIN sppparams sp ON so.specobjid = sp.specobjid and so.sciencePrimary=#  WHERE sp.teffadop > # and sp.teffadop < #  and fehadop > # and fehadop < #  and loggadop > # and loggadop < #  and sp.flag like &&&  and sp.snr > #
SELECT sl.plate, sl.mjd, sl.fiber,  sl.caIIKside, sl.caIIKerr, sl.caIIKmask,  sp.fehadop, sp.fehadopunc,sp. fehadopn,  sp.loggadopn,sp.loggadopunc,sp.loggadopn  FROM sppLines AS sl  JOIN sppParams AS sp ON sl.specobjid = sp.specobjid WHERE  fehadop < # and fehadopunc between # and #  AND fehadopn > #
SELECT TOP # s1.objID as s1, s2.objID as s2   FROM Star AS S1   JOIN Neighbors AS N ON S1.objID = N.objID   JOIN Star AS S2 ON S2.objID = N.NeighborObjID   WHERE   N.NeighborType = dbo.fPhotoType(&&&)   and N.distance < .#   and ((S1.u - S1.g) < # )   and (S1.g - S1.r) < #   and (S1.r - S1.i) > #   and (S1.i - S1.z) > #
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
select top # ra,dec from Frame
SELECT s.specobjid, s.ra, s.dec, s.plate, s.mjd, s.fiberid FROM #upload u  JOIN SpecObjAll s ON (s.plate=u.up_plate AND s.mjd=u.up_mjd AND s.fiberID=u.up_fiber) &&&#', @log=#, @filter=#
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
select * from XCRedshift where specObjId=#
select * from stellarMassFSPSGranWideNoDust where specObjId=#
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP # objID
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
SELECT TOP # G.ObjID, G.u, G.g, G.r, G.i, G.z   FROM Galaxy AS G   JOIN Star AS S   ON G.parentID = S.parentID   WHERE G.parentID > #
SELECT plate.programname, class,  COUNT(specObjId) AS numObjs  FROM SpecObjAll JOIN PlateX AS plate ON plate.plate = specObjAll.plate GROUP BY plate.programname, class ORDER BY plate.programname, class
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
select * from stellarMassStarformingPort where specObjId=#
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT p.objid, p.type, p.clean, p.ra, p.dec, p.raErr, p.decErr, p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z, p.psfMagErr_u,p.psfMagErr_g,p.psfMagErr_r,p.psfMagErr_i,p.psfMagErr_z, p.petroR5#_u,p.petroR5#_g,p.petroR5#_r,p.petroR5#_i,p.petroR5#_z, p.psffwhm_u, p.psffwhm_g, p.psffwhm_r, p.psffwhm_i, p.psffwhm_z, p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z, p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, pz.z, pz.zErr FROM PhotoObj AS p , dbo.fGetNearbyObjEq(#, #, #) AS n LEFT JOIN Photoz AS pz ON pz.objID = n.objID WHERE n.objID = p.objID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select * from StripeDefs
SELECT TOP # specObjID
SELECT top #   run, rerun, camcol, field,   mjd_r as primary_mjd  FROM Field WHERE  mjd_r > #
SELECT top # objID, ra, dec, g, clean FROM PhotoObj WHERE CLEAN=#
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
SELECT TOP #   g,   run,   rerun,   camcol,   field,   objID   FROM Galaxy   WHERE ( (g <= #)   and (u - g >= #)   and (u - g < #)   and (g - r >= #)   and (g - r < #)   and (r - i >= #)   and (r - i < #)   and (i - z >= #)   and (i - z < #) )
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT TOP # objid,ra,dec,   flags,   flags & # AS flags_lo,   (flags/power(cast(# as bigint),#)) & # AS flags_hi  FROM PhotoObj
SELECT TOP #  o.objid,o.ra,o.dec, s.bestobjid, s.z as redshift, s.class as specClass,  o.petroRad_r,o.petroRadErr_r, o.u,o.g,o.r,o.i,o.z,o.petroMagErr_u,o.petroMagErr_g,  o.petroMagErr_r,o.petroMagErr_i,o.petroMagErr_z,  e.Flux_OIII_#,e.Flux_OIII_#_Err, e.Flux_NII_#,e.Flux_NII_#_Err,  e.Flux_Ha_#,e.Flux_Ha_#_Err, e.Flux_Hb_#,e.Flux_Hb_#_Err,  o.petroR5#_r, o.petroR5#Err_r, o.petroR9#_r, o.petroR9#Err_r FROM PhotoObj AS o  JOIN SpecObj AS s ON s.bestobjid = o.objid  JOIN emissionLinesPort AS e ON e.specobjid = s.specobjid WHERE  s.z BETWEEN # AND # AND  o.u-o.r <= # AND  o.r-o.i <= # AND  o.r-o.z<=# AND  o.g-o.r >= o.r-o.i+# AND  o.u-o.r >= #*(o.r-o.z)
SELECT TOP # SELECT  o.objid,o.ra,o.dec, s.bestobjid, s.z as redshift, s.class as specClass,  o.petroRad_r,o.petroRadErr_r, o.u,o.g,o.r,o.i,o.z,o.petroMagErr_u,o.petroMagErr_g,  o.petroMagErr_r,o.petroMagErr_i,o.petroMagErr_z,  e.Flux_OIII_#,e.Flux_OIII_#_Err, e.Flux_NII_#,e.Flux_NII_#_Err,  e.Flux_Ha_#,e.Flux_Ha_#_Err, e.Flux_Hb_#,e.Flux_Hb_#_Err,  o.petroR5#_r, o.petroR5#Err_r, o.petroR9#_r, o.petroR9#Err_r FROM PhotoObj AS o  JOIN SpecObj AS s ON s.bestobjid = o.objid  JOIN emissionLinesPort AS e ON e.specobjid = s.specobjid WHERE  s.z BETWEEN # AND # AND  o.u-o.r <= # AND  o.r-o.i <= # AND  o.r-o.z<=# AND  o.g-o.r >= o.r-o.i+# AND  o.u-o.r >= #*(o.r-o.z)
select * from stellarMassFSPSGranEarlyDust where specObjId=#
SELECT TOP # p.ra,p.dec,p.run,p.rerun,p.camCol,p.field,p.obj FROM BESTDR7..PhotoObj AS p 	JOIN #x AS x ON x.objID=p.objID JOIN #upload AS u ON u.up_id = x.up_id  WHERE  ( p.type = # OR p.type = #) ORDER BY x.up_id
select * from galSpecLine where specObjId=#
SELECT G.objID,G.ra,G.dec,s.specObjID, s.h_alpha_flux,s.h_alpha_flux_err, s.h_beta_flux,s.h_beta_flux_err, s.oiii_#_flux,s.oiii_#_flux_err, s.oiii_#_flux,s.oiii_#_flux_err, s.nii_#_flux,s.nii_#_flux_err, s.nii_#_flux,s.nii_#_flux_err, p.z,p.zErr, G.u, G.err_u, G.g, G.err_g, G.r, G.err_r, G.i, G.err_i, G.z, G.err_z FROM Galaxy as G JOIN GalSpecLine AS s ON G.specObjID = s.specObjID JOIN PhotoZ AS p ON p.objID = G.objID WHERE  p.z BETWEEN # AND # AND  g.u-g.r <= # AND  g.r-g.i <= # AND  g.r-g.z<=# AND  g.g-g.r >= g.r-g.i+# AND  g.u-g.r >= #*(g.r-g.z)
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
SELECT TOP # p.objid, p.ra, p.dec, ISNULL(s.specobjid,#) AS specobjid, ISNULL(s.z, #) AS z  FROM Galaxy AS p LEFT OUTER JOIN SpecObj s ON s.bestObjID = p.objID  WHERE  p.u BETWEEN # AND # AND p.g BETWEEN # AND #
select * from zoo2MainSpecz where dr8objid=#
select * from zooMonochromeBias where objid=#
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT TOP #   obj.run, obj.camCol, str(obj.field, #) as field,  str(obj.rowc, #, #) as rowc, str(obj.colc, #, #) as colc,  str(dbo.fObj(obj.objId), #) as id,   str(obj.psfMag_g - #*obj.extinction_g, #, #) as g,  str(obj.psfMag_r - #*obj.extinction_r, #, #) as r,  str(obj.psfMag_i - #*obj.extinction_i, #, #) as i,  str(obj.psfMag_z - #*obj.extinction_z, #, #) as z,  str(#*distance, #, #) as D,  dbo.fField(neighborObjId) as nfield,  str(dbo.fObj(neighborObjId), #) as nid FROM  (SELECT obj.objId,  run, camCol, field, rowc, colc,  psfMag_u, extinction_u,  psfMag_g, extinction_g,  psfMag_r, extinction_r,  psfMag_i, extinction_i,  psfMag_z, extinction_z,  NN.neighborObjId, NN.distance  FROM PhotoObj as obj  JOIN neighbors as NN on obj.objId = NN.objId  WHERE  #*NN.distance between # and # and  NN.mode = # and NN.neighborMode = # and  run = # and camCol = # and  obj.type = # and (obj.flags & #) = # and  nchild = # and obj.psfMag_i < # and  (g - r between # and # and r - i between # and #)  ) as obj  JOIN PhotoObj as nobj on nobj.objId = obj.neighborObjId  WHERE   nobj.run = obj.run and  (abs(obj.psfMag_g - nobj.psfMag_g) < # or  abs(obj.psfMag_r - nobj.psfMag_r) < # or  abs(obj.psfMag_i - nobj.psfMag_i) < #)
SELECT TOP # P.ObjID
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*# & #)   < (# * #)
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
SELECT class, count(*)  FROM SpecObj  GROUP BY class
SELECT top # objid, ra, dec, psfmag_i-extinction_i AS mag_i, psfmag_r-extinction_r AS mag_r, z  FROM SpecPhoto  WHERE   (class = &&&)
SELECT TOP # sp.objID,   sp.ra,   sp.dec,   sp.mjd,   px.taiBegin,   px.taiEnd,   sp.fiberID,   sp.z   FROM specPhoto AS sp   JOIN plateX AS px ON sp.plateID = px.plateID   WHERE   (sp.class=&&&)   AND sp.z > #
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # objID, cModelMag_g   FROM Galaxy   WHERE   cModelMag_g between # and #
SELECT TOP #   r.run,   r.rerun,   f.camCol,   f.field,   p.objID,   p.ra,   p.dec,   p.modelMag_r,   f.psfWidth_r   FROM   PhotoTag AS p   JOIN Field AS f ON f.fieldid = p.fieldid   JOIN Run AS r ON f.run = r.run   WHERE mode=#   and f.psfWidth_r > #   and p.modelMag_r < #.   and r.stripe = #
SELECT TOP # G.objID, GN.distance  FROM Galaxy as G  JOIN dbo.fGetNearbyObjEq(#.,#, #) AS GN  ON G.objID = GN.objID  ORDER BY distance
SELECT TOP #   objID, ra ,dec   FROM   PhotoPrimary   WHERE   ra > # and ra < #   AND dec > # and dec < #
SELECT dbo.fGetNearestSpecObjIdAllEq(#,#,#) as specObjID
select * from galSpecIndx where specObjId=#
SELECT TOP #  p.objid,p.ra,p.dec,p.r,s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.r < # AND  p.ra > # OR p.ra < # AND  p.dec BETWEEN # AND #
SELECT TOP #  p.objid,p.ra,p.dec,p.r,s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.r < # AND  p.ra > # AND p.ra < # AND  p.dec BETWEEN # AND #
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT u.up_name as [name],    &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID,p.ra,p.dec,p.r,s.z as redshift FROM #upload u       JOIN #x x ON x.up_id = u.up_id       JOIN PhotoTag p ON p.objID = x.objID       JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE     p.r < #
SELECT u.up_name as [name], TOP #    &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID,p.ra,p.dec,p.r,s.z as redshift FROM #upload u       JOIN #x x ON x.up_id = u.up_id       JOIN PhotoTag p ON p.objID = x.objID       JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE     p.r < #
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  (((mngtarg1 & (power(#,#)+power(#,#))) != #)   and ((drp3qual & power(#,#)) = #))
SELECT TOP #  p.objid,p.ra,p.dec,p.r,s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.r < #
SELECT TOP #  p.objid,p.ra,p.dec,p.r,s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.r LESS THAN #
select * from zooNoSpec where objid=#
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > .# AND s.zWarning = # AND (s.class = &&&) AND s.z < #
SELECT TOP #  p.objid,p.ra,p.dec,p.r,s.z as redshift FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.r LESS #
select description from DataConstants where field=&&&  and [name]=&&&
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > .# AND s.zWarning = # AND s.z < #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
select top # * from [kgsp_dr9]
select top # * from [ThePeas_Complete]
select top # * from [kgsp_hlm]
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff,a.logg, a.metals, a.alphafe,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = #   and a.teff > # and a.metals < #
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  WHERE s.z > .# AND s.zWarning = # AND (s.class = &&&) AND s.z < .#
select top # * from galaxy
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = # AND (s.class = &&&)
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = #
select * from ELRedshift where specObjId=#
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.z,s.zErr,s.zWarning,s.class  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = # AND (s.class = &&&)
SELECT TOP # &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,  p.apogee_id,p.ra, p.dec, p.glon, p.glat,  p.vhelio_avg,p.vscatter,  a.teff,a.logg,  a.m_h   FROM apogeeStar p  JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id  JOIN aspcapStar a on a.apstar_id = p.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.z,s.zErr,s.zWarning,s.class  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = #
select * from zoo2MainPhotoz where dr8objid=#
select count(*) from users where datepart(yy,lastmodified) > #
select count(*) from users where datepart(yy,lastmodified) = #
select top # * from users
select count(*) from users
select p.objid, p.ra, p.dec from star p where p.u < #  and p.g < #  and p.r < #  and p.i < #  and p.z < #  and (p.u-p.g BETWEEN # AND #)  and (p.g-p.r BETWEEN # AND #)  and (p.r-p.i BETWEEN # AND #)  and (p.i-p.z BETWEEN # AND #)  and (p.u-p.r BETWEEN # AND #)
SELECT top # objid, ra, dec, z, dered_u AS mag_u, dered_g AS mag_g, dered_r AS mag_r, dered_i AS mag_i, dered_z AS mag_z FROM specObj WHERE (class = &&& AND Zwarning = #)
select * from zooSpec where objid=#
select * from zoo2Stripe8#Coadd2 where dr8objid=#
select top # * from chile where [#  Owner] is not null
select top # * from chile
select [#  City] from chile
SELECT * FROM rredo_flags_dr1#
select    FORMAT(s.loggadop,&&&) as logg, FORMAT(s.fehadop,&&&) as feh, FORMAT(s.teffadop,&&&, &&&) as Teff,    s.plate,s.mjd,s.fiberid,s.flag,   FORMAT(ph.extinction_g,&&&) as extn_g,   FORMAT(ph.psfMag_g,&&&) as g, FORMAT(ph.psfMagErr_g,&&&) as gerr,FORMAT(ph.psfMagErr_r,&&&) as rerr,   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)    as edgebadflags   into myDB.rredo_flags_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
SELECT * FROM MyTable_#
SELECT p.objId,p.ra,p.dec,p.petror9#_r, p.expAB_r,     p.dered_u as u, p.dered_g as g, p.dered_r as r, p.dered_i as i,      s.z, s.plate, s.mjd, s.fiberid FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE p.petror9#_r > #   and p.ra between # and #   and s.z between # and #   and p.g < #
select top #   FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&, &&&),    s.plate,s.mjd,s.fiberid,s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)    as edgebadflags from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select top #   FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&, &&&),    s.plate,s.mjd,s.fiberid,s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)    as edgebadflags   into myDB.rredo_flags_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr into mydb.MyTable_# from PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.type = #    AND probPSF = #    AND p.clean = #    AND s.z < #
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.type = #    AND probPSF = #    AND p.clean = #    AND s.z < #
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     AND p.type = #    AND probPSF = #    AND p.clean = #    AND s.z < #
select top # * from [SpecObjAll]
select top # * from [MyTable]
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr into mydb.MyTable from PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.ra BETWEEN # AND #    AND p.dec BETWEEN # AND #    AND p.type = #    AND probPSF = #    AND p.clean = #    AND s.z < #
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.ra BETWEEN # AND #    AND p.dec BETWEEN # AND #    AND p.type = #    AND probPSF = #    AND p.clean = #    AND s.z < #
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, p.type_g, s.z, s.zErr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.ra BETWEEN # AND #    AND p.dec BETWEEN # AND #    AND p.type = #    AND probPSF = #    AND p.clean = #    AND s.
SELECT    p.objid,p.ra,p.dec,p.expRad_u,p.expRad_g,p.expRad_r,p.expRad_i, p.expRad_z, p.expRadErr_u,p.expRadErr_g,p.expRadErr_r,p.expRadErr_i,p.expRadErr_z, type_g  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE     p.ra BETWEEN # AND #    AND p.dec BETWEEN # AND #    AND p.type = #    AND probPSF = #    AND p.clean = #
select * from information_schema.columns where table_name=&&&
select    FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&),    s.plate,s.mjd,s.fiberid,Format(s.snr,&&&),s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)    as edgebadflags   into myDB.rredo_flags_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select top #   FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&),    s.plate,s.mjd,s.fiberid,Format(s.snr,&&&),s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select top # [# City] from chile
SELECT x.objID,     p.ra, p.dec, dbo.fPhotoTypeN(p.type) as type FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT * FROM NOT_SKY
select    FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&),    s.plate,s.mjd,s.fiberid,Format(s.snr,&&&),s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags into mydb.rredo_flags_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select top # * from [NOT_SKY]
select top # p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, s.z as redshift from galaxy p, specobj s where p.objid=s.bestobjid and (p.u BETWEEN # AND #)
select top # * from [rredo_flags_dr1#]
SELECT mjd, plate, fiberID, ra, dec, targetType, sourceType, z, zErr, zWarning  into mydb.NOT_SKY from SpecObjAll WHERE z>=# AND z<#   AND plate>#
select * from stellarMassFSPSGranWideDust where specObjId=#
SELECT mjd, plate, fiberID, ra, dec, targetType, z, zErr, zWarning  into mydb.NOT_SKY from SpecObjAll WHERE z>=# AND z<#   AND plate>#
select top # * from [rredo_test]
select top #    FORMAT(s.loggadop,&&&), FORMAT(s.fehadop,&&&), FORMAT(s.teffadop,&&&),    s.plate,s.mjd,s.fiberid,s.snr,s.flag,   FORMAT(ph.extinction_g,&&&),   FORMAT(ph.psfMag_g,&&&), FORMAT(ph.psfMagErr_g,&&&),FORMAT(ph.psfMagErr_r,&&&),   Format(ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r,&&&) as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags into mydb.rredo_test from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select top #    FORMAT(s.loggadop,&&&), s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags into mydb.rredo_test from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select u.*, p.objId, ltrim(str(p.ra,#,#)) as ra, ltrim(str(p.dec,#,#)) as dec, dbo.fPhotoTypeN(p.type) as type from #x x, #upload u, photoTag p  where u.up_id = x.up_id and x.objID=p.objID and p.mode=# order by x.up_id
select * from galSpecInfo where specObjId=#
SELECT * FROM rredo_wflags_dr1#
SELECT mjd, plate, fiberID, ra, dec, targetType, z, zErr  into mydb.NOT_SKY from SpecObjAll WHERE z>=# AND z<#   AND plate>#
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_r, type_r, psfMagErr_r FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
select top # * from [rredo_wflags_dr1#]
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE  p.objid= # OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=# OR p.objid=#
SELECT mjd, plate, fiberID, ra, dec, targetType, z, e_z  into mydb.NOT_SKY from SpecObjAll WHERE z>=# AND z<#   AND plate>#
select * from zooConfidence where objid=#
select s.loggadop, s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags into mydb.rredo_wflags_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
SELECT mjd, plate, fiberID, ra, dec, targetType, z, z_err  into mydb.NOT_SKY from SpecObjAll WHERE z>=# AND z<#   AND plate>#
select s.loggadop, s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#, #,#)  as edgebadflags into mydb.clean_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select s.loggadop, s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as psfflags,   IIF((flags_r & #)!=# or  (flags_r & #) != # or (flags_g & #) !=# or (flags_g & #)!=#), #,#)  as edgebadflags into mydb.clean_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
SELECT mjd, plate, fiberID, ra, dec, targetType  into mydb.NOT_SKY_# from SpecObjAll WHERE z># AND z<#   AND plate>#   AND targetType != &&&
SELECT mjd, plate, fiberID, ra, dec, targetType  into mydb.NOT_SKY_# from SpecObjAll WHERE z>=# AND z<=#   AND plate>#   AND targetType != &&&
select s.loggadop, s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or     ((flags_g &#) !=# )),#,#) as myflagset1 into mydb.clean_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
select s.loggadop, s.fehadop, s.teffadop, s.plate,s.mjd,s.fiberid,s.snr,s.flag,ph.extinction_g,   ph.psfMag_g, ph.psfMagErr_g,ph.psfMagErr_r,ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r as gr0,   IIF((flags_r & #) !=# or (flags_r & #) !=# or   ((flags_r &#) !=# or (flags_g & #) !=# or (flags_g & #) !=# or   ((flags_g &#) !=# ),#,#) as myflagset1 into mydb.clean_dr1# from sppParams s   join Star as ph   on ph.objid = s.bestobjid  where s.sciencePrimary=#     and ph.type = #   and s.loggadop># and s.fehadop>#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r >=#   and ph.psfMag_g - ph.psfMag_r- ph.extinction_g + ph.extinction_r <= #   and ph.psfMag_r-extinction_r<#   and ph.extinction_g-ph.extinction_r<#    and sqrt(ph.psfMagErr_g*ph.psfMagErr_g+ph.psfMagErr_r*ph.psfMagErr_r)<#
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid=# OR p.objid=#
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid=# OR #
SELECT * FROM DR8datalegacy
select top # * from [SpecPhotoAll]
SELECT p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, modelFlux_u, modelFlux_g, modelFlux_r, modelFlux_i, modelFlux_z, modelFluxIVar_u, modelFluxIVar_g, modelFluxIVar_r, modelFluxIVar_i, modelFluxIVar_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
SELECT p.ra , p.dec, p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, p.nMgyPerCount_u, p.nMgyPerCount_g, p.nMgyPerCount_r, p.nMgyPerCount_i, p.nMgyPerCount_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
SELECT DISTINCT TOP # p.run, p.rerun, p.camcol, max(p.field) as &&&, max(p.ra) as &&&, max(p.dec) as &&& FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) GROUP BY p.run, p.rerun, p.camcol
select top # * from [DR8datalegacy]
SELECT    sp.specObjID,   gal.obj,   gal.objID,   gal.ra,   gal.dec,   gal.run,   gal.rerun,   gal.camcol,   gal.field,   gal.r,   gal.g,   gal.z,   petroRad_g,   petroRad_r,   petroRad_z,   petroR5#_g   petroR5#_r,   petroR5#_z,   petroR9#_g,   petroR9#_r,   petroR9#_z,   sp.z as redshift into MyDB.DR8datalegacy from galaxy as gal     JOIN SpecObj as sp     ON gal.specObjID=sp.specObjID   WHERE     sp.z < #     and sp.z > #
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT p.ra , p.dec, p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, p.nMgyPerCount_u, p.nMgyPerCount_g, p.nMgyPerCount_r, p.nMgyPerCount_i, p.nMgyPerCount_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.type=# AND p.field = #
SELECT  p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # p.apstar_id,   p.apogee_id,p.ra, p.dec, p.glon, p.glat,  p.vhelio_avg,p.vscatter,  a.teff,a.logg,  a.m_h   FROM apogeeStar p  JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id  JOIN aspcapStar a on a.apstar_id = p.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id
select * from sqllogall2#_#_#h_to_#_#h where mm = # and dd = # and hh = #
select * from zoo2Stripe8#Coadd1 where dr8objid=#
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_u, type_u, psfMagErr_u FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid=#
SELECT   s.OBJID, s.class,  s.plate, s.mjd, s.fiberid FROM SpecObj AS s  WHERE   s.OBJID == #
SELECT   s.OBJID, s.class,  s.plate, s.mjd, s.fiberid FROM SpecObj AS s  WHERE   s.OBJID = #
SELECT   s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM SpecObj AS s  WHERE   s.OBJID = #
SELECT   s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM SpecObj AS s  WHERE   s.objID = #
SELECT   s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM SpecObj AS s  WHERE   s.specobjid = #
SELECT   p.objid, s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   s.specobjid = #
select  p.objid, p.ra, p.dec, p.nuv_mag, p.nuv_magerr, p.fuv_mag, p.fuv_magerr, p.nuv_weight, p.nuv_artifact, p.E_bv, p.H_alpha_flux, p.Error_H_alpha_flux,p.H_alpha_ew, p.Error_H_alpha_ew, p.H_delta_flux,Error_p.H_delta_flux,p.Dn4#,p.Error_Dn4# into mydb.MyTable_# from GalexGR6.PhotoObjAll as p where p.ra>= # and p.ra<= # and p.dec>=# and p.dec<=#
SELECT   p.objid, s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   s.specobjid == #
SELECT   p.objid, s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid == #
SELECT  TOP # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  TOP # p.apstar_id,     p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND # AND p.g BETWEEN # AND # AND p.r BETWEEN # AND # AND p.i BETWEEN # AND # AND p.z BETWEEN # AND #
SELECT   p.objid, s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid = # OR #
SELECT   p.objid, s.specobjid, s.class,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid = # AND #
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.subClass,p.g,p.i,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
select yy, mm, dd, hh, mi, ss,  logID, clientIP, requestor, server, dbname, access,  elapsed, busy, rows, statement, error, errorMessage, isvisible  into sqllogall2#_#_#h_to_#_#h  from sqllogall  where yy = #   and mm between # and #   and dd between # and #   and hh between # and #
select count(*) as thecount
select * from sppLines where specObjId=#
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.clean, p.u, p.g, p.r, p.i, p.z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT TOP #  star.apogee_id, star.ra, star.dec, star.glon, star.glat,   star.vhelio_avg, star.vscatter,  obj.j, obj.h, obj.k, obj.ak_targ, obj.ak_targ_method, obj.ak_wise,  aspcap.teff, aspcap.logg, aspcap.metals FROM apogeeStar star  JOIN aspcapStar aspcap on aspcap.apstar_id = star.apstar_id  JOIN apogeeObject obj on aspcap.target_id = obj.target_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.vhelio_avg > #) and (star.starflag &  dbo.fApogeeStarFlag(&&&)) = #  and star.nvisits > # order by aspcap.apogee_id
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.subClass,p.g,p.i,p.r,p.u,p.u_g,p.u_i,p.u_r,p.u_z,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.subClass,p.g,p.i,p.r,p.u,p.u_g,p.u_i,p.u_r,p.u_z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.subClass,p.u,p.u_g,p.u_i,p.u_r,p.u_z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT gal.ra, gal.dec, i.h_alpha_eqw, i.h_beta_eqw FROM galaxy gal join SpecObj s on s.bestObjID=gal.objID join galSpecLine i on i.specObjID=s.specObjID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec, i.h_alpha_eqw FROM galaxy gal join SpecObj s on s.bestObjID=gal.objID join galSpecLine i on i.specObjID=s.specObjID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec, i.h_alpha_eqw FROM galaxy gal join SpecObj s on s.bestObjID=gal.objID join galSpecLine i on i.specObjID=s.bestObjID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec, i.h_alpha_eqw FROM galaxy gal join SpecObj s on s.bestObjID=gal.objID join galSpecLine i on i.specObjID=gal.objID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec FROM galaxy gal join SpecObj s on s.bestObjID=gal.objID join galSpecLine i on i.specObjID=gal.objID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec FROM galaxy gal join SpecObj s on s.bestObjID=gal.ObjID join galSpecLine i on i.specObjID=s.bestObjID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT gal.ra, gal.dec FROM galaxy gal join SpecObj s on s.bestObjID=g.ObjID join galSpecLine i on i.specObjID=s.bestObjID WHERE gal.ra between # and # AND gal.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.bestObjID=g.ObjID join galSpecLine i on i.specObjID=s.bestObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.bestObjID=g.ObjID join galSpecLine l on l.specObjID=s.bestObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.bestObjID=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.bestObjID=g.ObjID join galSpecLine l on l.specObjID=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec, l.h_alpha_eqw, l.h_beta_eqw FROM galaxy g join SpecObj s on s.bestObjID=g.ObjID join galSpecLine l on l.specObjID=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r    on r.RunID=d.RunID -- join two things    join Users u    on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r    on r.UserID=u.UserID where r.RunID is NULL    -- except select UserID from Users except select UserID from Runs   -- union all select UserID from Users union all select UserID from Runs
SELECT spec.bestobjid, spec.ra, spec.dec, spec.z, spec.zErr, spec.class, spec.subclass,        phot.objID, phot.dered_u, phot.dered_g, phot.dered_r, phot.dered_i, phot.dered_z INTO MyDB.MyTable_# FROM SpecObj as spec, PhotoObj as phot WHERE   spec.bestobjid = phot.objID AND (spec.zWarning = # OR spec.zWarning = #) AND spec.ra BETWEEN #   and #  AND spec.dec BETWEEN # and # OR   spec.bestobjid = phot.objID AND (spec.zWarning = # OR spec.zWarning = #) AND spec.ra BETWEEN # and # AND spec.dec BETWEEN # and #
SELECT SpecObj.bestobjid, SpecObj.ra, SpecObj.dec, SpecObj.z, SpecObj.zErr, SpecObj.class, SpecObj.subclass,        PhotoObj.objID, PhotoObj.dered_u, PhotoObj.dered_g, PhotoObj.dered_r, PhotoObj.dered_i, PhotoObj.dered_z INTO MyDB.MyTable_# FROM SpecObj , PhotoObj  WHERE   SpecObj.bestobjid = PhotoObj.objID AND (SpecObj.zWarning = # OR SpecObj.zWarning = #) AND SpecObj.ra BETWEEN #   and #  AND SpecObj.dec BETWEEN # and # OR   SpecObj.bestobjid = PhotoObj.objID AND (SpecObj.zWarning = # OR SpecObj.zWarning = #) AND SpecObj.ra BETWEEN # and # AND SpecObj.dec BETWEEN # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.sbestObjID=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.specObjID=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT g.ra, g.dec FROM galaxy g join SpecObj s on s.bestObj=g.ObjID WHERE g.ra between # and # AND g.dec between # and # and s.z between # and #
SELECT ra, dec FROM galaxy WHERE ra between # and # AND dec between # and #
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- select * from Users where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------  select * from Users where UserID in (   select UserID   from runs   where runID in (select top # RunID from data order by y desc) ) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID --and r.UserID=u.UserID order by y   -------------------------------------------    select count(*) from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --- join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  select top # u.Name from Data d   cross join Runs r --on r.RunID=d.RunID    join Users u on u.UserID=r.UserID order by y desc     -------------------------------------------  select u.*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID    -------------------------------------------  select u.*, r.RunID from Users u   join Runs r on r.UserID=u.UserID    -------------------------------------------  select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID       -------------------------------------------  select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- select * from Users where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------  select * from Users where UserID in (   select UserID   from runs   where runID in (select top # RunID from data order by y desc) ) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID --and r.UserID=u.UserID order by y   -------------------------------------------    select count(*) from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --- join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r    on r.RunID=d.RunID -- join two things    join Users u    on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r    on r.UserID=u.UserID where r.RunID is NULL    -- except select UserID from Users except select UserID from Runs   -- union all select UserID from Users union all select UserID from Runs      -- Q1: what is the relationship of x and y from Data   -- Q2:
SELECT COUNT(*) FROM SpecObj WHERE
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- select * from Users where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------  select * from Users where UserID in (   select UserID   from runs   where runID in (select top # RunID from data order by y desc) ) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID --and r.UserID=u.UserID order by y   -------------------------------------------    select count(*) from Data as d, Runs r, Users u   -------------------------------------------  select top # u.Name from Data d   join Runs r on r.RunID=d.RunID  - join Users u on u.UserID=r.UserID order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- select * from Users where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------  select * from Users where UserID in (   select UserID   from runs   where runID in (select top # RunID from data order by y desc) ) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID --and r.UserID=u.UserID order by y   -------------------------------------------    select count(*) from Data as d, Runs r, Users u   -------------------------------------------  select top # u.Name from Data d   join Runs r on r.RunID=d.RunID  -  join Users u on u.UserID=r.UserID order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- select * from Users where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------  select * from Users where UserID in (   select UserID   from runs   where runID in (select top # RunID from data order by y desc) ) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # RunID from data order by y desc -- #  ------------------------------------------- select UserID from runs where runID = # -- #   ------------------------------------------- select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  ------------------------------------------- -- SET OPERATIONS -------------------------------------------  select UserID from Users except select UserID from Runs    -------------------------------------------  select UserID from Users union select UserID from Runs    -------------------------------------------   select UserID from Users union all select UserID from Runs
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #    declare @b float = # select memes=round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b having count(ID) > # order by #    select top # * from data order by y desc -- retrieve entire top row    select top # RunID from data order by y desc -- retrieve the RunID value of the top row    select top # UserID from runs where runID = # -- accidentally called top # on a table with only one row; this does not cause a problem!
select UserID from Users
select top # * from [MyTable_#]
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  -------------------------------------------   select UserID from Users except select UserID from Runs       -------------------------------------------   select UserID from Users union select UserID from Runs          -------------------------------------------   select UserID from Users union all select UserID from Runs
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    --select u.*, r.RunID, r.Comment --from Users u   -- left join Runs r on r.UserID = u.UserID --where r.RunID is NULL  select UserID from Users union all select UserID from Runs
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r    on r.RunID=d.RunID -- join two things    join Users u    on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r    on r.UserID=u.UserID where r.RunID is NULL    select UserID from Users except select UserID from Runs
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  -------------------------------------------   select UserID from Users except select UserID from Runs       -------------------------------------------   select UserID from Users union select UserID from Runs
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    --select u.*, r.RunID, r.Comment --from Users u   -- left join Runs r on r.UserID = u.UserID --where r.RunID is NULL  select UserID from Users union select UserID from Runs
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID --where r.RunID is null  -------------------------------------------   select UserID from Users except select UserID from Runs
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    --select u.*, r.RunID, r.Comment --from Users u   -- left join Runs r on r.UserID = u.UserID --where r.RunID is NULL  select UserID from Users except select UserID from Runs
select u.*, r.RunID, r.comment from Users u    left join Runs r on r.UserID=u.UserID where r.RunID is null   except UserID = #
select u.*, r.RunID, r.comment from Users u    left join Runs r on r.UserID=u.UserID where r.RunID is null   except u.UserID = #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r    on r.RunID=d.RunID -- join two things    join Users u    on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r    on r.UserID=u.UserID where r.RunID is NULL
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunID, r.Comment from Users u    left join Runs r on r.UserID = u.UserID where r.RunID is NULL
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r    on r.UserID=u.UserID where r.RunID is NULL
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID=r.UserID order by y        -- left join select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID where r.RunID is NULL
select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID where r.RunID is NULL
select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID = u.UserID -- if the same, then inner join (corresponds), if not corresponding, then null  where r.RunID is NULL
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID, r.Comment --from Users u --  left join Runs r on r.UserID=u.UserID       -------------------------------------------  select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID where r.RunID is null
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunID, r.Comment from Users u    left join Runs r on r.UserID = u.UserID where r,RunID is NULL
select u.*, r.RunID, r.comment from Users u    left join Runs r on r.UserID=u.UserID where r.RunID is null
select u.*,  r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID where r.RunID is Null
select p.objid as name, p.ra, p.dec from photoobj p, specobj s where p.objid=s.bestobjid and p.r < # and (s.class = &&&)
select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID = u.UserID -- if the same, then inner join, if not corresponding, then null
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  --select u.*, r.RunID --from Users u --  join Runs r on r.UserID=u.UserID    -------------------------------------------  select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID, r.Comment from Users u    left join Runs r on r.UserID=u.UserID
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunID, r.Comment from Users u    left join Runs r on r.UserID = u.UserID
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID=r.UserID order by y     select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID, r.Comment from Users u   right join Runs r on r.UserID = u.UserID
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID=r.UserID order by y     select u.*, r.RunID, r,Comment from Users u   left join Runs r on r.UserID=u.UserID
SELECT TOP #
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunUD, r.Comment from Users u    left join Runs r on r.UserID = u.UserID
select u.*, r.RunID, r.Comment from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID, r.Comment from Users u    join Runs r on r.UserID=u.UserID
select u.*, r.RunID, r.comment from Users u    left join Runs r on r.UserID=u.UserID
select u,*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunUD, r.Comment from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.* from Users u    join Runs r on r.UserID=u.UserID
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.* from Users u    join Runs r on r.UserID = u.UserID
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  --select u.*, r.RunID --from Users u --  left join Runs r on r.UserID=u.UserID    -------------------------------------------  select u.*, r.RunID from Users u   join Runs r on r.UserID=u.UserID
select u.*, r.* from Users u   join Runs r on r.UserID=u.UserID
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID=r.UserID order by y     select u.*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u     join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u   join Runs r on r.UserID = u.UserID
select u.*, r.RunID from Users u    right join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u   left join Runs r on r.UserID = u.UserID
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  --select top # u.Name --from Data d --  cross join Runs r --on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc     -------------------------------------------  select u.*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u   left join rund r on r.UserID = u.UserID
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunID from Users u    join Runs r on r.UserID = u.UserID
select u.*, r.RunID from Users u    join Runs r on r.UserID=u.UserID
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID = r.UserID order by y desc    select u.*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u   join Runs r on r.UserID=u.UserID
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    --select u.Name --from Data as d,Runs r, Users u --where d.RunID = r.RunID and r.UserID = u.UserID --order by y    select u.*, r.RunID from Users u   left join Runs r on r.UserID = u.UserID
select u.*, r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*,  r.RunID from Users u   left join Runs r on r.UserID=u.UserID
select u.*, r.RunID from Users u    left join Runs r on r.UserID=u.UserID
select top # u.Name
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID = r.UserID order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.UserID = r.UserID order by y asc
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  --select top # u.Name --from Data d --  join Runs r on r.RunID=d.RunID  --  join Users u on u.UserID=r.UserID --order by y desc             -------------------------------------------  select top # u.Name from Data d   cross join Runs r --on r.RunID=d.RunID    join Users u on u.UserID=r.UserID order by y desc
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   --select count(*) from dat --select count(*) --from Data as d,Runs r, Users u --where d.RunID = r.RunID --and r.UserID = u.UserID   select top # u.Name from Data d   cross join Runs r --on r.RunID = d.RunID   join Users u on u.UserID =r.UserID order by y desc
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   --select count(*) from dat --select count(*) --from Data as d,Runs r, Users u --where d.RunID = r.RunID --and r.UserID = u.UserID   select top # u.Name from Data d   inner join Runs r --on r.RunID = d.RunID   join Users u on u.UserID =r.UserID order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   inner join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.RunID = r.UserID order by y desc
select top # u.name
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------    --select count(*) --from Data as d, Runs r, Users u   -------------------------------------------  select top # u.Name from Data d   join Runs r on r.RunID=d.RunID    join Users u on u.UserID=r.UserID order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.RunID<r.UserID order by y asc
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   --select count(*) from dat --select count(*) --from Data as d,Runs r, Users u --where d.RunID = r.RunID --and r.UserID = u.UserID   select top # u.Name from Data d   join Runs r on r.RunID = d.RunID   join Users u on u.UserID =r.UserID order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select top # u.Name from Data d   join Runs r on r.RunID=d.RunID -- join two things    join Users u on u.RunID=r.UserID order by y asc
SELECT p.objId, p.ra,p.dec,p.petror9#_r, p.expAB_r,     p.dered_u as u, p.dered_g as g, p.dered_r as r, p.dered_i as i,      s.z, s.plate, s.mjd, s.fiberid, n.sersic_n FROM galaxy AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid    JOIN nsatlas AS n ON n.mjd = s.mjd and n.fiberID = s.fiberID and n.plate = s.plate WHERE p.petror9#_r > #   and p.ra between # and #   and s.z between # and #   and p.g < #
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   --select count(*) from dat --select count(*) --from Data as d,Runs r, Users u --where d.RunID = r.RunID --and r.UserID = u.UserID   select top # u.UserID from Data d   join Runs r on r.RunID = d.RunID   join Users u on u.UserID =r.UserID order by y desc
select top # u.UserID
select top # u.userid
select top # UserID from Users
select top # UserID in Users
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------  --select count(*) from data    select count(*) from Data as d, Runs r, Users u
select runid,x,y,x*y-# as derived from Data where x># and x+y between # and # order by runid, x*y desc    select sum(x*y-#) as derived, stdev(y) from Data where x># and x+y between # and # group by runid order by runid desc    select top # runid from data order by runid desc -#    select userid from runs where runid = # -#    select * from users where userid = (select userid from runs where runid = #)
select count(*) from Data as d, Runs r, Users u
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------  --select count(*) from data    select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select count(*) from data select count(*) from Data as d, Runs r, Users u
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   select count(*) from data select count(*) from Data as d,Runs r, Users u --where d.RunID = r.RunID --and r.UserID = u.UserID
select counr(*) from Data    from Data as d, Runs r, Users u where d.RunID = RunID and r.UserID = u.UserID order by y
select count(*) from data  select count(*) from data as d, runs r, users u --where d.runid=r.runid and r.userid=u.userid --order by y
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- contraints for multiple tables order by y    select count(*) from data     select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID -- multiple tables order by y
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   select count(*) from data select count(*) from Data as d,Runs r, Users u where d.RunID = r.RunID --and r.UserID = u.UserID
select count(*) from data select count(*) from Data as d, Runs r, Users u where d.RunID = r.RunID --and r.UserID = u.UserID
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID and r.UserID=u.UserID --order by y    -------------------------------------------  --select top # u.Name --from Data as d, Runs r, Users u --where d.RunID=r.RunID --and r.UserID=u.UserID --order by y   -------------------------------------------  select count(*) from data    select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID -- and r.UserID=u.UserID
select count(*) from data select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID
select count(*) from data select count(*) from Data as d, Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID
select count(*) from data  select count(*) from data as d, runs r, users u where d.runid=r.runid and r.userid=u.userid --order by y
select count(*) from data    select count(*) from Data as d, Runs r, Users u   where d.RunID = r.RunID and r.UserID = u.UserID
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))   select count(*) from data select count(*) from Data as d,Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID
select count(*) from Data as d, Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID
select count(*) from data from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID
select count(*) from data as d, runs r, users u where d.runid=r.runid and r.userid=u.userid --order by y
select count(*) from data    select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID
select count(*) from Data as d, Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID order by y
select count(*) from data as d, runs r, users u where d.runid=r.runid -- and r.userid=u.userid --order by y
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    select count(*) from Data as d,Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID
select count(*) from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID
select top # u.Name from Data as d, Runs r, Users u   where d.RunID = r.RunID and r.UserID = u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID = RunID and r.UserID = u.UserID order by y
select * from SpecLineIndex where specObjId=#
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u   where d.RunID = r.RunID and r.UserID = u.UserID orde by y
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    select u.Name from Data as d,Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID --and r.UserID=u.UserID order by y
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID -- and r.UserID=u.UserID order by y
select top # u.name from data as d, runs r, users u where d.runid=r.runid -- and r.userid=u.userid order by y
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )    select u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select top # RunID from data order by y desc -- --select UserID from runs where runID = # -# --select * from Users where UserID = #  --select * --from Users --where UserID = (select UserID from runs where runID = #)   --select * --from Users --where UserID in (   --select UserID   --from runs where    --runID in (select top # RunID from data order by y desc))    select u.Name from Data as d,Runs r, Users u   where d.RunID = r.RunID and r.UserID = u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID  order by y
select top # u.Name from Data as d, Runs r Users u where d.RunID = RunID and r.UserID = u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.runID and r.UserID=u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select top # u.name from data as d, runs r, users u where d.runid=r.runid and r.userid=u.userid order by y
select top # RunID from data order by y desc -- #   ------------------------------------------- --select UserID from runs where runID = # -- #   ------------------------------------------- --select * from Users where UserID=#   ------------------------------------------- --select * --from Users --where UserID=(select UserID from runs where runID = #) -- #  -------------------------------------------   --select * --from Users --where UserID in ( --  select UserID --  from runs --  where runID in (select top # RunID from data order by y desc) --) -#    -------------------------------------------  select top # u.Name from Data as d, Runs r, Users u where d.RunID=r.RunID and r.UserID=u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u where d.RunID = r.RunID and r.UserID = u.UserID order by y
select top # u.Name from Data as d, Runs r, Users u order by y
select top # RunID from data order by y desc -- # find largest y values
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in ( -- use in instead of = because more than # value   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) -- use in instead of = because more than # value )
select top # RunID, x,y, x*y - # as derived from Data where x > # and x+y between # and # order by RunID
select top # RunID from data order by y desc -- #
select *
select top # RunID from Data order by y desc-#
select top # RunID from data order by y desc --
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID in (   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) )
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID = (   select UserID    from runs   where runID in (select top # RunID from Data order by y desc) )
select runid,x,y,x*y-# as derived from Data where x># and x+y between # and # order by runid, x*y desc    select sum(x*y-#) as derived, stdev(y) from Data where x># and x+y between # and # group by runid order by runid desc    select top # runid from data order by  desc -#    select userid from runs where runid = # -#    select * from users where userid = (select userid from runs where runid = #)
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID = (   select UserID    from runs   where runID = (select top # RunID from Data order by y desc) )
SELECT    m.objID, m.ra AS ra1, m.dec AS dec1,    n.objid, n.distance,    o.ra AS ra2, o.dec AS dec2, o.expAB_r into mydb.MyTable_# from MyDB.MyTable AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID = (select UserID from runs where runID = (select top # RunID from Data order by y desc))
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    -- select top # * from Data order by y desc --    -- select top # RunID from Data order by y desc -- # #    -- select UserID from runs where runID = # -- #    -- select * from Users where UserID = # --    select * from Users where UserID = (select UserID from runs where runID = #)
select top # * from data order by y des
SELECT    m.objID, m.ra AS ra1, m.dec AS dec1,    n.objid, n.distance,    o.ra AS ra2, o.dec AS dec2, o.expAB_r FROM MyDB.MyTable AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #    declare @b float = # select memes=round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b having count(ID) > # order by #    select top # * from data order by y desc -- retrieve entire top row    select top # RunID from data order by y desc -- retrieve the RunID value of the top row    select top # UserID from runs where runID = #
SELECT    m.id, m.ra AS ra1, m.dec AS dec1,    n.objid, n.distance,    o.ra AS ra2, o.dec AS dec2, o.expAB_r FROM MyDB.MyTable AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    select top # * from Data order by y desc    select top # RunID from Data order by y desc    -- select UserID from runs where runID = # -- #    select * from Users where UserID = #
select top # * from data order by y desc -- #
select top # RunID from data order by y desc -#
select top # RunID from data order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    select top # * from Data order by y desc    select top # RunID from Data order by y desc    select UserID from runs where runID = #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    select top # * from Data order by y desc    select top # RunID from Data order by y desc
select top # * from data order by y desc
select top #* from data order by y desc -- #
select count(*) as count
select top # RunID from Data order by y desc
select top #* from data order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b having count(ID) > # order by #    select top # * from Data order by y desc
select top # * from Data order by y desc
select round(x/@b,#)*@b, cts=count(ID) from Data where x > # group by round(x/@b,#)*@b   having count(ID)># order by #
select round(x/@b,#)*@b, cts=count(ID) from Data where x > # group by round(x/@b,#)*@b having count(ID) > # order by #
select round(x/@b,#) * @b, cts = count(ID) from Data where x > # group by round(x/@b,#) * @b    having count(ID) > # order by #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b   having count(ID) > # order by #
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b having count(ID)># order by #
select x=round(x/@b, #) * @b, cts=count(ID) from Data where x > # group by round(x/@b, #) * @b having count(ID) > # order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data where x > # group by round(x/@b, #) * @b   having count(ID) > # order by #
select x = round(x/@b, #)*@b, counts = count(ID) from Data where x> # group by round(x/@b,#)* @b   having count(ID)># order by #
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #    declare @b float = # select memes=round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b having count(ID) > # order by #
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b   having count(ID)># order by #
select x=ROUND(x/@b,#)*@b, cts=count(ID) from Data where x > # group by Round(x/@b,#)*@b having count(ID) > # order by #
select x = round(x/@b, #)*@b, counts = count(ID) from Data where x> # group by round(x/@b,#)* @b order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data   where x > # group by round(x/@b, #) * @b   having count(ID) > #   order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data where x > # group by round(x/@b, #) * @b order by #
select x=ROUND(x/@b,#)*@b, cts=count(ID) from Data where x > # group by Round(x/@b,#)*@b having count(ID) > # order y #
select x=round(x/@b,#) * @b, cts=count(ID) from Data where x> # group by round(x/@b,#) * @b having count(ID) > # order by #
select x = round(x/@b,#) * @b , cts = count(ID) from Data group by round(x/@b,#) * @b   having count(ID) > # order by #
select x=round(x/@b,#) * @b, cts=count(ID) from Data where x> # group by round(x/@b,#) * @b   having count(ID) > #   order by #
select round(x/@b,#) * @b, cts=count(ID) from Data where x># group by round(x/@b,#)*@b having count(ID) > # order by #
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b having count(ID) > # order by #
select round(x/@b,#) * @b, cts = count(ID) from Data group by round(x/@b,#) * @b    having count(ID) > # order by #
select round(x/@b, #) * @b, cts=count(ID) from Data where x > # group by round(x/@b, #) * @b having count(ID) > # order by #
select round(x/@b,#) * @b, cts=count(ID) from Data where x > # group by round(x/@b,#) * @b   having count(ID) > # order by #
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b   having count(ID) > # order by #
select x=round(x/@b,#) * @b, cts=count(ID) from Data group by round(x/@b,#) * @b   having count(ID) > #   order by #
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b   having count(ID) > #
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #    declare @b float = # select memes=round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b   order by #
select x = round(x/@b, #)*@b, counts = count(ID) from Data group by round(x/@b,#)* @b order by #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #     declare @b float = # select round(x/@b,#) * @b, cts=count(ID) from Data group by round(x/@b,#) * @b order by #
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #    declare @b float = # select x=round(x/@b, #) * @b as memes, cts = count(ID) from Data group by round(x/@b, #) * @b   order by #
select round(x/@b,#) * @b, cts = count(ID) from Data group by round(x/@b,#) * @b order by #
select x = round(x/@b,#) * @b , cts = count(ID) from Data group by round(x/@b,#) * @b order by #
select round(x/@b,#) * @b, cts = count(ID) from Data group by round(x/@b,#) * @b order by #  *hist
select round(x/@b,#)*@b, cts=count(ID) from Data group by round(x/@b,#)*@b order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data group by round(x/@b, #) * @b   order by #
select round(x/@b,#) * @b, cts = count(ID) from Data group by round(x/@b,#) * @b order by #  % histogram
select x=ROUND(x/@b,#)*@b, cts=count(ID) from Data group by Round(x/@b,#)*@b order by #
select round(x/@b,#) * @b, cts=count(ID) from Data group by round(x/@b,#)*@b order by #
select x = round(x/@b, #) * @b, cts = count(ID) from Data group by x order by #
SELECT COUNT(*) FROM SpecObjAll WHERE
select round(x/@b, #) * @b, cts=count(ID) from Data group by round(x/@b, #) * @b order by #
select x=round(x/@b,#) * @b, cts=count(ID) from Data group by round(x/@b,#) * @b order by #
select ROUND(x/@b,#)*@b, cts=count(ID) from Data group by Round(x/@b,#)*@b order by #
select x = round(x/@b,#) * @b , cts = count(ID) from Data group by round(x,#) order by #
select round(x/@b,#) * @b , cts = count(ID) from Data group by round(x,#) order by #
select round(x/@b,#) * @b, cts=count(ID) from Data group by round(x/@b,#) * @b order by #
select round(x/@b, #)* @b as x, cts=count(ID) from Data  group by round(x/@b, #)* @b order by #
select ROUND(x, #) as xx, cts = count(ID) from Data group by xx order by #
select ROUND(x, #) as x2, cts = count(ID) from Data group by x2 order by #
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x, #) as crap, countsLOL = count(ID) from Data group by round(x, #) order by #
select ROUND(x,#) as x, cts=count(ID) from Data group by Round(x,#) order by #
select ROUND(x, #) as x, cts = count(ID) from Data group by x order by #
select ROUND(x, #) as x, cts=count(ID) from Data group by round(x, #) order by #
select ROUND(x,#) as x, cts = count(ID) from Data group by round(x,#) order by #
select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #
select ROUND(x, #) as x, cts = count(ID) from Data group by round(x, #) order by #
select ROUND(x,#) as x, cts=count(ID) from Data where x > # and x+y between # and # group by Round(x,#) order by #
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc    select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc    select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by #
select ROUND(x,#) as x, cts = count(ID) from Data group by round(x,#) order by # # histogram
select ROUND(x, #) as x, cts = count(ID) from Data where x > # and x + y between # and # group by round(x, #) order by #
select ROUND(x,#) as x, cts=count(ID) from Data  group by round(x,#) order by #
select Round(x,#) as x, cts = count(ID) from Data group by round(x,#) order by #
select ROUND(x,#) as x, cts=count(ID) from Data group by found(x,#) order by #
select ROUND(x,#) as x, cts=count(ID) from Data where x > # and x+y between # and # group by round(x,#) order by #
select ROUND(x, #) as x, cts=count(ID) from Data group by round(x,#) order by #
select ROUND(x, #) as x, cts = count(ID) from Data where x > # and x + y between # and # group by x order by x
select Round(x,#) as x, cts=count(ID) from Data where x > # and x+y between # and # group by Round(x,#) order by #
select ROUND(x,#) as x, cts=count(ID) from Data  where x># and x+y between # and # group by round(x,#) order by #
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select ROUND(x, #) as x, cts = count(ID) from Data where x > # and x + y between # and # group by x order by RunID asc
select ROUND(x,#) as x, cts=count(ID) from Data group by round(x,#) order by RunID asc
select name from sysobjects where type=&&& and category=# order by name asc
select name from sysobjects where xtype in (N&&&, N&&&, N&&&, N&&&, N&&&) order by name asc
select RunID, sum(x*y-#) as derived, stdev(y), cts = count(ID) from Data where x># and x+y between # and # group by RunID order by RunID asc
select top # RUnID, x, y, x*y - # as derived, cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y - #) as derived, stdev(y) into mydb.MyTable from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc       select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc
select RunID, sum(x*y-#) as derived, cts=count(ID) from Data where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived, cts=count(ID) from Data
select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID desc order by RunID asc
select RunID, sum(x*y-#) as derived, cts=count(ID) from Data  where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#)as derived, cts=count(ID) from Data
select RunID, sum(x*y-#) as derived, cts=count(ID) from Data where x># and x+y between # group by RunID order by RunID asc
SELECT *
select RunID, sum(x*y - #) as derived, cst=count(ID) from Data where x > # and x+y between # and # group RunID order by RunID asc
select sum(x*y - #) as derived, cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID desc   order by RunID asc
select top RunID, sum(x*y-#)as derived, cts=count(ID) from Data
select RunID, sum(x*y-#) as derived, cts=counts(ID) from Data  where x># and x+y between # and # group by RunID order by RunID asc
select runid,x,y,x*y-# as derived from Data where x># and x+y between # and # order by runid, x*y desc    select sum(x*y-#) as derived, stdev(y) from Data where x># and x+y between # and # group by runid order by runid desc
select RunID, sum(x*y-#) as derived, cts=counts(ID) where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y #) as derived, stdev(y), cts = count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID,sum(x*y #) as derived, cts = count(ID) from Data where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived, stdev(y), cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x*y-#) as derived, stdev(y), cts = count(ID) from Data where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y - #) as derived, cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived,stdev(y), cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived, cts=count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x * y - #) as derived, stdev(y), cts = count(ID) from Data where x > # and x + y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y #) as derived, stdev(y), count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x * y - #) as derived, stdev(y), count(ID) from Data where x > # and x + y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived,stdev(y), count(ID) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID,sum(x*y #) as derived,stdev(y) from Data where x># and x+y between # and # group by RunID order by RunID asc
select RUNID, sum(x * y #) as derived, stdev(y) from Data where x > .# and x+y between # and # group by RUNID order by RUNID asc
select RunID, sum(x*y-#) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID
select RunID, sum(x*y-#) as derived,stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x*y-#) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived, stdev(y) as sdv from Data where x># and x+y between # and # group by RunID order by RunID asc
select RunID, sum(x*y #) as derived, stdev(y) from Data where x > # and x+y between # and # group by RunID order by RunID asc
select sum(x * y - #) as derived, stdev(y) from Data where x > # and x + y between # and # group by RunID order by RunID asc
select RunID, sum(x*y-#) as derived,stdev(y) from Data where x > # and x+y between # and # group by RunID   order by RunID asc
select top # x,y,x*y-# as derived from Data where x># and x+y between # and # order by RunID, x*y desc
select top # RunID, x,y, x*y - # as derived
select sum(x * y #) as derived, stdev(y) from Data where x > .# and x+y between # and #
select top # x,y,x*y-# as derived from Data where x># and x+t between # and # order by RunID, x*y desc
select sum(x*y - #) as derived, stdev(y) as &&& from Data where x > # and x+y between # and #
select sum(x*y-#) as derived, stdev(y) from Data where x># and x+y between # and #
select sum(x*y - #) as derived, stdev(y) as stdev of y from Data where x > # and x+y between # and #
select sum(x*y-#) as derived, steve(y) from Data where x># and x+y between # and #
select sum(x*y-#) as derived,stdev(y) from Data where x > # and x+y between # and #
select sum(x * y - #) as derived, stdev(y) from Data where x > # and x + y between # and #
select sum(x*y-#) as derived, stdev(y) from Data where x > # and x+y between # and #
select sum(x*y #) as derived, stdev(y) from Data where x > # and x+y between # and #
select sum(x*y-#) as derived, stdev(y) as sdv from Data where x># and x+y between # and #
select top # RunID, x,y, x*y - # as derived from Data
select sum(x*y - #) as derived, stdev(y) as stdev from Data where x > # and x+y between # and #
select sum(x*y #) as derived,stdev(y) from Data where x># and x+y between # and #
select sum(x*y-#) as derived, steve(y) from Data where x > # and x+y between # and #
select sum(x * y - #) as derived, stddev(y) from Data where x > # and x + y between # and #
select sum(x*y - #) as derived
select sum(x*y - #) as derived, stdev(y) from Data where x > # and x+y between # and #
select sum(x*y-#) as derived
select sum(x*y - #) as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select sum(x * y - #) as derived
select sum(x*y #) as derived
SELECT TOP # u, g, r, i, z  FROM Galaxy with (nolock) WHERE (objID%#) = #     AND (r between # and #)
select sum(x * y - #) as derived from Data where x > # and x + y between # and # order by RunID, x * y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc
select top # RunID, x, y, x*y-# as derived  from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # RunID, x,y, x*y # as derived from Data where x># and x+y between # and # order by RunID x*y desc
select top # RunID, x, y, x*y # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # runid,x,y,x*y-# as derived from Data where x># and x+y between # and # order by runid, x*y desc
select top # RunID, x,y, x*y-# as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # RunID, x, y, x*y-# as derived from Data where x > # and x+y between # and # order by RunID, derived desc
select top # RunID, x, y, x * y - # as derived from Data where x > # and x + y between # and # order by RunID, x * y desc
select top # RunID, x,y, x*y - # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # RunID, x, y, x*y-# as derived from Data where x > # and x+y between # and # order by x*y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # RunID, x,y, x*y - # as derived from Data where x># and x+y between # and # order by RunID, x*y desc
select top # RUnID, x, y, x*y - # as derived from Data where x > # and x+y between # and #    order by RunID, x*y desc
select top # x, y, x*y - # as derived from DR1 where x > # and x+y between # and # order by x*y desc
select top # RunID x, y, x*y-# as derived  from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # RunID, x, y, x*y - # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # x, y, x*y-# as derived from Data where x > # and x+y between # and # order by RunID, derived desc
select top # x, y, x*y # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # x,y, x*y - # as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # x,y, x*y-# as derived from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # x,y, x*y - # as derived from Data where x># and x+y between # and # order by RunID, x*y desc
select top # x, y, x*y-# as derived  from Data where x > # and x+y between # and # order by RunID, x*y desc
select top # x, y, x*y-# as derived from Data where x># and x+y between # and # order by RunID, x*y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and #    order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by y desc order by x*y desc
select top # x,y, x*y # as derived from Data where x># and x+y between # and # order by x*y desc
select top # x, y, x*y-# as derived from Data where x > # and x+y between # and # order by x*y desc
select top # x, y x*y - # as derived from Data where x > # and x+y between # and #    order by y desc
select top # x,y, x*y # as derived from Data where x># add x+y between # and # order by x*y desc
select top # x, y, x * y - # as derived from Data where x > # and x + y between # and # order by derived desc
select top # x,y, x*y-# as derived  from Data where x># and x+y between # and # order by derived desc
select top # x,y, x*y - # as derived from Data where x># and x+y between # and # order by x*y desc
select top # x,y, x*y - # as derived from Data where x > # and x+y between # and # order by x*y desc
select top # x,y, x*y-# as derived from Data where x > # and x+y between # and # order by x*y desc
select top # x, y, x*y # as derived from Data where x > # and x+y between # and # order by x*y desc
select top # x, y, x * y - # as derived from Data where x > # and x + y between # and # order by x * y desc
select top # x,y,x*y-# as derived from Data where x># and x+y between # and # order by x*y desc
select top # x,y, x*y-# as derived  from Data where x># and x+y between # and # order by x*y desc
select top # x, y, x*y-# as derived from Data where x > # and x+y between # and # order by derived desc
select top # x, y, x*y-# as derived  from Data where x > # and x+y between # and # order by x*y desc
select top # x, y, x*y-# as derived from Data where x># and x+y between # and # order by x*y desc
select top # x,y, x*y # as derived from Data where x># add x+y between # and # order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by y desc
select top # x,y,x*y-# as derived from data
select top # x,y, x*y - # as derived from Data where x># and x+y between # and # order by y desc
select top # x, y, x*y # as derived from Data where x > # and x+y between # and # order by y desc
select top # x,y, x*y-# as derived from Data where x > # and x+y between # and # order by y desc
select top # x, y, x*y - # as derived from Data where x > # and x+y between # and # order by y asc
select top # x,y, x*y-# as derived  from Data where x># and x+y between # and # order by y desc
select top # x,y, x*y # as derived from Data where x># abd x+y between # and # order by y desc
select top # x,y, x*y-# as derived from Data where x > # and x+y betweeb # and # order by y desc
select top # x, y, x*y-# as derived from Data where x > # and x+y between # and # order by y desc
select top # x, y, x * y - # as derived from Data where x > # and x + y between # and # order by y desc
select x,y from data where x > #
select top # x, y, x*y-# as derived from Data where x># and x+y between # and # order by y desc
select top # x, y, x*y-# as derived  from Data where x > # and x+y between # and # order by y desc
select top # x, y into mydb.MyTable from Data where x > # order by y desc
select top # x, y  from Data where x > # order by y desc
select top # x,y from Data where x># order by y desc
select top # x,y from Data where x > #  order by y desc
select top # x,y from Data where x > # order by y desc
select top # x, y from Data where x > # order by y desc
select x,y  from Data where x># order by y desc
select top # x,y from Data where x > #   order by y desc
select top # x, y from Data where x># order by y desc
select x,y into mydb.MyTable from data where x > #
select top # x,y from Data where x>#
select top # x,y from Data where x > #
select top # x, y from Data where x > #
select x,y  from Data where x>#
select top # x, y from Data where x>#
select x, y into mydb.MyTable from Data where x > #
select x, y from Data where x > .#
select x,y from Data where x>#
select x, y from Data where x > #
select x, y from Data   where x > #
select x,y from Data   where x>#
select x,y from Data where x > #
select d, y from Data where x > #
select x, y from Data where x>#
SELECT x, y into mydb.MyTable from Data WHERE X > #
select top # * from [Data]
select top # * from [dattab]
select top # * from [Instruments]
select top # * from [Users]
select   id, s.bestobjID as objid, s.specObjID as specobjid, s.z as zspec, s.zErr,   zWarning as zW, sciencePrimary as prim, s.plate, s.mjd, s.fiberid,    snMedian as SN, bptclass as bpt, lgm_tot_p5# as smass, sfr_tot_p5# as sfr,    specsfr_tot_p5# as ssfr, oh_p5# as oh, d4#_n as d4#n, lick_hb as hb,    lick_hd_a as hd, lick_hg_a as hg, h_delta_eqw as Hd_EW, h_gamma_eqw as Hg_EW,   h_beta_eqw as Hb_EW, h_alpha_eqw as Ha_EW, EW_Ha_#, Flux_OIII_#,    Flux_SII_#, Flux_SII_#, Flux_Ha_#, Flux_Hb_#   from MyDB.temp as t    left join SpecObjAll as s on s.bestObjID=t.objid    left join galSpecExtra as x on s.specObjID=x.specObjID   left join galSpecIndx as i on s.specObjID=i.specObjID   left join galSpecLine as l on s.specObjID=l.specObjID   left join emissionLinesPort as e on s.specObjID=e.specObjID   order by id
select top # * from [Runs]
SELECT TOP #  s.dec,cast(str(s.ra,#,#) as float) as ra,s.z,s.zErr,p.i,p.mjd,p.objID,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = #)
SELECT * into mydb.MyTable_#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and # and p.dec between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and #and p.dec between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between #and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and # and p.dec between # and #
select   id, s.bestobjID as objid, s.specObjID as specobjid, s.z as zspec, s.zErr,   zWarning as zW, sciencePrimary as prim, s.plate, s.mjd, s.fiberid,    snMedian as SN, bptclass as bpt, lgm_tot_p5# as smass, sfr_tot_p5# as sfr,    specsfr_tot_p5# as ssfr, oh_p5# as oh, d4#_n as d4#n, lick_hb as hb,    lick_hd_a as hd, lick_hg_a as hg, h_delta_eqw as Hd_EW, h_gamma_eqw as Hg_EW,   h_beta_eqw as Hb_EW, h_alpha_eqw as Ha_EW, EW_Ha_#, Flux_OIII_#,    Flux_SII_#, Flux_Ha_#, Flux_Hb_#   from MyDB.temp as t    left join SpecObjAll as s on s.bestObjID=t.objid    left join galSpecExtra as x on s.specObjID=x.specObjID   left join galSpecIndx as i on s.specObjID=i.specObjID   left join galSpecLine as l on s.specObjID=l.specObjID   left join emissionLinesPort as e on s.specObjID=e.specObjID   order by id
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid =#
select * from wise_xmatch x join wise_allsky a on x.wise_cntr=a.cntr where x.sdss_objid=#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid betwenn # and #
SELECT   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.objid=#
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoTag AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE  p.objid = #
SELECT   p.objid,p.ra,p.dec,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoTag AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE  p.objid=#
select * from stellarMassFSPSGranEarlyNoDust where specObjId=#
select flags_r,ra,dec, IIF((flags_r & dbo.fPhotoFlags(&&&)) !=# or (flags_r &dbo.fPhotoFlags(&&&)) !=# or   ((flags_r &dbo.fPhotoFlags(&&&)) !=# and (flags_r & dbo.fPhotoFlags(&&&)) = #),#,#) as myflagset1,IIF((flags_r & dbo.fPhotoFlags(&&&))!=#    or  (flags_r & dbo.fphotoFlags(&&&)) != #, #,#) as myflagset2 from photoobjall where ra between # and # and dec between   # and #
SELECT   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoTag AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE  p.objid=#
select flags_r,ra,dec,(flags_r & #), IIF((flags_r & dbo.fPhotoFlags(&&&)) !=# or (flags_r &dbo.fPhotoFlags(&&&)) !=# or   ((flags_r &dbo.fPhotoFlags(&&&)) !=# and (flags_r & dbo.fPhotoFlags(&&&)) = #),#,#) as myflagset1,IIF((flags_r & dbo.fPhotoFlags(&&&))!=#    or  (flags_r & dbo.fphotoFlags(&&&)) != #, #,#) as myflagset2 from photoobjall where ra between # and # and dec between   # and #
select flags_r,ra,dec,(flags_r & #), IIF((flags_r & dbo.fPhotoFlags(&&&)) !=# or (flags_r &dbo.fPhotoFlags(&&&)) !=# or   ((flags_r &dbo.fPhotoFlags(&&&)) !=# and (flags_r & dbo.fPhotoFlags(&&&)) = #),#,#) as myflagset1,IIF((flags_r & dbo.fPhotoFlags(&&&))!=#    or  (flags_r & dbo.fphotoFlags(&&&)) != #, #,#) as myflagset2 from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), IIF((flags & dbo.fPhotoFlags(&&&)) !=# or (flags &dbo.fPhotoFlags(&&&)) !=# or   ((flags &dbo.fPhotoFlags(&&&)) !=# and (flags & dbo.fPhotoFlags(&&&)) = #),#,#) as myflagset1,IIF((flags & dbo.fPhotoFlags(&&&))!=#    or  (flags & dbo.fphotoFlags(&&&)) != #, #,#) as myflagset2 from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), IIF((flags & dbo.fPhotoFlags(&&&)) !=# or (flags &dbo.fPhotoFlags(&&&)) !=# or   ((flags &dbo.fPhotoFlags(&&&)) !=# and (flags & dbo.fPhotoFlags(&&&)) = #),#,#),IIF((flags & dbo.fPhotoFlags(&&&))!=#    or  (flags & dbo.fphotoFlags(&&&)) != #, #,#) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), IIF((flags & dbo.fPhotoFlags(&&&)) !=# or (flags &dbo.fPhotoFlags(&&&)) !=# or   ((flags &dbo.fPhotoFlags(&&&)) !=# and (flags & dbo.fPhotoFlags(&&&)) = #),#,#),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select ra as xcol, dec as ycol from MyTable
select flags_r,ra,dec,(flags_r & #), IIF(ra > #,#,#),(flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), IFF(ra > #,#,#),(flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (ra > #),(flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and ((flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)) or (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and ((flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) or ((flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and ((flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) == #) or ((flags & dbo.fphotoFlags(&&&)) = #) from photoobjall where ra between # and # and dec between   # and # and ((flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) == #) or ((flags & dbo.fphotoFlags(&&&)) == #) from photoobjall where ra between # and # and dec between   # and # and  NOT((flags & dbo.fPhotoFlags(&&&)) = #)
SELECT TOP #  cast(str(s.ra,#,#) as float) as ra,cast(str(s.[dec],#,#) as float) as dec,s.z,p.objID,p.r,p.u  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = #)
SELECT TOP #  s.dec,cast(str(s.ra,#,#) as float) as ra,s.z,s.zErr,p.i,p.mjd,p.objID,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = # AND (s.class = &&&)
select p.ObjID, p.ra, p.dec, p.u, p.Err_u, p.g, p.Err_g, p.r, p.Err_r, p.i,p.Err_i, p.z, p.Err_z from photoObj p, dbo.fGetNearbyObjEq(#,#,#) n where p.objID = n.objID AND p.type = #
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.r between # AND #
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.r between # AND #
select * from stellarMassPCAWiscM1# where specObjId=#
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) as SpecobjId   FROM #upload  WHERE  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zErr,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)   ORDER BY x.up_id
SELECT * FROM pmf_star_xmatch
SELECT * FROM pmf_qso_xmatch
SELECT * FROM pmf_gal_xmatch
SELECT    m.ra2, m.dec2, s.plate, s.mjd, s.fiberID, s.psfMag_u, s.psfMag_g, s.psfMag_r, s.psfMag_i, s.psfMag_z, s.Class, s.z, s.zWarning from mydb.obj_qso_xmatch m, SpecPhoto s into mydb.pmf_qso_xmatch   WHERE s.run = m.run AND s.rerun = m.rerun AND s.field = m.field AND s.obj = m.obj AND m.mode = #
SELECT    m.ra2, m.dec2, s.plate, s.mjd, s.fiberID, s.psfMag_u, s.psfMag_g, s.psfMag_r, s.psfMag_i, s.psfMag_z, s.Class, s.z, s.zWarning from mydb.obj_gal_xmatch m, SpecPhoto s into mydb.pmf_gal_xmatch   WHERE s.run = m.run AND s.rerun = m.rerun AND s.field = m.field AND s.obj = m.obj AND m.mode = #
SELECT    m.ra AS ra1, m.dec AS dec1, o.run, o.rerun, o.field, o.obj,    n.objid, o.mode,    o.ra AS ra2, o.dec AS dec2 into mydb.obj_qso_xmatch from MyDB.coord_qso_xmatch AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
SELECT    m.ra AS ra1, m.dec AS dec1, o.run, o.rerun, o.field, o.obj,    n.objid, o.mode,    o.ra AS ra2, o.dec AS dec2 into mydb.obj_gal_xmatch from MyDB.coord_gal_xmatch AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
SELECT &&&
select * from zooMirrorBias where objid=#
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) == #) or ((flags & dbo.fphotoFlags(&&&)) == #) from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) = #) or ((flags & dbo.fphotoFlags(&&&)) = #) from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)) = # or (flags & dbo.fphotoFlags(&&&)) != #  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)) != # or (flags & dbo.fphotoFlags(&&&)) != #)  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&)) != # or (flags & dbo.fphotoFlags(&&&)) != #)  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   ((flags & dbo.fPhotoFlags(&&&))!=# or (flags & dbo.fphotoFlags(&&&)) != #)  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&))  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),flags & dbo.fPhotoFlags(&&&) & !dbo.fPhotoFlags(&&&),   (flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&))  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),(flags & dbo.fPhotoFlags(&&&) & !dbo.fPhotoFlags(&&&)),(flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&))  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),   (flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),(flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&))  from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select @t = type, @id = id from sysobjects where name = @name declare @rst varchar(max); set @rst = &&&; if(@t = &&&) BEGIN    select @rst = &&& + CHAR(#)+ CHAR(#) END ELSE IF (@t = &&&) BEGIN    select @rst = &&& + CHAR(#)+ CHAR(#) END ELSE IF (@t = &&&) BEGIN    select @rst = &&& + CHAR(#)+ CHAR(#) END ELSE IF (@t = &&&) BEGIN    select @rst = &&& + CHAR(#)+ CHAR(#) END ELSE IF (@t = &&&) BEGIN    select @rst = &&& + CHAR(#)+ CHAR(#) END  if(@t = &&& or @t = &&& or @t = &&& or @t = &&& or @t = &&&)BEGIN    select @rst = @rst + cast(&&& as char(#))+cast(&&& as char(#))+cast(&&& as char(#))+ CHAR(#)+CHAR(#);    select 			@rst = @rst+cast(name as char(#)), 			@rst = @rst+cast(type_name(user_type_id) as char(#)), 			@rst = @rst+cast(max_length as varchar(#)) + CHAR(#) 	from sys.all_parameters where object_id = @id 	order by parameter_id END ELSE BEGIN 	select @rst = @rst + sc.text  	from syscomments sc, sysobjects so 	where so.name = @name and sc.id = so.id END select @rst;
SELECT   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid, p.expAB_u,   p.expAB_g, p.expAB_r, p.expAB_i, p.expAB_z,  p.expRad_g FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   s.class = &&&  AND s.zWarning = #  AND s.z<#  AND s.z>#
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&)),(flags &dbo.fPhotoFlags(&&&))   ,(flags & dbo.fPhotoFlags(&&&)),(flags & dbo.fPhotoFlags(&&&)), (flags & dbo.fphotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
SELECT   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid, p.expAB_u,   p.expAB_g, p.expAB_r, p.expAB_i, p.expAB_z,  p.expRad_g FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   s.class = &&&  AND s.zWarning = #  AND s.z<#  AND s.z># parameter search http://skyserver.sdss.org/dr1#/en/help/browser/browser.aspx
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # and  (flags & dbo.fPhotoFlags(&&&)) = #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)) from photoobjall where ra between # and # and dec between   # and # where  (flags & dbo.fPhotoFlags(&&&)) != #
select flags_r,ra,dec,(flags_r & #), (flags & dbo.fPhotoFlags(&&&)) from photoobjall where ra between # and # and dec between # and #
select flags_r,ra,dec,(flags_r & #) from photoobjall where ra between # and # and dec between # and #
select flags_r,ra,dec from photoobjall where ra between # and # and dec between # and #
select top #  S.ra as sdss_ra, S.dec as sdss_dec, W.ra as wise_ra, W.dec as wise_dec,  S.psfmag_r as r, W.w1mpro as w1 from wise_xmatch as X  join wise_allsky as W on X.wise_cntr = W.cntr  join photoTag as S on X.sdss_objid = S.objid where S.nchild = #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM SpecObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and s.specClass = #
SELECT   p.objID, p.ra, p.dec, dbo.fPhotoTypeN(p.type) as type  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
select top # z, ra, dec, bestObjID from specObj where class = &&& and z > # and zWarning = #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and s.specClass = #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and p.specClass = #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and specClass = #
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#E-#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
SELECT top # objID, ra, dec,  (CASE WHEN q.type IS NULL THEN &&& ELSE &&& END) AS found FROM PhotoObj AS p OUTER APPLY dbo.fFootprintEq(ra,dec,#) AS q WHERE (ra BETWEEN # AND #) AND (dec BETWEEN # AND #)
SELECT top #  p.objid,p.ra,p.dec,s.specClass, s.z FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and s.specClass = #
SELECT top #  p.objid,p.ra,p.dec,s.specClass, s.z FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT top #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select top # * from [pmf_star_xmatch3]
SELECT top #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND # and s.specClass = #
SELECT    m.ra2, m.dec2, s.plate, s.mjd, s.fiberID, s.psfMag_u, s.psfMag_g, s.psfMag_r, s.psfMag_i, s.psfMag_z, s.Class, s.z, s.zWarning from mydb.obj_star_xmatch m, SpecPhoto s into mydb.pmf_star_xmatch3   WHERE s.run = m.run AND s.rerun = m.rerun AND s.field = m.field AND s.obj = m.obj AND m.mode = #
SELECT TOP # objid,ra,dec,   flags,   flags
SELECT #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*#
SELECT *  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT    m.id, m.ra2, m.dec2, s.plate, s.mjd, s.fiberID, s.psfMag_u, s.psfMag_g, s.psfMag_r, s.psfMag_i, s.psfMag_z, s.Class, s.z, s.zWarning from mydb.obj_star_xmatch m, SpecPhoto s into mydb.pmf_star_xmatch3   WHERE s.run = m.run AND s.rerun = m.rerun AND s.field = m.field AND s.obj = m.obj AND m.mode = #
SELECT TOP #  cast(str(s.ra,#,#) as float) as ra,cast(str(s.[dec],#,#) as float) as dec,s.z,p.i,p.objID,p.r,p.u  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = # AND ( p.type = # OR p.type = #)
select top # * from [obj_star_xmatch]
SELECT    m.ra AS ra1, m.dec AS dec1, o.run, o.rerun, o.field, o.obj,    n.objid, o.mode,    o.ra AS ra2, o.dec AS dec2 into mydb.obj_star_xmatch from MyDB.coord_star_xmatch AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
SELECT    m.id, m.ra AS ra1, m.dec AS dec1, o.run, o.rerun, o.field, o.obj,    n.objid, o.mode,    o.ra AS ra2, o.dec AS dec2 into mydb.obj_star_xmatch from MyDB.coord_star_xmatch AS m    CROSS APPLY dbo.fGetNearestObjEq( m.ra, m.dec, #) AS n    JOIN PhotoObj AS o ON n.objid=o.objid
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.starstable from PhotoObjAll as g     join Photoz as p on p.Objid = g.ObjId   where g.cmodelMag_r < &&& and g.type=#     and g.ra between &&& and &&&
SELECT dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM SpecObj as s, PhotoObj as p   INTO MyDB.pmf_star_xmatch3 WHERE s.bestObjID = p.objID AND s.zWarning = # AND ( p.type = # OR p.type = #)
SELECT g.source_id, g.ra, g.dec     FROM GaiaDR2.gaia_source as g     WHERE         g.ra > # AND         g.ra < # AND         g.dec > # AND         g.dec < #     ORDER BY g.ra
SELECT dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM SpecObj as s    INTO MyDB.pmf_star_xmatch3 WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)
select top # * from [pmf_star_xmatch2]
SELECT * FROM unmaskeditemsalltable
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.unmaskeditemsalltable from PhotoObjAll as g     join Photoz as p on p.Objid = g.ObjId   where g.cmodelMag_r < &&& and g.type = #     and g.ra between &&& and &&& and g.insideMask = #
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.maskeditemsalltable from PhotoObjAll as g     join Photoz as p on p.Objid = g.ObjId   where g.cmodelMag_r < &&&     and g.ra between &&& and &&& and g.insideMask != #
SELECT * FROM ml_test
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.maskeditemsalltable from PhotoObj as g     join Photoz as p on p.Objid = g.ObjId   where g.cmodelMag_r < &&& and p.z > &&&     and g.ra between &&& and &&& and g.insideMask != #
SELECT * FROM maskeditemstable
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.maskeditemstable from PhotoObj as g     join Photoz as p on p.Objid = g.ObjId   where g.cmodelMag_r < &&& and p.z > &&&     and g.ra between &&& and &&& and g.insideMask != #
SELECT TOP #    p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,    p.run, p.rerun, p.camcol, p.field,    s.specobjid, s.class, s.z as redshift,    s.plate, s.mjd, s.fiberid into mydb.MyTable from PhotoObj AS p    JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE     p.u BETWEEN # AND #    AND g BETWEEN # AND #
select s.specObjID,s.z,s.ra,s.dec,g.bptclass  into mydb.ml_test from galSpecInfo as s, galSpecExtra as g where   g.specObjID=s.specObjID and s.z>=# and s.z<=#
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.maskeditemstable from PhotoObj as g     join Photoz as p on p.Objid = g.ObjId   where g.type=&&& and g.cmodelMag_r < &&& and p.z > &&&     and g.ra between &&& and &&& and g.insideMask != #
SELECT * FROM table1
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid into mydb.MyTable from PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid into mydb.MyTable from PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and # and p.dec between # and #
SELECT s.z, s.ra, s.dec, s.petromag_r, s.extinction_r,   p.kcorrR,  z.p_cs_debiased, z.p_el_debiased, z.p_cs, z.p_el, z.p_dk, z.p_mg, z.spiral, z.elliptical, z.uncertain FROM specphoto AS s, zooSpec AS z, photoz AS p INTO mydb.table1 WHERE class=&&&and s.SpecobjID=z.SpecobjID and s.ObjID=p.ObjID and s.zwarning=# and s.z between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and # and p.dec between # and #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid,p.objid into mydb.MyTable from PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra between # and #and p.dec between # and #
select s.specObjID,s.z,p.petroMag_r,s.ra,s.dec,g.oiii_#_flux,g.oiii_#_flux_err,g.nii_#_flux,g.nii_#_flux_err,g.h_beta_flux,g.h_beta_flux_err,g.h_alpha_flux,g.h_alpha_flux_err  into mydb.ml_test from galSpecInfo as s, galSpecLine as g, PhotoObjAll as p where   g.specObjID=s.specObjID and p.objID=g.specObjID and s.z>=# and s.z<=#
SELECT * FROM SDSS_to_Yang
select top # * from [SDSS_to_Yang]
select * from mydb.SDSS_to_Yang where Yang_Id = # and ra is not null
select s.specObjID,s.z,s.ra,s.dec,g.oiii_#_flux,g.oiii_#_flux_err,g.nii_#_flux,g.nii_#_flux_err,g.h_beta_flux,g.h_beta_flux_err,g.h_alpha_flux,g.h_alpha_flux_err  into mydb.ml_test from galSpecInfo as s, galSpecLine as g where   g.specObjID=s.specObjID and s.z>=# and s.z<=#
select * from mydb.SDSS_to_Yang where Yang_Id = #
select * from SDSS_to_Yang where Yang_Id = #
select top # * from [Yang_dr7todr8]
select ra,dec from SpecObjAll where specObjID = #
select s.bestobjid,s.z,s.ra,s.dec,g.oiii_#_flux,g.oiii_#_flux_err,g.nii_#_flux,g.nii_#_flux_err,g.h_beta_flux,g.h_beta_flux_err,g.h_alpha_flux,g.h_alpha_flux_err  into mydb.ml_test from SpecObj as s, galSpecLine as g where   g.specObjID=s.bestobjid and s.z>=# and s.z<=#
SELECT dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM SpecObj as s    INTO MyDB.pmf_star_xmatch2 JOIN PhotoObj AS p ON s.bestObjID = p.objID  WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)
SELECT dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM ..SpecObj as s    INTO MyDB.pmf_star_xmatch2 JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM ..SpecObj as s    INTO MyDB.pmf_star_xmatch2 JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) as SpecobjId   FROM MyDB.coord_star_xmatch as m  WHERE  dbo.fGetNearestSpecObjIdEq( m.ra,m.dec,# ) IS NOT NULL  SELECT    s.ra,s.dec,s.plate,s.mjd,s.fiberid,s.z,s.zWarning,s.class,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z  FROM ..SpecObj as s    INTO MyDB.pmf_star_xmatch2 JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  WHERE  s.zWarning = # AND ( p.type = # OR p.type = #)   ORDER BY x.up_id
select top # * from [Yang_dr7objid]
SELECT objID,u,g,r,i,z,petroR5#_r,petroR9#_r,Err_u,Err_g,Err_r,Err_i,Err_z,petroR5#Err_r,petroR9#Err_r,type into mydb.MyTable_# from Galaxy WHERE clean = # and r >= # and r < #
select top # * from [coord_star_xmatch]
select ra,dec from PhotoObj where  objID = #
SELECT * FROM maskedgalstable
SELECT   g.ObjId, g.ra, g.dec, g.type, g.clean, g.insideMask, g.flags, g.cmodelMag_r, g.cmodelMagErr_r, p.z, p.zErr into mydb.maskedgalstable from Galaxy as g     join Photoz as p on p.Objid = g.ObjId   where g.type=&&& and g.cmodelMag_r < &&& and p.z > &&&     and g.ra between &&& and &&&
select top # specobjid as name, ra, dec from SpecObj NGC0#, #, #
select top # specobjid as name, ra, dec from SpecObj  M5#
select top # specobjid as name, ra, dec from SpecObj M8#
SELECT TOP #  cast(str(s.ra,#,#) as float) as ra,cast(str(s.[dec],#,#) as float) as dec,s.z,p.g,p.objID,p.u_i,p.u_r  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = # AND (s.class = &&&) AND ( p.type = # OR p.type = #)
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) as SpecobjId   FROM #upload  WHERE  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   s.ra,s.dec,s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  s.zWarning = #   ORDER BY x.up_id
select * from Photoz2 where objid=#
select * from SDSSConstants
select * from SiteConstants
select * from ProfileDefs
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND #
select mjd, ra, dec, u, g, r, i, z from PhotoObj where dec < # AND dec > # AND (ra > # AND ra < # )
select top # * from [sample_gt1_n_r]
select s.ObjID, s.ra,s.dec,s.deVRad_r,s.deVAB_r,s.raErr,s.decErr,s.type,s.modelMag_u,s.modelMagErr_u,s.modelMag_g,s.modelMagErr_g,s.modelMag_r,s.modelMagErr_r,s.modelMag_i,s.modelMagErr_i,s.modelMag_z,s.modelMagErr_z from PhotoPrimary s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
select s.ObjID,s.class,s.subclass,s.z,s.zErr,s.type from SpecPhoto s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
SELECT   TOP # mangaid, psfmag_#, psfmag_#, psfmag_#, plate, IFUDESIGN  FROM MaStar_goodvisits  WHERE   (mngtarg2 & POWER(#, #)) <> #   AND psfmag_# BETWEEN # AND #   AND (psfmag_# - psfmag_#) BETWEEN # AND #
select top # * from [MyFirstTable8]
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
select top # * from [MyFirstTable2]
select top # * from [MyFirstTable6]
select top # * from [MyFirstTable4]
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field, p.type FROM PhotoObj AS p WHERE   p.type = # ORDER by p.r
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field, p.type FROM PhotoObj AS p WHERE
SELECT * FROM MyFirstTable2
SELECT * FROM MyFirstTable
select p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z from star p, dbo.fgetNearByObjEq(#,#,#) n where p.objid=n.objid and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
select p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z from photoobj p, dbo.fgetNearByObjEq(#,#,#) n where p.objid=n.objid and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z>#
SELECT u.up_name as [name], s.specobjid, s.ra, s.dec, s.plate, s.mjd, s.fiberid FROM #upload u       JOIN #x x ON x.up_id = u.up_id       JOIN SpecObjAll s ON s.specObjID = x.specObjID
INSERT INTO #upload values
SELECT * FROM wylezrad
select top # * from [wylezrad]
select b.objID, b.plateid_ifuid, b.ra, b.dec,f.integr,f.rms into mydb.wylezrad from mydb.wylez2 as b, dbo.FIRST as f   where f.objID = b.objID and f.integr > #
SELECT TOP #  a.apogee_id,cast(str(a.glon,#,#) as float) glon,cast(str(a.glat,#,#) as float) glat,a.snr,a.vhelio_avg,a.vscatter,q.teff,q.logg,q.param_m_h,q.param_alpha_m  FROM apogeeStar as a  JOIN dbo.fgetNearbyApogeeStarEq(#,#,#) AS b ON b.apstar_id = a.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id  JOIN aspcapStar as q ON a.apstar_id=q.apstar_id
select top # * from [radwylez]
select b.objID, b.plateid_ifuid, b.ra, b.dec,f.integr,f.rms into mydb.radwylez from mydb.wylez2 as b, dbo.FIRST as f   where f.objID = b.objID and f.integr > #
select top # * from [wylez2]
select n.objID, b.plateid_ifuid, b.ra, b.dec into mydb.wylez2 from mydb.wylez as b   CROSS APPLY dbo.fGetNearestObjEq( b.ra, b.dec, #) AS n   join dbo.PhotoObjAll as o on o.objID=n.objID
select n.objID, b.plate_ifuid, b.ra, b.dec into mydb.wylez2 from mydb.wylez as b   CROSS APPLY dbo.fGetNearestObjEq( b.ra, b.dec, #) AS n   join dbo.PhotoObjAll as o on o.objID=n.objID
SELECT up_id, dbo.fGetNearestSpecObjIdEq(up_ra,up_dec,#) as SpecobjId   FROM #upload WHERE dbo.fGetNearestSpecObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
select top # * from [wylez]
INSERT INTO #upload values
SELECT * FROM variable_spec_type
SELECT    m.ra AS ra1, m.dec AS dec1,    n.objid,n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,o.type,   o.z,o.zErr,o.mjd into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY dbo.fGetNearbyObjEq( m.ra, m.dec, #) AS n     LEFT JOIN SpecPhotoAll AS o ON n.ObjID=o.ObjID
INSERT INTO #upload values
SELECT    m.ra AS ra1, m.dec AS dec1,    n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,o.type,   o.z,o.zErr,o.mjd into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY dbo.fGetNearbyObjEq( m.ra, m.dec, #) AS n     LEFT JOIN SpecPhotoAll AS o ON n.SpecObjID=o.SpecObjID
SELECT    m.ra AS ra1, m.dec AS dec1,    n.specobjid, n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,o.type,   o.z,o.zErr,o.mjd into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY dbo.fGetNearbyObjEq( m.ra, m.dec, #) AS n     LEFT JOIN SpecphotoAll AS o ON n.specobjid=o.specobjid
SELECT    m.ra AS ra1, m.dec AS dec1,    n.specobjid, n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,o.type,   o.z,o.zErr,o.mjd into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY dbo.fGetNearbyObjEq( m.ra, m.dec, #) AS n    LEFT JOIN SpecphotoAll AS o ON n.specobjid=o.specobjid
SELECT    m.ra AS ra1, m.dec AS dec1,    n.specobjid, n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,o.type,   o.z,o.zErr,o.mjd,   o.z_person,o.class_person,o.comments_person into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY fGetNearbyObjEq( m.ra, m.dec, #) AS n    LEFT JOIN SpecphotoAll AS o ON n.specobjid=o.specobjid
SELECT    m.ra AS ra1, m.dec AS dec1,    n.specobjid, n.distance,    o.ra AS ra2, o.dec AS dec2,   o.class,o.subclass,   o.z,o.zErr,o.mjd,   o.z_person,o.class_person,o.comments_person into MyDB.variable_spec_type FROM MyDB.variable_position AS m    OUTER APPLY fGetNearbyObjEq( m.ra, m.dec, #) AS n    LEFT JOIN SpecObjAll AS o ON n.specobjid=o.specobjid
SELECT    m.ra AS ra1, m.dec AS dec1,    n.objid, n.distance,    o.ra AS ra2, o.dec AS dec2,    o.petroMag_u,o.petroMagErr_u,    o.petroMag_g,o.petroMagErr_g,    o.petroMag_r,o.petroMagErr_r,    o.petroMag_i,o.petroMagErr_i,    o.petroMag_z,o.petroMagErr_z,o.type into MyDB.variable_ugriz_type_check FROM MyDB.variable_position AS m    OUTER APPLY fGetNearbyObjEq( m.ra, m.dec, #) AS n
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<# f
SELECT * into mydb.MyTable from SpecLineAll as Q_SpecLine
SELECT * into mydb.MyTable from SpecLineAll as G_SpecLine
SELECT * FROM MyTable
