SELECT   p.objid,p.ra,p.dec,p.r,   s.specobjid,s.z,   dbo.fSpecZWarningN(s.zWarning) as warning,   s.plate, s.mjd, s.fiberid   FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid   WHERE   p.ra < #+# and p.ra > #-#   AND p.dec < #+# and p.dec > #-#
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select * from stellarMassFSPSGranEarlyDust where specObjId=#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
select * from PhotoObjAll where objId=#
SELECT p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, psfFlux_u, psfFlux_g, psfFlux_r, psfFlux_i, psfFlux_z, psfFluxIvar_u, psfFluxIvar_g, psfFluxIvar_r, psfFluxIvar_i, psfFluxIvar_z FROM PhotoObj p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
select * from PhotoTag where objId=#
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
select * from Photoz where objid=#
SELECT DISTINCT TOP # p.run, p.rerun, p.camcol, max(p.field) as &&&, max(p.ra) as &&&, max(p.dec) as &&& FROM PhotoObjAll p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) GROUP BY p.run, p.rerun, p.camcol
select * from PhotozRF where objid=#
select * from sppLines where specObjId=#
SELECT p.ra , p.dec, p.u, p.g, p.r, p.i, p.z, p.err_u, p.err_g, p.err_r, p.err_i, p.err_z, p.nMgyPerCount_u, p.nMgyPerCount_g, p.nMgyPerCount_r, p.nMgyPerCount_i, p.nMgyPerCount_z FROM PhotoObjAll p WHERE (p.ra BETWEEN # AND #) AND (p.dec BETWEEN # AND #) AND p.run = # AND p.rerun = # AND p.camcol = # AND p.field = #
select psfSigma1_z, psfSigma2_z, psfB_z, psfP0_z, psfBeta_z, psfSigmaP_z, psfSigma1_u, psfSigma2_u, psfB_u, psfP0_u, psfBeta_u, psfSigmaP_u, psfSigma1_g, psfSigma2_g, psfB_g, psfP0_g, psfBeta_g, psfSigmaP_g, psfSigma1_r, psfSigma2_r, psfB_r, psfP0_r, psfBeta_r, psfSigmaP_r, psfSigma1_i, psfSigma2_i, psfB_i, psfP0_i, psfBeta_i, psfSigmaP_i from Field where run = # and rerun = # and camcol = # and field = #
SELECT   TOP # RA, DEC, VAR_A, VAR_GAMMA, VAR_CHI2  FROM qsoVarPTF  WHERE qsoVarPTF.VAR_CHI2># AND qsoVarPTF.VAR_A>#
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
select * from Field where fieldId=#
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select * from stellarMassFSPSGranWideDust where specObjId=#
select top # specobjID, sn from SpecLineIndex, SpecPhoto where  sn > #
select top # specobjID, sn from SpecLineIndex, SpecPhoto where and sn > #
select top # specobjID, sn from SpecLineIndex, SpecPhoto where  z < .# and zconf > .# and sn > #
select top # specobjID,z, sn from SpecLineIndex, SpecPhoto where  z < .# and zconf > .# and sn > #
select top # specobjID,z, sn from SpecLineIndex where  z < .# and zconf > .# and sn > #
select top # specobjID,z, sn from SpecLineIndex where  z < .# and sn > #
select * from galSpecLine where specObjId=#
select * from Frame where fieldId=#
select top # * from galaxy
select * from stellarMassFSPSGranEarlyNoDust where specObjId=#
select * from wise_xmatch x join wise_allsky a on x.wise_cntr=a.cntr where x.sdss_objid=#
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #)
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
select * from stellarMassPCAWiscM1# where specObjId=#
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&)) > #) AND (s.boss_target1 & (dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&)) != #)
select top # specobjID,z, sn from SpecLineIndex where  z < .#
select top # specobjID,z, sn from SpecLineIndex where  z < .#  and zconf > .#
select * from sppParams where specObjId=#
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
select * from emissionLinesPort where specObjId=#
select top #
select description from DBObjects where name=&&&
select text from DBObjects where name=&&&
select * from dbo.fDocColumns(&&&)
select top # specObjID , z, sn from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .#
select top # specObjID , z, sci_sn from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .# sci_sn > #
select * from stellarMassPCAWiscBC0# where specObjId=#
select top # specObjID , z, sci_sn from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .#
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
select * from XCRedshift where specObjId=#
select top # specObjID , z, sn_# from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .# and sn_# > #
select * from galSpecInfo where specObjId=#
select top # specObjID , z, sn_# from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .#
select top # specObjID , z from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .#
select top # objid , z from SpecObjAll where (specclass=# or specclass=#) and zconf > .# and z < .#
SELECT TOP #  s.z,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) > #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #) AND (s.eboss_target0 & (dbo.fEbossTarget0(&&&)) != #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #) AND (s.eboss_target0 & (dbo.fEbossTarget0(&&&)) != #)
select top # objid , z from SpecLine where (specclass=# or specclass=#) and zconf > .# and z < .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,p.g,p.i,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
select top # objid , z from SpecPhoto where (specclass=# or specclass=#) and zconf > .# and z < .#
select top # objid ,sn, z from SpecLine, SpecPhoto where (specclass=# or specclass=#) and zconf > .# and z < .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,p.g,p.i,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE s.z > # AND s.zWarning = # AND s.z < # AND ( p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
select top # objid, z ,sn from SpecLine, SpecPhoto where (specclass=# or specclass=#) and zconf > .# z < .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,p.g,p.i,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&)) > #)
select top # objid,z,sn from SpecLine,SpecPhoto where (specclass=# or specclass=#) and zconf > .# z < .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,p.g,p.i,p.r,p.u,p.z  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #)
select top # objid,z,sn from SpecLine,SpecPhoto where (specclass=# or specclass=#) and zconf > .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.snMedian_g,s.snMedian_i,s.snMedian_r,s.snMedian_u,s.snMedian_z,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = #)
select top # objid,z,sn from SpecLine SpecPhoto where (specclass=# or specclass=#) and zconf > .#
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.snMedian_g,s.snMedian_i,s.snMedian_r,s.snMedian_u,s.snMedian_z,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.snMedian_g,s.snMedian_i,s.snMedian_r,s.snMedian_u,s.snMedian_z,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #) AND (s.boss_target1 & (dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&)) != #) AND (s.eboss_target0 & (dbo.fEbossTarget0(&&&) + dbo.fEbossTarget0(&&&)) != #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.snMedian_g,s.snMedian_i,s.snMedian_r,s.snMedian_u,s.snMedian_z,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = #) AND (p.flags & (dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) > #) AND (s.primTarget & (dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&) + dbo.fPrimTarget(&&&)) > #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #) AND (s.boss_target1 & (dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&) + dbo.fBossTarget1(&&&)) != #) AND (s.eboss_target0 & (dbo.fEbossTarget0(&&&) + dbo.fEbossTarget0(&&&)) != #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.snMedian_g,s.snMedian_i,s.snMedian_r,s.snMedian_u,s.snMedian_z,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  WHERE s.z > # AND s.zWarning = # AND (s.class = &&&) AND s.z < # AND ( p.type = # OR p.type = #) AND (s.secTarget & (dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&) + dbo.fSecTarget(&&&)) > #)
select * from stellarMassFSPSGranWideNoDust where specObjId=#
select * from PhotoObj where objId=#
SELECT TOP #   objID, ra, dec,   sqrt( power(rowv,#) + power(colv, #) ) as velocity   FROM PhotoObj   WHERE   (power(rowv,#) + power(colv, #)) > #   AND rowv != # and colv != #
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
select * from fDocFunctionParams(&&&)
select * from stellarMassStarformingPort where specObjId=#
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select * from SpecObjAll where specObjId=#
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
select top # objid,z,sn from SpecLine where (specclass=# or specclass=#) and zconf > .#
select top # objid, sn,z from SpecLineIndex where (specclass=# or specclass=#) and zconf > .#
select * from SpecLine where specObjId=#
select * from PhotoZ where objId=#
select top # objid, sn,z from SpecPhoto where (specclass=# or specclass=#) and zconf > .#
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT u.up_name as [name],     &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select description from DataConstants where field=&&&  and [name]=&&&
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and nnIsInside=#   and nnCount>#   and zErr BETWEEN # and #
SELECT TOP #   g,   run,   rerun,   camcol,   field,   objID   FROM Galaxy   WHERE ( (g <= #)   and (u - g >= #)   and (u - g < #)   and (g - r >= #)   and (g - r < #)   and (r - i >= #)   and (r - i < #)   and (i - z >= #)   and (i - z < #) )
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
SELECT top # objID, ra, dec,  (CASE WHEN q.type IS NULL THEN &&& ELSE &&& END) AS found FROM PhotoObj AS p OUTER APPLY dbo.fFootprintEq(ra,dec,#) AS q WHERE (ra BETWEEN # AND #) AND (dec BETWEEN # AND #)
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
SELECT TOP # objid,ra,dec,   flags,   flags & # AS flags_lo,   (flags/power(cast(# as bigint),#)) & # AS flags_hi  FROM PhotoObj
SELECT TOP # p.objid, p.ra, p.dec, ISNULL(s.specobjid,#) AS specobjid, ISNULL(s.z, #) AS z  FROM Galaxy AS p LEFT OUTER JOIN SpecObj s ON s.bestObjID = p.objID  WHERE  p.u BETWEEN # AND # AND p.g BETWEEN # AND #
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT TOP #   obj.run, obj.camCol, str(obj.field, #) as field,  str(obj.rowc, #, #) as rowc, str(obj.colc, #, #) as colc,  str(dbo.fObj(obj.objId), #) as id,   str(obj.psfMag_g - #*obj.extinction_g, #, #) as g,  str(obj.psfMag_r - #*obj.extinction_r, #, #) as r,  str(obj.psfMag_i - #*obj.extinction_i, #, #) as i,  str(obj.psfMag_z - #*obj.extinction_z, #, #) as z,  str(#*distance, #, #) as D,  dbo.fField(neighborObjId) as nfield,  str(dbo.fObj(neighborObjId), #) as nid FROM  (SELECT obj.objId,  run, camCol, field, rowc, colc,  psfMag_u, extinction_u,  psfMag_g, extinction_g,  psfMag_r, extinction_r,  psfMag_i, extinction_i,  psfMag_z, extinction_z,  NN.neighborObjId, NN.distance  FROM PhotoObj as obj  JOIN neighbors as NN on obj.objId = NN.objId  WHERE  #*NN.distance between # and # and  NN.mode = # and NN.neighborMode = # and  run = # and camCol = # and  obj.type = # and (obj.flags & #) = # and  nchild = # and obj.psfMag_i < # and  (g - r between # and # and r - i between # and #)  ) as obj  JOIN PhotoObj as nobj on nobj.objId = obj.neighborObjId  WHERE   nobj.run = obj.run and  (abs(obj.psfMag_g - nobj.psfMag_g) < # or  abs(obj.psfMag_r - nobj.psfMag_r) < # or  abs(obj.psfMag_i - nobj.psfMag_i) < #)
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*# & #)   < (# * #)
SELECT TOP # P.ObjID
SELECT TOP # *
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( (flags & dbo.fPhotoFlags(&&&) = #)   and petroR5#_i > #)
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Galaxy  WHERE  ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
SELECT TOP # s.ra, s.dec, s.psfmag_g, (s.psfmag_g - s.psfmag_r) as gmr,  pm.pmra, pm.pmdec, pm.pmraerr, pm.pmdecerr, pm.pml, pm.pmb FROM star s  JOIN propermotions pm ON s.objid = pm.objid WHERE  s.ra between #-# and #+#  and s.dec between #-# and #+#
SELECT TOP # t.thingid, t.ndetect, d.objid, p.psfMag_r, p.psfMagerr_r  FROM thingIndex AS t JOIN detectionindex AS d ON t.thingid = d.thingid JOIN Star AS p ON d.objid = p.objid WHERE t.ndetect > #
SELECT top # so.bestobjid, so.specobjid, so.plate, so.mjd, so.fiberid,  sp.teffadop, sp.fehadop, sp.loggadop, sp.snr, sp.flag   FROM specobjall so  JOIN sppparams sp ON so.specobjid = sp.specobjid and so.sciencePrimary=#  WHERE sp.teffadop > # and sp.teffadop < #  and fehadop > # and fehadop < #  and loggadop > # and loggadop < #  and sp.flag like &&&  and sp.snr > #
SELECT sl.plate, sl.mjd, sl.fiber,  sl.caIIKside, sl.caIIKerr, sl.caIIKmask,  sp.fehadop, sp.fehadopunc,sp. fehadopn,  sp.loggadopn,sp.loggadopunc,sp.loggadopn  FROM sppLines AS sl  JOIN sppParams AS sp ON sl.specobjid = sp.specobjid WHERE  fehadop < # and fehadopunc between # and #  AND fehadopn > #
SELECT TOP # s1.objID as s1, s2.objID as s2   FROM Star AS S1   JOIN Neighbors AS N ON S1.objID = N.objID   JOIN Star AS S2 ON S2.objID = N.NeighborObjID   WHERE   N.NeighborType = dbo.fPhotoType(&&&)   and N.distance < .#   and ((S1.u - S1.g) < # )   and (S1.g - S1.r) < #   and (S1.r - S1.i) > #   and (S1.i - S1.z) > #
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
SELECT TOP # G.ObjID, G.u, G.g, G.r, G.i, G.z   FROM Galaxy AS G   JOIN Star AS S   ON G.parentID = S.parentID   WHERE G.parentID > #
SELECT plate.programname, class,  COUNT(specObjId) AS numObjs  FROM SpecObjAll JOIN PlateX AS plate ON plate.plate = specObjAll.plate GROUP BY plate.programname, class ORDER BY plate.programname, class
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
SELECT TOP # specObjID
SELECT top # objID, ra, dec, g, clean FROM PhotoObj WHERE CLEAN=#
SELECT top #   run, rerun, camcol, field,   mjd_r as primary_mjd  FROM Field WHERE  mjd_r > #
SELECT TOP # objID
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
SELECT class, count(*)  FROM SpecObj  GROUP BY class
SELECT top # objid, ra, dec, psfmag_i-extinction_i AS mag_i, psfmag_r-extinction_r AS mag_r, z  FROM SpecPhoto  WHERE   (class = &&&)
SELECT TOP # sp.objID,   sp.ra,   sp.dec,   sp.mjd,   px.taiBegin,   px.taiEnd,   sp.fiberID,   sp.z   FROM specPhoto AS sp   JOIN plateX AS px ON sp.plateID = px.plateID   WHERE   (sp.class=&&&)   AND sp.z > #
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # objID, cModelMag_g   FROM Galaxy   WHERE   cModelMag_g between # and #
SELECT TOP # G.objID, GN.distance  FROM Galaxy as G  JOIN dbo.fGetNearbyObjEq(#.,#, #) AS GN  ON G.objID = GN.objID  ORDER BY distance
SELECT TOP #   r.run,   r.rerun,   f.camCol,   f.field,   p.objID,   p.ra,   p.dec,   p.modelMag_r,   f.psfWidth_r   FROM   PhotoTag AS p   JOIN Field AS f ON f.fieldid = p.fieldid   JOIN Run AS r ON f.run = r.run   WHERE mode=#   and f.psfWidth_r > #   and p.modelMag_r < #.   and r.stripe = #
SELECT TOP #   objID, ra ,dec   FROM   PhotoPrimary   WHERE   ra > # and ra < #   AND dec > # and dec < #
select * from galSpecIndx where specObjId=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT TOP #  a.apogee_id,cast(str(a.glon,#,#) as float) glon,cast(str(a.glat,#,#) as float) glat,a.snr,a.vhelio_avg,a.vscatter,q.teff,q.logg,q.m_h,q.alpha_m  FROM apogeeStar as a  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id  JOIN aspcapStar as q ON a.apstar_id=q.apstar_id
SELECT TOP #  a.apogee_id,cast(str(a.glon,#,#) as float) glon,cast(str(a.glat,#,#) as float) glat,a.snr,a.vhelio_avg,a.vscatter,q.teff,q.logg,q.m_h,q.alpha_m  FROM apogeeStar as a  JOIN dbo.fgetNearbyApogeeStarEq(#,#,#) AS b ON b.apstar_id = a.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id  JOIN aspcapStar as q ON a.apstar_id=q.apstar_id
SELECT TOP #  s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON s.bestobjid = b.objID  WHERE s.zWarning = #
SELECT TOP #  a.apogee_id,cast(str(a.glon,#,#) as float) glon,cast(str(a.glat,#,#) as float) glat,a.snr,a.vhelio_avg,a.vscatter,q.teff,q.logg,q.m_h,q.alpha_m  FROM apogeeStar as a  JOIN dbo.fGetNearbyApogeeStarEq(#,#,#) AS b ON b.apstar_id = a.apstar_id  JOIN apogeeObject as o ON a.apogee_id=o.apogee_id  JOIN aspcapStar as q ON a.apstar_id=q.apstar_id
SELECT up_id,  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) as SpecobjId   FROM #upload  WHERE  dbo.fGetNearestSpecObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   s.ra,s.dec,s.plate,s.mjd,s.fiberid,p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..SpecObj as s  JOIN ..PhotoObj AS p ON s.bestObjID = p.objID  JOIN #x AS x ON x.SpecobjID=s.SpecobjID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  s.zWarning = #   ORDER BY x.up_id
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE (p.i - p.z) > # AND (p.i - p.z) < # AND p.u > # AND s.zWarning = #
SELECT TOP #  s.plate,s.mjd,s.fiberid  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  JOIN PhotoObj AS p ON s.bestobjid=p.objid  WHERE p.u > # AND p.u < # AND s.zWarning = #
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id     ORDER BY x.up_id
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetObjFromRect(#,#,#,#) AS b ON p.objID = b.objID
select top # ra,dec from Frame
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  WHERE (p.i - p.z) > # AND (p.i - p.z) < # AND p.u > #
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
select top # e.* from patient p
select top # * from patient p
select top # * from clinical_event_data
SELECT ra,dec,u,Err_u,g,Err_g,r,Err_r,i,Err_i,z,Err_z FROM PhotoObj WHERE ra BETWEEN # AND # AND dec BETWEEN # and # AND g<# AND Err_g<#
select top # * from clinical_sample
select distinct([attr_id]) from clinical_sample
select p.stable_id as patient_stable_id ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY ,      SAMPLE_COUNT.attr_value as SAMPLE_COUNT ,      SEX.attr_value as SEX ,      STAGE.attr_value as STAGE ,   MUTATION_COUNT.attr_id as MUTATION_COUNT   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&    left outer join clinical_patient SAMPLE_COUNT      on SAMPLE_COUNT.internal_id=p.internal_id     and SAMPLE_COUNT.attr_id =&&&    left outer join clinical_patient SEX      on SEX.internal_id=p.internal_id     and SEX.attr_id =&&&    left outer join clinical_patient STAGE      on STAGE.internal_id=p.internal_id     and STAGE.attr_id =&&&    left outer join clinical_sample MUTATION_COUNT      on MUTATION_COUNT.internal_id=p.internal_id     and MUTATION_COUNT.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
select distinct([key]) from clinical_event_data
select distinct(key) from clinical_event_data
select top # * from clinical_event
select * from information_schema.columns where column_name=&&&
select * from stellarMassPassivePort where specObjId=#
select MediaTypeId, Bytes, Milliseconds from chinook.Track
select TrackId,MediaTypeId From chinook.Track
select TrackId,MediaTypeId From chinook.Track where MediaTypeId=#
select * from SpecLineIndex where specObjId=#
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
select * from apogeeStar where apstar_id=&&&
select Name, MediaTypeId, Bytes, Milliseconds from chinook.Track
select objID, ra, dec, psfmag_r from star where (ra between ( # ) and ( # ) or ra between ( # ) and ( # ) or ra between ( # ) and ( # )) and dec between ( # ) and ( # ) and psfmag_r < #
select objID, ra, dec, psfmag_u, psfmag_g, psfmag_r, psfmag_i, psfmag_z from photoobj where (ra between ( # ) and ( # ) or ra between ( # ) and ( # ) or ra between ( # ) and ( # )) and dec between ( # ) and ( # ) and psfmag_r between # and # and (psfmag_g - psfmag_r) between ( # ) and ( # ) and (psfmag_r - psfmag_i) between ( # ) and ( # )
select top # ra, dec, psfmag_u, psfmag_g, psfmag_r, psfmag_i, psfmag_z from star where ObjID = #
select objID, ra, dec, psfmag_u, psfmag_g, psfmag_r, psfmag_i, psfmag_z from photoobj where (ra between ( # ) and ( # ) or ra between ( # ) and ( # ) or ra between ( # ) and ( # )) and dec between ( # ) and ( # )
SELECT TOP #  objid,ra,dec,u,g,r, i,z FROM Star WHERE  r BETWEEN # AND #  AND ra between # and #  AND dec between # and #
select distinct parent from DBViewCols where viewname=&&&
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice, COUNT(*) as numTracks FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, q1.totalPrice, art.Name, q1.numTracks, a.albumId FROM chinook.album a JOIN q1 on q1.albumId = a.albumId JOIN chinook.artist art on art.artistId = a.artistId
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice, COUNT(*) as numTracks FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice, art.Name, q1.numTracks FROM chinook.album a JOIN q1 on q1.albumId = a.albumId JOIN chinook.artist art on art.artistId = a.artistId
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice, COUNT(*) as numTracks FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice, art.Name FROM chinook.album a JOIN q1 on q1.albumId = a.albumId JOIN chinook.artist art on art.artistId = a.artistId
select * from   openquery([#.#],&&&'DIAGNOSIS&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&AGE&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&ETHNICITY&&&    left outer join clinical_patient SAMPLE_COUNT      on SAMPLE_COUNT.internal_id=p.internal_id     and SAMPLE_COUNT.attr_id =&&&SAMPLE_COUNT&&&    left outer join clinical_patient SEX      on SEX.internal_id=p.internal_id     and SEX.attr_id =&&&SEX&&&    left outer join clinical_patient STAGE      on STAGE.internal_id=p.internal_id     and STAGE.attr_id =&&&STAGE&&&  where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice, art.Name FROM chinook.album a JOIN q1 on q1.albumId = a.albumId JOIN chinook.artist art on art.artistId = a.artistId
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice, art.Name FROM chinook.album a RIGHT JOIN q1 on q1.albumId = a.albumId  JOIN chinook.artist art on art.artistId = a.artistId
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice, art.Name FROM chinook.album a RIGHT JOIN q1 on q1.albumId = a.albumId RIGHT JOIN chinook.artist art on art.artistId = a.artistId
select p.stable_id ,      cp.*   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join clinical_patient cp      on cp.internal_id=p.internal_id  where cs.cancer_study_identifier=&&&
select p.stable_id as patient_stable_id ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY ,      SAMPLE_COUNT.attr_value as SAMPLE_COUNT ,      SEX.attr_value as SEX ,      STAGE.attr_value as STAGE   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&    left outer join clinical_patient SAMPLE_COUNT      on SAMPLE_COUNT.internal_id=p.internal_id     and SAMPLE_COUNT.attr_id =&&&    left outer join clinical_patient SEX      on SEX.internal_id=p.internal_id     and SEX.attr_id =&&&    left outer join clinical_patient STAGE      on STAGE.internal_id=p.internal_id     and STAGE.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId, q1.totalPrice FROM chinook.album a RIGHT JOIN q1 on q1.albumId = a.albumId
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC) SELECT a.title, a.albumId FROM chinook.album a RIGHT JOIN q1 on q1.albumId = a.albumId
select p.stable_id as patient_stable_id ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY ,      SAMPLE_COUNT.attr_value as SAMPLE_COUNT ,      SEX.attr_value as SEX   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&    left outer join clinical_patient SAMPLE_COUNT      on SAMPLE_COUNT.internal_id=p.internal_id     and SAMPLE_COUNT.attr_id =&&&    left outer join clinical_patient SEX      on SEX.internal_id=p.internal_id     and SEX.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select ra, dec, run, rerun, camcol, field from Field where (ra between # and #) and (dec between # and #)
select p.stable_id as patient_stable_id ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select * from ELRedshift where specObjId=#
select TOP # Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name ORDER BY AlbumPrice DESC
select p.stable_id,cs.* ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name ORDER BY AlbumPrice DESC LIMIT #
select p.stable_id ,      AGE.attr_value as AGE ,      DIAGNOSIS.attr_value as DIAGNOSIS ,      ETHNICITY.attr_value as ETHNICITY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient DIAGNOSIS      on DIAGNOSIS.internal_id=p.internal_id     and DIAGNOSIS.attr_id =&&&    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name ORDER BY AlbumPrice DESC #
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name ORDER BY AlbumPrice DESC
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name ORDER BY AlbumPrice
select * from Photoz2 where objid=#
select p.stable_id ,      AGE.attr_value as AGE ,      ETHNICITY.attr_value as ETHNICITY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient ETHNICITY      on ETHNICITY.internal_id=p.internal_id     and ETHNICITY.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumProce from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title, Artist.Name
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumProce from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title
select p.stable_id ,      AGE.attr_value as AGE ,      CANCER_TYPE.attr_value as CANCER_TYPE ,      cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient CANCER_TYPE      on CANCER_TYPE.internal_id=p.internal_id     and CANCER_TYPE.attr_id =&&&    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id     and cp1.attr_id =&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&  where cs.cancer_study_identifier=&&& order by #
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
select p.stable_id ,      AGE.attr_value as AGE ,      CANCER_TYPE.attr_value as CANCER_TYPE ,      cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient AGE      on AGE.internal_id=p.internal_id     and AGE.attr_id =&&&    left outer join clinical_patient CANCER_TYPE      on CANCER_TYPE.internal_id=p.internal_id     and CANCER_TYPE.attr_id =&&&    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id     and cp1.attr_id =&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&  where cs.cancer_study_identifier=&&&
select Album.Title, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumProce from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.Title
select Album.Title, Artist.Name as Artist, count(Track.TrackId) as TrackNumbers, sum(Track.UnitPrice) as AlbumProce from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.AlbumId
select Album.Title, Artist.Name as Artist, Track.TrackId, Track.UnitPrice from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId
select Album.Title, Artist.Name as Artist, Track.TrackId, Track.Unite from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId
select Album.Title, Artist.Name as Artist, Track.TrackId, Track.Price from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId
select Album.Title, Artist.Name as Artist, Track.TrackId from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId
select Album.AlbumId, Album.Title, Artist.Name as Artist from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId
select Album.AlbumId, Album.Title from chinook.Album JOIN chinook.Track  ON Track.AlbumId = Album.AlbumId JOIN chinook.Artist  ON Album.ArtistId = Artist.ArtistId GROUP BY Album.AlbumId
select * from   openquery([#.#],&&&'ETHNICITY&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&IMMUNOHISTOCHEMISTRY&&&    left outer join clinical_patient cp3      on cp3.internal_id=p.internal_id     and cp3.attr_id =&&&AGE&&&  where cs.cancer_study_identifier=&&&paac_jhu_#&&&') a
select * from   openquery([#.#],&&&ETHNICITY&&&IMMUNOHISTOCHEMISTRY&&&AGE&&&'paac_jhu_#&&&') a
select * from   openquery([#.#],&&&'paac_jhu_#&&&') a
select * from   openquery([#.#],&&&'paac_jhu_#&&&) a
select p.stable_id ,      cp.*   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id  where cs.cancer_study_identifier=&&&
select Bytes, MilliSeconds from chinook.Track where MediaTypeId = #
select p.stable_id ,      cp3.attr_value as AGE ,      cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id     and cp1.attr_id =&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&    left outer join clinical_patient cp3      on cp3.internal_id=p.internal_id     and cp3.attr_id =&&&  where cs.cancer_study_identifier=&&&
select p.stable_id ,      cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id     and cp1.attr_id =&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&  where cs.cancer_study_identifier=&&&
select Bytes, MilliSeconds, MediaTypeId from chinook.Track order by MediaTypeId asc
select Bytes, MilliSeconds, MediaTypeId from chinook.Track orderby MediaTypeId
select Bytes, MilliSeconds, MediaTypeId from chinook.Track
select cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join clinical_attribute_meta cam      on cam.cancer_study_id=cs.cancer_study_id  where cs.cancer_study_identifier=&&&
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC
SELECT TOP # a.title, a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice DESC
select cp1.attr_value as ETHNICITY ,      cp2.attr_value as IMMUNOHISTOCHEMISTRY   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    left outer join clinical_patient cp1      on cp1.internal_id=p.internal_id     and cp1.attr_id =&&&    left outer join clinical_patient cp2      on cp2.internal_id=p.internal_id     and cp2.attr_id =&&&  where cs.cancer_study_identifier=&&&
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice ASC
select Count(Track.TrackId) AS NumberOfTracks from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title) MyTable GROUP BY NumberOfTracks
SELECT TOP # a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId ORDER BY totalPrice
SELECT a.albumId, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
select Bytes, MilliSeconds from chinook.Track
SELECT a.albumId, a.title, SUM(t.unitprice) as totalPrice FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT a.albumId, a.title, SUM(t.unitprice) FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT TOP #  objid,ra,dec,u,g,r,i,z FROM Star WHERE  r BETWEEN # AND #  AND ra between # and #  AND dec between # and #
select cs.*,cp.attr_id, cp.attr_value   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join clinical_patient cp      on cp.internal_id=p.internal_id     and cp.attr_id =&&&  where cs.cancer_study_identifier=&&&
select cs.*,cp.attr_id, cp.attr_value   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join clinical_patient cp      on cp.internal_id=p.internal__id     and cp.attr_id =&&&  where cs.cancer_study_identifier=&&&
select cs.*,p.attr_value   from cancer_study cs    inner join patient p      on p.cancer_study_id=cs.cancer_study_id    inner join clinical_patient cp      on cp.internal_id=p.internal__id     and cp.attr_id =&&&  where cs.cancer_study_identifier=&&&
SELECT a.albumId, a.title, t.unitprice  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.albumId, a.title, t.price  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.albumId, a.title  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.albumId, a.title  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
select MilliSeconds, Bytes from chinook.Track
select cam.*,p.attr_value   from cancer_study cs    left outer join clinical_attribute_meta cam     on cam.cancer_study_id=cs.cancer_study_id --   and cam.attr_id =&&&    left outer join patient p      on p.internal_id=cam.patient_id     and p.attr_id=cam.attr_id  where cs.cancer_study_identifier=&&&
select Count(Track.TrackId) AS Count from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title) MyTable GROUP BY Count
select Album.Title, Count(Track.TrackId) AS COUNT from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title ORDER BY Album.Title
select Album.Title, Count(Track.TrackId) from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title ORDER BY Album.Title
select Album.Title, Count(Track,TrackId) from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title ORDER BY Album.Title
select Album.Title, Track.Name from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) ORDER BY Album.Title
select Album.Title, Track.Name from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Album.Title
select Album.Title, Track.Name from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID) GROUP BY Title
SELECT a.albumId, COUNT(a.albumID) as numTracks FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
select Album.Title, Track.Name from chinook.Album Album JOIN chinook.Track Track ON (Album.AlbumID = Track.AlbumID)
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeId = Track.MediaTypeId) JOIN chinook.Genre Genre ON (Genre.GenreId = Track.GenreId) GROUP BY MediaType.Name, Genre.Name ORDER BY MediaType.Name, Genre.Name
select TrackId, Name, Bytes, Milliseconds from chinook.Track
SELECT a.albumId, COUNT(a.albumID) FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT t.name, a.albumId, COUNT(a.albumID) FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT t.name, a.albumId, a.title FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT t.name, a.albumId, a.name FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT t.name, a.albumId FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT t.name, a.albumId, t.albumId FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, t.name, a.albumId FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, t.name FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, t.name, COUNT(a.albumId) FROM chinook.album a GROUP BY a.albumId LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, t.name, COUNT(a.albumId) FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT a.title, t.name FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY MediaType.Name, Genre.Name ORDER BY MediaType.Name, Genre.Name
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY MediaType.Name, Genre.Name
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY MediaType, Genre
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY MediaType
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY MediaType.Name
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY chinook.MediaType.Name
SELECT a.title, t.name, COUNT(*) FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT a.title, t.naem FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, t.title FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.title, COUNT(a.albumId)  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT a.title, COUNT(t.albumId)  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID)
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY Genre.Name
select MediaType.Name As MediaType, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID) GROUP BY Genre
SELECT a.title, COUNT(t.albumId)  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY a.albumId
SELECT a.title, COUNT(t.albumId)  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY t.albumId
SELECT a.title, COUNT(*)  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId  GROUP BY t.albumId
SELECT a.title, COUNT(t.albumId) GROUP BY t.albumId FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
select MediaType.Name As MediaType, Track.TrackID, Track.Name, Genre.Name As Genre from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID) JOIN chinook.Genre Genre ON (Genre.GenreID = Track.GenreID)
SELECT a.title, t.albumId  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId GROUP BY t.albumId
select MediaType.Name As MediaType, Track.TrackID, Track.Name from chinook.Track Track  JOIN chinook.MediaType MediaType ON (MediaType.MediaTypeID = Track.MediaTypeID)
SELECT a.title, t.albumId  FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.Name AS genre, m.Name AS mediatype FROM chinook.album a LEFT JOIN chinook.track t ON t.albumId = a.albumId
SELECT a.Name AS genre, m.Name AS mediatype FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
select SUBSTRING(Name, #, #) AS Initial, COUNT(SUBSTRING(Name, #, #)) AS Count from chinook.Artist  GROUP BY SUBSTRING(Name, #, #)
select COUNT(SUBSTRING(Name, #, #)) from chinook.Artist GROUP BY SUBSTRING(Name, #, #)
select COUNT(SUBSTRING(Name, #, #)) from chinook.Artist
select COUNT(SUBSTRING(Name, #, #)) AS Count from chinook.Artist
select COUNT(SUBSTRING(Name, #, #)) AS Count from chinook.Artist GROUP BY COUNT(SUBSTRING(Name, #, #))
select SUBSTRING(Name, #, #) AS Initial from chinook.Artist GROUP BY SUBSTRING(Name, #, #)
select SUBSTRING(Name, #, #) AS Initial from chinook.Artist GROUP BY Intitial
select SUBSTRING(Name, #, #) AS Initial from chinook.Artist
select Milliseconds, Bytes from chinook.Track
INSERT INTO #upload values
select GenreId, MediaTypeId, Count(*) from chinook.Track group by GenreId, MediaTypeId
select GenreId, MediaTypeId from chinook.Track
select GenreId, MediaTypeId from chinook.Tracks
select Genre.Name, MediaType.Name from chinook
select Genre.Name, MediaType.Name from chinook.Track
select GenreId.Name, MediaTypeId.Name from chinook.Track
select substring(Name, #, #) as Initial, Count(*) as Count from chinook.Artist  group by substring(Name, #, #)
select substring(Name, #, #) as Initial, Count(*) asCoutn from chinook.Artist  group by substring(Name, #, #)
select substring(Name, #, #), Count(*) from chinook.Artist  group by substring(Name, #, #)
SELECT TOP #   p.u, p.g, p.r, p.i, p.z, s.class, s.z, s.zerr  FROM PhotoObj AS p   JOIN SpecObj AS s ON s.bestobjid = p.objid  WHERE   p.u BETWEEN # AND #   AND p.g BETWEEN # AND #   AND s.class <> &&&   AND s.class <> &&&   AND s.class <> &&&   AND s.class <> &&&
select substring(Name, #, #), Count(*) from chinook.Artist  group by Name
select substring(Name, #, #) as Init from chinook.Artist  group by Name
select substring(Name, #, #) as Init from chinook.Artist  group by Init
select substring(Name, #, #) as Init from chinook.Artist  group by Init.Count
select substring(Name, #, #) as Init, Count(Init) from chinook.Artist  group by Name
select substring(Name, #, #) from chinook.Artist  group by Name
select substring(Name, #, #) from chinook.Artist  group Name
select substring(Name, #, #) from chinook.Artist  group by Count(Name)
select substring(Name, #, #) from chinook.Artist  order by Name
select substring(Name, #, #) from chinook.Artist
select substring(Name, #, #), Count(substring(Name, #, #)) from chinook.Artist
select Count(substring(Name, #, #)) from chinook.Artist
select Count(substring(Name, #, #)) from chinook.Artist order by Name asc
SELECT DISTINCT g.Name AS genre, m.Name AS mediatype FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
SELECT  g.Name AS genre, m.Name AS mediatype FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
SELECT  DISTINCT g.Name AS genre, m.Name AS mediatype FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
select substring(Name, #, #), Count(*) from chinook.Artist order by Name asc
select substring(Name, #, #), count(*) from chinook.Artist order by Name asc
select substring(Name, #, #) from chinook.Artist order by Name asc
select substring(Name, #, #) from chinook.Artist group by Name order by Name asc
SELECT t.Name as track, g.Name AS genre, m.Name AS mediatype FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
select substring(Name, #, #) from chinook.Artistorder by Name asc
SELECT t.Name, g.Name, m.Name  FROM chinook.track t LEFT OUTER JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT OUTER JOIN chinook.Genre g ON g.GenreId = t.GenreId
select substring(Name, #, #) from chinook.Artist |order by Name asc
SELECT t.Name, g.Name, m.Name  FROM chinook.track t LEFT JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN chinook.Genre g ON g.GenreId = t.GenreId
select substring(Name, #, #), from chinook.Artist
select substring(Name, #, #), from chinook.Artist, order by Name asc
select SUBSTRING(Name, #, #) AS Initial, from chinook.Artist,order by Name asc
select Name, SUBSTRING(Name, #, #) AS Initial, from chinook.Artist,  order by Name asc
select Name SUBSTRING(Name, #, #) AS Initial, from chinook.Artist,  order by Name asc
select Name from chinook.Artist, SUBSTRING(Name, #, #)
select Name from chinook.Artist, SUBSTRING(Name, #, #) AS Initial
select Name from chinook.Artist, SUBSTRING(Name, #, #) AS Initial, order by Name asc
select * from zoo2MainSpecz where dr8objid=#
SELECT t.Name g.Name, m.Name  FROM chinook.track t LEFT JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN chinook.Genre g ON g.GenreId = t.GenreId
SELECT t.Name g.Name, m.Name  FROM chinook.track  t LEFT JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN chinook.Genre g ON g.GenreId = t.GenreId
SELECT t.Name g.Name, m.Name  FROM chinook.track  t LEFT JOIN chinook.MediaType m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN chinook.Genre g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name, m.Name  FROM chinook.track  t LEFT JOIN chinook.MediaType  m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN chinook.Genre  g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name , m.Name  FROM chinook.track  t LEFT JOIN MediaType  m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN Genre  g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name AS genre, m.Name AS media  FROM chinook.track  t LEFT JOIN MediaType  m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN Genre  g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name AS genre, m.Name AS media  FROM chinook.track AS t LEFT JOIN MediaType AS m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN Genre AS g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name AS genre, m.Name AS media  FROM chinook.track t LEFT JOIN Media m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN Genre g ON g.MediaTypeId = t.MediaTypeId
SELECT t.Name g.Name AS genre,  m.Name AS media from chinook.track AS t  FROM chinook.track t LEFT JOIN Media m ON m.MediaTypeId = t.MediaTypeId LEFT JOIN Genre g ON g.MediaTypeId = t.MediaTypeId
select cs.*,cam.*   from cancer_study cs   join clinical_attribute_meta cam     on cam.cancer_study_id=cs.cancer_study_id  where cs.cancer_study_identifier=&&&
SELECT ALL  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,p.type,  s.class, s.z as redshift, s.class FROM PhotoPrimary AS p  JOIN SpecObj AS s ON s.class = &&& WHERE   p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND p.type = #
select distinct(attr_id) from clinical_attribute_meta
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_r, type_r, psfMagErr_r FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
select top # * from clinical_attribute_meta
select MediaTypeId, TrackId From chinook.Track where MediaTypeId=#
select distinct([KEY]) from clinical_event_data
select distinct(KEY) from clinical_event_data
select distinct(status) from clinical_event_data
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT ALL  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,p.type,  s.class, s.z as redshift, s.class FROM PhotoPrimary AS p  JOIN SpecObj AS s ON s.class = &&& WHERE  p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND p.type = #
SELECT GenreID, MediaTypeID from chinook.track AND name from chinook.genre
SELECT GenreID, MediaTypeID from chinook.track, name from chinook.genre
SELECT GenreID, MediaTypeID from chinook.track
select * from information_schema.columns where column_name in (&&&,&&&)
select s.ObjID,s.class,s.subclass,s.z,s.zErr,s.type from SpecPhoto s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
select s.ObjID, s.ra,s.dec,s.deVRad_r,s.deVAB_r,s.raErr,s.decErr,s.type,s.modelMag_u,s.modelMagErr_u,s.modelMag_g,s.modelMagErr_g,s.modelMag_r,s.modelMagErr_r,s.modelMag_i,s.modelMagErr_i,s.modelMag_z,s.modelMagErr_z from PhotoPrimary s, dbo.fGetNearbyObjEq(#,#,#) n where s.ObjID = n.ObjID AND s.mode = #
select * from information_schema.columns
SELECT SUBSTRING(name, #, #) AS firstLetter, COUNT(SUBSTRING(name, #, #)) as num FROM chinook.artist GROUP BY SUBSTRING(name, #, #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT SUBSTRING(name, #, #) AS firstLetter
SELECT SUBSTRING(name, #, #) AS firstLetter  FROM chinook.artist
SELECT SUBSTRING(name, #, #) AS firstLetter as num FROM chinook.artist
SELECT SUBSTRING(name, #, #) AS firstLetter , count(firstLetter) as num FROM chinook.artist
SELECT SUBSTRING(name, #, #) AS firstLetter , count(firstLetter) as num FROM chinook.artist GROUP BY firstLetter
SELECT SUBSTRING(name, #, #) AS firstLetter , count(*) as num FROM chinook.artist GROUP BY firstLetter
SELECT SUBSTRING(name, #, #) AS firstLetter , count(*) as num FROM chinook.artist GROUP BY name
select SUBSTRING(name, #, #) AS firstLetter , count(*) as num from chinook.artist group by firstLetter
select SUBSTRING(name, #, #) AS firstLetter , count(*) as count from chinook.artist group by firstLetter
select SUBSTRING(name, #, #) AS firstLetter , count(*) from chinook.artist group by firstLetter
select SUBSTRING(name, #, #) AS firstLetter from chinook.artist
SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.u between # AND # AND p.g between # AND # AND p.i between # AND # AND p.r between # AND # AND p.z between # AND #
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_i, type_i, psfMagErr_i FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT ra, dec, type, modelMag_u, modelMag_g, modelMag_r, modelMag_i, modelMag_z, modelMagErr_u, modelMagErr_g, modelMagErr_r, modelMagErr_i, modelMagErr_z, psfMag_g, type_g, psfMagErr_g FROM PhotoPrimary WHERE (ra between # and #) and (dec between # and #)
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID  AND p.u BETWEEN # AND # AND p.g BETWEEN # AND # AND p.r BETWEEN # AND # AND p.i BETWEEN # AND # AND p.z BETWEEN # AND #
select Name From chinook.MediaType as bla, chinook.Genre as bleh
select Name From chinook.MediaType, chinook.Genre
select M.Name, G.Name from chinook.MediaType as M Cross join chinook.Genre as G
select M.MediaTypeId, G.Genre from chinook.MediaType as M Cross join chinook.Genre as G
select M.MediaTypeId, G.Genre from chinook.Media as M Cross join chinook.Genre as G
select M.MediaTypeId, G.Genre from ctechinook.Media as M Cross join ctechinook.Genre as G
select MediaTypeId,GenreId from chinook.Track
select MediaTypeId.*,GenreId from chinook.Track
select MediaType,Genre from chinook.Track
select Name,  from chinook.Track.MediaType
select Name,  from chinook.Track.MediaTypeID
select p.objid as name, p.ra, p.dec from galaxy p, specobj s where p.objid=s.bestobjid and (p.g BETWEEN # AND #) and s.z BETWEEN # AND #
select MediaType.Name, Genre.Name from chinook.Track
select p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z from galaxy p, specobj s where p.objid=s.bestobjid and (p.g BETWEEN # AND #)  and s.z BETWEEN # AND #
select MediaTypeID.Name, GenreID.Name from chinook.Track
select MediaTypeID, GenreID from chinook.Track
select * from zoo2MainPhotoz where dr8objid=#
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  WHERE g.ra BETWEEN # AND #   AND g.dec BETWEEN # AND #   AND s.z BETWEEN # AND #
SELECT ALL  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,p.type,  s.class, s.z as redshift, s.class FROM PhotoObj AS p  JOIN SpecObj AS s ON s.class = &&& WHERE  p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND p.type = #
SELECT top #  visit.*, aspcap.teff, aspcap.logg, aspcap.param_m_h FROM apogeeVisit visit  JOIN apogeeStarVisit starvisit on visit.visit_id = starvisit.visit_id  JOIN aspcapStar aspcap on aspcap.apstar_id = starvisit.apstar_id  JOIN apogeeStar star on star.apstar_id = starvisit.apstar_id WHERE (aspcap.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and aspcap.teff > #  and (star.apogee_target1 & dbo.fApogeeTarget1(&&&)) > #  and star.nvisits > #  ORDER BY visit.apogee_id
SELECT DISTINCT p.ra, p.dec, p.clean, p.u, p.g, p.r, p.i, p.z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT * FROM ISO_Lndev_OUT
select top # * from [ISO_Lndev_OUT]
SELECT   ra_iso, dec_iso FROM MyDB.ISO_Lndev_IN  OPEN my_cursor  WHILE(#=#) BEGIN   FETCH NEXT from my_cursor into    @ra_iso, @dec_iso     IF (@@fetch_status < #) break      INSERT MYDB.ISO_Lndev_OUT      SELECT   @ra_iso, @dec_iso,               p.objID, p.ra, p.dec,                   p.lnLDeV_u, p.lnLDeV_g, p.lnLDeV_r, p.lnLDeV_i, p.lnLDeV_z,                p.lnLExp_u, p.lnLExp_g, p.lnLExp_r, p.lnLExp_i, p.lnLExp_z               FROM   dbo.fGetNearestObjEq(@ra_iso,@dec_iso,#/#) n, Galaxy p     JOIN Photoz  As z ON z.objid = p.objid   JOIN SpecObj AS s ON s.bestobjid = p.objid   JOIN zooSpec AS gz ON gz.objid = p.objid   WHERE n.objid=p.objid         END  CLOSE my_cursor DEALLOCATE my_cursor
select * from zooSpec where objid=#
select * from zooNoSpec where objid=#
select * from zooMonochromeBias where objid=#
select * from zooMirrorBias where objid=#
select * from zooConfidence where objid=#
select * from zoo2Stripe8#Normal where dr8objid=#
select * from zoo2Stripe8#Coadd1 where dr8objid=#
CREATE TABLE ISO_Lndev_OUT(   ra_iso   float  not null,   dec_iso   float  not null,   objID     bigint not null,    ra       float  not null,   dec       float  not null,   lnLDeV_u real   not null,   lnLDeV_g real   not null,   lnLDeV_r real   not null,   lnLDeV_i real   not null,   lnLDeV_z real   not null,   lnLExp_u real   not null,   lnLExp_g real   not null,   lnLExp_r real   not null,   lnLExp_i real   not null,   lnLExp_z real   not null       );
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  WHERE g.ra BETWEEN # AND #     AND g.dec BETWEEN # AND #     AND s.z BETWEEN # AND #
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  WHERE g.ra BETSEEN # AND #     AND g.dec BETSEEN # AND #     AND s.z BETWEEN # AND #
SELECT  sp.ra, sp.dec, sp.z as redshift,  sp.modelMag_g as g, sp.modelMagerr_g as err_g,   sp.modelMag_i as i, sp.modelMagerr_i as err_i,  gs.h_alpha_eqw, gs.oii_#_eqw,   p.aperFlux7_g, p.aperFlux7Ivar_g as var_g,  p.aperFlux7_i, p.aperFlux7Ivar_i as var_i    FROM GalSpecLine AS gs   JOIN SpecPhoto AS sp ON sp.specobjid = gs.specobjid   JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS GN  ON GN.specobjID = gs.specobjid  JOIN Galaxy as gal ON gal.specobjId = gs.specobjid  JOIN PhotoObjAll as p ON p.specObjId = gs.specobjID    WHERE   h_alpha_eqw between # and #   and oii_#_eqw between # and #   and sp.modelMag_g-sp.modelMag_i between # and #   and sp.z between # and #   and sp.modelMag_i-#*log1#(#E+#*sp.z) < #
SELECT &&&
SELECT ALL  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,p.type,  s.class, s.z as redshift, s.class FROM PhotoObj AS p  JOIN SpecObj AS s ON s.class = &&& WHERE   p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND p.type = #
select gp.stable_id as genetic_profile_id ,      gp.name as genetic_profile_name ,      gp.description as genetic_profile_description ,      cs.cancer_study_id ,      gp.genetic_alteration_type ,      gp.show_profile_in_analysis_tab   from cancer_study cs   join genetic_profile gp     on gp.cancer_study_id=cs.cancer_study_id  where cs.cancer_study_identifier=&&&
select sl.stable_id as case_list_id, max(sl.name) as case_list_name ,      max(sl.description) as case_list_description ,      sl.cancer_study_id ,      STRING_AGG(s.stable_id ,&&&) as case_ids   from cancer_study cs     inner join sample_list sl       on sl.CANCER_STUDY_ID=cs.CANCER_STUDY_ID   join sample_list_list sll      on sl.list_id=sll.list_id   join sample s     on s.internal_id=sll.sample_id where cs.cancer_study_identifier=&&& group by sl.stable_id,sl.cancer_study_id order by #,#
select CANCER_STUDY_IDENTIFIER as cancer_study_id,name,description from cancer_study order by name
SELECT TOP # g.l,  g.b,  s.z as redshift, g.u, g.err_u,  g.g,  g.err_g,  g.r,  g.err_r,  g.i,  g.err_i,  g.z,  g.err_z,  g.extinction_g,  g.extinction_r      FROM  Galaxy AS g  JOIN SpecObj as s ON s.specObjID = g.specObjID  WHERE  g.l between # and # and  g.b between # and # and  g.petroR9#_i/g.petroR5#_i > #  and ((flags & #) = #) and s.z > #
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  JOIN dbo.fGetNearbyObjEq(#,#,#) AS n ON g.objid = n.objid  WHERE s.z BETWEEN # AND #
select gp.genetic_profile_id ,      gp.name as genetic_profile_name ,      gp.description as genetic_profile_description ,      cs.cancer_study_id ,      gp.genetic_alteration_type ,      gp.show_profile_in_analysis_tab   from cancer_study cs   join genetic_profile gp     on gp.cancer_study_id=cs.cancer_study_id  where cs.cancer_study_identifier=&&&
SELECT * FROM RM_BCG_Lndev_IN
SELECT * FROM RM_BCG_Lndev_OUT
select * from chinook.MediaType, chinook.Genre
select * from chinook.MediaType, * from chinook.Genre
select top # * from [RM_BCG_Lndev_OUT]
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
select name, description from DBObjects where access=&&& and type=&&& order by name
select substring(Name,#,#) as FL into test from chinook.Artist
select FL, count(*) from test group by FL
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  JOIN dbo.fGetNearbyObjEq(#,#,#) AS n ON g.objid = n.objid  WHERE s.z = #
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  JOIN dbo.fGetNearbyObjEq(#,#,#) AS n ON g.objid = n.objid  WHERE s.z = dense_z
SELECT g.objid, g.ra, g.dec, g.dered_u as u, g.dered_g as g, g.dered_r as r, g.dered_i as i, g.clean,    s.z as z_spec     FROM galaxy AS g    JOIN SpecObj AS s ON s.bestobjid = g.objid  JOIN dbo.fGetNearbyObjEq(#,#,#) AS n ON g.objid = n.objid  WHERE s.z == dense_z
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, f.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  JOIN Field f ON f.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.metals, a.metals_err,  a.alphafe, a.alphafe_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target2 & (dbo.fApogeeTarget2(&&&)) != #)
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT
select substring(Name,#,#) as FL into test from chinook.Artist select FL, count(*) from test group by FL
SELECT * FROM SYSOBJECTS WHERE xtype = &&&;
SELECT * FROM SYSOBJECTS WHERE xtype = &&&; GO
delete from test
delete test
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p .objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  a.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p .objID = x.objID  JOIN Field a ON a .objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  a.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p .objID = x.objID  JOIN Field a ON a.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  a.expPhi_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p .objID = x.objID  JOIN PhotoObjAll a ON a.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  f.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p .objID = x.objID  JOIN Field f ON f.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field, f.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN Field f ON f.objID = x.objID  ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  f.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN Field f ON f.objID = x.objID  ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.z FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN SpecPhotoAll p ON p.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN Field p ON p.objID = x.objID ORDER BY x.up_id&&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.gain_r FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN Field p ON p.objID = x.objID ORDER BY x.up_id &&&#', @log=#, @filter=#
SELECT   p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  s.class, s.z as redshift  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #  AND p.dec BETWEEN # AND #  AND s.class !=&&&
SELECT   p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  s.specobjid, s.class, s.z as redshift  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #  AND P.dec BETWEEN # AND #  AND s.class !=&&&
SELECT   p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  s.specobjid, s.class, s.z as redshift  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #  AND g BETWEEN # AND #  AND s.class !=&&&
SELECT TOP #  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  s.specobjid, s.class, s.z as redshift  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #  AND g BETWEEN # AND #  AND s.class !=&&&
select substring(Name,#,#) as FL from chinook.Artist
SELECT TOP #  p.ra,p.dec,p.u,p.g,p.r,p.i,p.z  s.specobjid, s.class, s.z as redshift,  FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.ra BETWEEN # AND #  AND g BETWEEN # AND #  AND s.class !=&&&
select substring(Name,#,#) as FL from chinook.Artist group by FL
select substring(Name,#,#) as FL from chinook.Artist  select FL group by FL
select substring(Name,#,#) as FL from chinook.Artist as New.new select FL from New.new group by FL
select substring(Name,#,#) as FL from chinook.Artist as New.new select FL from New.ew group by FL
select substring(Name,#,#) as FL from chinook.Artist as New select FL from New group by FL
select substring(Name,#,#) as FL from chinook.Artist as New select FL from New, count(*) as Count group by FL
select substring(Name,#,#) as FL from chinook.Artist as New select * from New, count(*) as Count group by FL
select substring(Name,#,#) as FL from chinook.Artist as New select New, count(*) as Count group by FL
select substring(Name,#,#) as FirstLetter from chinook.Artist as New select New, count(*) as Count group by FirstLetter
select substring(Name,#,#) as FirstLetter from chinook.Artist as New
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist group by FirstLetter
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist group by Name
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist AS New
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist AS New select FirstLetter, sum(Count) from New group by FirstLetter, Count
select substring(Name,#,#) as FirstLetter, count(*) as Count from chinook.Artist group by FirstLetter, Count
select substring(Name,#,#) as FirstLetter, count(*) as Count group by FirstLetter, Count from chinook.Artist
select substring(Name,#,#) as FirstLetter, count(*) as count from chinook.Artist group by Name
select substring(Name,#,#), count(*) as FirstLetter from chinook.Artist group by Name
select substring(Name,#,#) as FirstLetter from chinook.Artist, count(*) group by Name
select substring(Name,#,#) as FirstLetter from chinook.Artist group by Name
select substring(Name,#,#) as FirstLetter from chinook.Artist
select substring(Name,#,#) as FirstLetter from chinook.Artist group by Name from chinook.Artist
select substring(Name,#,#) as FirstLetter from chinook.Artist group by Name from select substring(Name,#,#) as FirstLetter from chinook.Artist
select substring(Name,#,#) as FirstLetter from chinook.Artist group by Name from FirstLetter
select substring(Name,#,#) as FirstLetter from chinook.Artist group by test
select substring(Name,#,#) as test from chinook.Artist group by test
select substring(Name,#,#) as test from chinook.Artist group by Name
select substring(Name,#,#) as test from chinook.Artist group by Name from test
select substring(Name,#,#) from chinook.Artist group by Name
select substring(Name,#,#) from chinook.Artist group by &&&
select substring(Name,#,#) from chinook.Artist group by Column
select substring(Name,#,#) from chinook.Artist group by #
select substring(Name,#,#) from chinook.Artist
select substring(Name,#,#) from chinook.Artist group by Column1
select substring(Name,#,#) from chinook.Artist AS ExtractString group by &&&
select substring(Name,#,#) from chinook.Artist AS ExtractString group by &&& from ExtractString
select substring(Name,#,#) from chinook.Artist AS ExtractString group by Column1 from ExtractString
select substring(Name,#,#) from chinook.Artist as TEST group by Column1 from TEST
select SUBSTRING(Name,#,#) from chinook.Artist
select Name from chinook.Artist select SUBSTRING(Name,#,#) from chinook.Artist
select Name from chinook.Artist select SUBSTRING(Name,#,#) from chinook.Artists
select Name from chinook.Artist select SUBSTRING(&&&,#,#) FROM chinook.Artists
select Name from chinook.Artist select SUBSTRING(Name,#,#) FROM chinook.Artists
select Name from chinook.Artist select SUBSTRING(&&&,#,#)
select Name from chinook.Artist select SUBSTRING(;select Name from chinook.Artists',#,#)
select Name from chinook.Artist select SUBSTRING(select Name from chinook.Artists,#,#)
select Name from chinook.Artist select SUBSTRING(Name from chinook.Artists,#,#)
select Name from chinook.Artist select SUBSTRING('AC/DC,#,#)
select * from chinook.Artist select SUBSTRING(&&&,#,#)
select * from chinook.Artist select SUBSTRING(#,#,#)
select * from chinook.Artist select SUBSTRING(&&&,#,#) GROUP BY Name
select * from chinook.Artist select SUBSTRING(&&&,#,#) from chinook.Artist GROUP BY Name
select * from chinook.Artist select SUBSTRING(&&&,#,#) GROUP BY &&&
select Name from chinook.Artist select SUBSTRING(Name,#,#)
select Name from chinook.Artist SUBSTRING(Name,#,#)
select Name from chinook.Artist SUBSTRING(#,#)
select Name from chinook.Artist     SUBSTRING(&&&, #, # )
select * into mydb.bla from chinook.Artist
select * into mydb.MyTable from chinook.Artist
select * into mydb.MyTable from chinook.Artist SUBSTRING(&&&, #, # )
select * from chinook.Artist     SUBSTRING(&&&, #, # )
select * from chinook.Artist SUBSTRING(Name, #, # )
select * from chinook.Artist SUBSTRING(&&&, #, # )
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.type=# AND s.z<#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.dec<# AND s.z<#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.dec<#  AND s.z<#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z as redshift,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.dec BETWEEN # AND #  AND s.z<#
SELECT u.up_name as [name],   &&& + cast(p.objId as varchar(#)) + &&&+ cast(p.objId as varchar(#)) + &&& as objID, p.ra, p.dec,   dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID and p.mode=#  ORDER BY x.up_id
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #   AND p.r BETWEEN # AND #   AND p.g - p.i BETWEEN # AND #  AND p.petroR5#_r BETWEEN # AND #
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff, a.teff_err, a.logg, a.logg_err, a.param_m_h, a.param_m_h_err,  a.param_alpha_m, a.param_alpha_m_err,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = # and  s.commiss = # and  (s.apogee_target1 &  (dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&)+  dbo.fApogeeTarget1(&&&))) != #
INSERT INTO #upload values
INSERT INTO #upload values
select distinct c.field, o.description  	from DataConstants c, DBObjects o 	where o.type=&&& and o.name = c.field
select * from DataConstants order by field, value
select top # * from [evcc_sdss_spec]
select top # * from [FIRST_RADec_Half]
select u.*, p.objId, ltrim(str(p.ra,#,#)) as ra, ltrim(str(p.dec,#,#)) as dec, dbo.fPhotoTypeN(p.type) as type from #x x, #upload u, photoTag p  where u.up_id = x.up_id and x.objID=p.objID and p.mode=# order by x.up_id
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #   AND p.r BETWEEN # AND #   AND p.g - p.i BETWEEN # AND #  AND p.petroR5#_r < #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, p.petroR5#_r, p.fracdeV_r, pz.z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN PhotoZ pz ON p.objID = pz.objID ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #   AND p.r BETWEEN # AND #   AND p.petroR5#_r < #
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #   AND p.r BETWEEN # AND #
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #   AND p.g-p.i BETWEEN # AND #  AND p.r BETWEEN # AND #
SELECT TOP #   p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,   p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r,  n.distance,   pz.z as photoz  FROM fGetNearbyObjEq(#,+#,#) n  JOIN PhotoObj AS p on p.objid = n.objid  JOIN PhotoZ AS pz ON pz.objid = n.objid  WHERE   p.type = #
SELECT TOP # p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z, p.petroR5#_r, p.fracdeV_r, p.deVRad_r, p.expRad_r, n.distance, s.specobjid, s.class, s.subclass, s.z as redshift, s.velDisp FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoObj AS p on p.objid = n.objid JOIN SpecObj AS s ON s.bestobjid = n.objid WHERE s.subclass = QSO BROADLINE
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, p.petroR5#_r, pz.z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN PhotoZ pz ON p.objID = pz.objID ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, pz.z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN PhotoZ pz ON p.objID = pz.objID ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z, p.petroR5#_r, pz.z FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID   JOIN PhotoZ pz on p.objID = pz.objID ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT * FROM photometricdata2
SELECT top #   p.ObjID, p.mjd, p.ra, p.dec, s.z, s.zErr, p.modelFlux_u, p.modelFlux_g, p.modelFlux_r, p.modelFlux_i, p.modelFlux_z, p.modelFluxIvar_u, p.modelFluxIvar_g, p.modelFluxIvar_r, p.modelFluxIvar_i, p.modelFluxIvar_z into mydb.photometricdata2 from DR1#.PhotoObjAll AS p     JOIN DR1#.Photoz AS s ON s.ObjID = p.objID WHERE     p.type = #
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters   p.objID, p.ra, p.dec, p.type, p.q_u, p.u_u,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z,  ----------------------------------------------------------------------- -- Spectroscopic (SpecObjAll) parameters     s.specObjID, s.z, s.zErr, s.sourcetype, s.class, s.subClass, s.velDisp, s.velDispErr,  -----------------------------------------------------------------------   -- Galaxy Spectroscopic Line (GalSpecLine) parameters ----------------------------------------------------------------------- -- Equivalent widths and errors    gl.h_alpha_eqw, gl.h_alpha_eqw_err, gl.h_beta_eqw, gl.h_beta_eqw_err,    gl.h_gamma_eqw,gl.h_gamma_eqw_err, gl.neiii_#_eqw, gl.neiii_#_eqw_err,    gl.oiii_#_eqw, gl.oiii_#_eqw_err, gl.oi_#_eqw, gl.oi_#_eqw_err,    gl.oii_#_eqw, gl.oii_#_eqw_err, gl.oiii_#_eqw, gl.oiii_#_eqw_err,   gl.nii_#_eqw, gl.nii_#_eqw_err, gl.sii_#_eqw, gl.sii_#_eqw_err,  -----------------------------------------------------------------------       -- Emission Line fluxes and errors    gl.h_alpha_flux, gl.h_alpha_flux_err, gl.h_beta_flux, gl.h_beta_flux_err,   gl.h_gamma_flux, gl.h_gamma_flux_err, gl.neiii_#_flux, gl.neiii_#_flux_err,     gl.oiii_#_flux, gl.oiii_#_flux_err, gl.oi_#_flux, gl.oi_#_flux_err,    gl.oii_#_flux, gl.oii_#_flux_err, gl.oiii_#_flux, gl.oiii_#_flux_err,    gl.nii_#_flux, gl.nii_#_flux_err, gl.sii_#_flux, gl.sii_#_flux_err       ----------------------------------------------------------------------- FROM MyDB.FIRST_RADec_Half AS f    CROSS APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON x.objID = p.objID    JOIN SpecObjAll s ON p.objID = s.bestObjID    JOIN GalSpecLine gl ON s.specobjid = gl.specobjid    -----------------------------------------------------------------------   WHERE p.modelMag_u># and p.modelMag_u<#       and p.modelMag_g># and p.modelMag_g<#       and p.modelMag_r># and p.modelMag_r<#       and p.modelMag_z># and p.modelMag_z<#
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters   p.objID, p.ra, p.dec, p.type, p.q_u, p.u_u,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z,  ----------------------------------------------------------------------- -- Spectroscopic (SpecObjAll) parameters     s.specObjID, s.z, s.zErr, s.sourcetype, s.class, s.subClass, s.velDisp, s.velDispErr,  -----------------------------------------------------------------------   -- Galaxy Spectroscopic Line (GalSpecLines) parameters ----------------------------------------------------------------------- -- Equivalent widths and errors    gl.h_alpha_eqw, gl.h_alpha_eqw_err, gl.h_beta_eqw, gl.h_beta_eqw_err,    gl.h_gamma_eqw,gl.h_gamma_eqw_err, gl.neiii_#_eqw, gl.neiii_#_eqw_err,    gl.oiii_#_eqw, gl.oiii_#_eqw_err, gl.oi_#_eqw, gl.oi_#_eqw_err,    gl.oii_#_eqw, gl.oii_#_eqw_err, gl.oiii_#_eqw, gl.oiii_#_eqw_err,   gl.nii_#_eqw, gl.nii_#_eqw_err, gl.sii_#_eqw, gl.sii_#_eqw_err,  -----------------------------------------------------------------------       -- Emission Line fluxes and errors    gl.h_alpha_flux, gl.h_alpha_flux_err, gl.h_beta_flux, gl.h_beta_flux_err,   gl.h_gamma_flux, gl.h_gamma_flux_err, gl.neiii_#_flux, gl.neiii_#_flux_err,     gl.oiii_#_flux, gl.oiii_#_flux_err, gl.oi_#_flux, gl.oi_#_flux_err,    gl.oii_#_flux, gl.oii_#_flux_err, gl.oiii_#_flux, gl.oiii_#_flux_err,    gl.nii_#_flux, gl.nii_#_flux_err, gl.sii_#_flux, gl.sii_#_flux_err       ----------------------------------------------------------------------- FROM MyDB.FIRST_RADec_Half AS f    CROSS APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON x.objID = p.objID    JOIN SpecObjAll s ON p.objID = s.bestObjID    JOIN GalSpecLine gl ON s.specobjid = gl.specobjid    -----------------------------------------------------------------------   WHERE p.modelMag_u># and p.modelMag_u<#       and p.modelMag_g># and p.modelMag_g<#       and p.modelMag_r># and p.modelMag_r<#       and p.modelMag_z># and p.modelMag_z<#
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters   p.objID, p.ra, p.dec, p.type, p.q_u, p.u_u,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z,  ----------------------------------------------------------------------- -- Spectroscopic (SpecObjAll) parameters     s.specObjID, s.z, s.zErr, s.sourcetype, s.class, s.subClass, s.velDisp, s.velDispErr,  -----------------------------------------------------------------------   -- Galaxy Spectroscopic Line (GalSpecLines) parameters ----------------------------------------------------------------------- -- Equivalent widths and errors    gl.h_alpha_eqw, gl.h_alpha_eqw_err, gl.h_beta_eqw, gl.h_beta_eqw_err,    gl.h_gamma_eqw,gl.h_gamma_eqw_err, gl.neiii_#_eqw, gl.neiii_#_eqw_err,    gl.oiii_#_eqw, gl.oiii_#_eqw_err, gl.oi_#_eqw, gl.oi_#_eqw_err,    gl.oii_#_eqw, gl.oii_#_eqw_err, gl.oiii_#_eqw, gl.oiii_#_eqw_err,   gl.nii_#_eqw, gl.nii_#_eqw_err, gl.sii_#_eqw, gl.sii_#_eqw_err,  -----------------------------------------------------------------------       -- Emission Line fluxes and errors    gl.h_alpha_flux, gl.h_alpha_flux_err, gl.h_beta_flux, gl.h_beta_flux_err,   gl.h_gamma_flux, gl.h_gamma_flux_err, gl.neiii_#_flux, gl.neiii_#_flux_err,     gl.oiii_#_flux, gl.oiii_#_flux_err, gl.oi_#_flux, gl.oi_#_flux_err,    gl.oii_#_flux, gl.oii_#_flux_err, gl.oiii_#_flux, gl.oiii_#_flux_err,    gl.nii_#_flux, gl.nii_#_flux_err, gl.sii_#_flux, gl.sii_#_flux_err       ----------------------------------------------------------------------- FROM MyDB.FIRST_RADec_Half AS f    CROSS APPLY dbo.fGetNearestObjEq(f.ra, f.dec, #) AS x     JOIN PhotoObjAll p ON x.objID = p.objID    JOIN SpecObjAll s ON p.objID = s.bestObjID    JOIN GalSpecLines gl ON s.specobjid = gl.specobjid    -----------------------------------------------------------------------   WHERE p.modelMag_u># and p.modelMag_u<#       and p.modelMag_g># and p.modelMag_g<#       and p.modelMag_r># and p.modelMag_r<#       and p.modelMag_z># and p.modelMag_z<#
SELECT TOP # ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters   p.objID, p.ra, p.dec, p.type, p.q_u, p.u_u,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z,  ----------------------------------------------------------------------- -- Spectroscopic (SpecObjAll) parameters     s.specObjID, s.z, s.zErr, s.sourcetype, s.class, s.subClass, s.velDisp, s.velDispErr,  -----------------------------------------------------------------------   -- Galaxy Spectroscopic Line (GalSpecLines) parameters ----------------------------------------------------------------------- -- Equivalent widths and errors    gl.h_alpha_eqw, gl.h_alpha_eqw_err, gl.h_beta_eqw, gl.h_beta_eqw_err,    gl.h_gamma_eqw,gl.h_gamma_eqw_err, gl.neiii_#_eqw, gl.neiii_#_eqw_err,    gl.oiii_#_eqw, gl.oiii_#_eqw_err, gl.oi_#_eqw, gl.oi_#_eqw_err,    gl.oii_#_eqw, gl.oii_#_eqw_err, gl.oiii_#_eqw, gl.oiii_#_eqw_err,   gl.nii_#_eqw, gl.nii_#_eqw_err, gl.sii_#_eqw, gl.sii_#_eqw_err,  -----------------------------------------------------------------------       -- Emission Line fluxes and errors    gl.h_alpha_flux, gl.h_alpha_flux_err, gl.h_beta_flux, gl.h_beta_flux_err,   gl.h_gamma_flux, gl.h_gamma_flux_err, gl.neiii_#_flux, gl.neiii_#_flux_err,     gl.oiii_#_flux, gl.oiii_#_flux_err, gl.oi_#_flux, gl.oi_#_flux_err,    gl.oii_#_flux, gl.oii_#_flux_err, gl.oiii_#_flux, gl.oiii_#_flux_err,    gl.nii_#_flux, gl.nii_#_flux_err, gl.sii_#_flux, gl.sii_#_flux_err       ----------------------------------------------------------------------- FROM MyDB.GalSpecLines AS g    CROSS APPLY dbo.fGetNearestObjEq(g.ra, g.dec, #) AS x     JOIN PhotoObjAll p ON x.objID = p.objID    JOIN SpecObjAll s ON p.objID = s.bestObjID    JOIN GalSpecLines gl ON s.specobjid = gl.specobjid    -----------------------------------------------------------------------   WHERE p.modelMag_u># and p.modelMag_u<#       and p.modelMag_g># and p.modelMag_g<#       and p.modelMag_r># and p.modelMag_r<#       and p.modelMag_z># and p.modelMag_z<#
SELECT ----------------------------------------------------------------------- -- Photometric (photoObjAll) parameters   p.objID, p.ra, p.dec, p.type, p.q_u, p.u_u,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z,  ----------------------------------------------------------------------- -- Spectroscopic (SpecObjAll) parameters     s.specObjID, s.z, s.zErr, s.sourcetype, s.class, s.subClass, s.velDisp, s.velDispErr,  -----------------------------------------------------------------------   -- Galaxy Spectroscopic Line (GalSpecLines) parameters ----------------------------------------------------------------------- -- Equivalent widths and errors    gl.h_alpha_eqw, gl.h_alpha_eqw_err, gl.h_beta_eqw, gl.h_beta_eqw_err,    gl.h_gamma_eqw,gl.h_gamma_eqw_err, gl.neiii_#_eqw, gl.neiii_#_eqw_err,    gl.oiii_#_eqw, gl.oiii_#_eqw_err, gl.oi_#_eqw, gl.oi_#_eqw_err,    gl.oii_#_eqw, gl.oii_#_eqw_err, gl.oiii_#_eqw, gl.oiii_#_eqw_err,   gl.nii_#_eqw, gl.nii_#_eqw_err, gl.sii_#_eqw, gl.sii_#_eqw_err,  -----------------------------------------------------------------------       -- Emission Line fluxes and errors    gl.h_alpha_flux, gl.h_alpha_flux_err, gl.h_beta_flux, gl.h_beta_flux_err,   gl.h_gamma_flux, gl.h_gamma_flux_err, gl.neiii_#_flux, gl.neiii_#_flux_err,     gl.oiii_#_flux, gl.oiii_#_flux_err, gl.oi_#_flux, gl.oi_#_flux_err,    gl.oii_#_flux, gl.oii_#_flux_err, gl.oiii_#_flux, gl.oiii_#_flux_err,    gl.nii_#_flux, gl.nii_#_flux_err, gl.sii_#_flux, gl.sii_#_flux_err       ----------------------------------------------------------------------- FROM MyDB.GalSpecLines AS g    CROSS APPLY dbo.fGetNearestObjEq(g.ra, g.dec, #) AS x     JOIN PhotoObjAll p ON x.objID = p.objID    JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE p.modelMag_u># and p.modelMag_u<#       and p.modelMag_g># and p.modelMag_g<#       and p.modelMag_r># and p.modelMag_r<#       and p.modelMag_z># and p.modelMag_z<#
SELECT     ra,    dec, dered_u,dered_g,dered_r,dered_i,dered_z    into mydb.Area1Phys3# from PhotoObjAll  Where     ra># and ra<# and dec># and dec<#  And dered_u<# and dered_u>#
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj,cast(str(p.ra,#,#) as float) as ra,cast(str(p.[dec],#,#) as float) as dec,p.r,ISNULL(s.plate,#) as plate,ISNULL(s.mjd,#) as mjd,ISNULL(s.fiberid,#) as fiberid,ISNULL(s.z,#) as redshift,ISNULL(s.zErr,#) as redshiftErr,ISNULL(s.zWarning,#) as zWarning,ISNULL(s.class,#) as class  FROM ..PhotoObj AS p  LEFT OUTER JOIN ..SpecObj s ON p.objID = s.bestObjID  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
SELECT TOP #  s.plate,s.mjd,s.fiberid,s.z,s.zErr,s.zWarning,s.class  FROM ..SpecObj as s  JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID  WHERE s.zWarning = #
SELECT ra_BCG, dec_BCG FROM MyDB.RM_BCG_Lndev_IN  OPEN my_cursor  WHILE(#=#) BEGIN   FETCH NEXT from my_cursor into  @ra_BCG, @dec_BCG     IF (@@fetch_status < #) break     INSERT MYDB.RM_BCG_Lndev_OUT             SELECT  @ra_BCG, @dec_BCG,                 p.ra, p.dec,p.objID,                p.lnLDeV_u, p.lnLDeV_g, p.lnLDeV_r, p.lnLDeV_i, p.lnLDeV_z,                p.lnLExp_u, p.lnLExp_g, p.lnLExp_r, p.lnLExp_i, p.lnLExp_z               FROM   dbo.fGetNearestObjEq(@ra_BCG,@dec_BCG,#/#) n, Galaxy p      JOIN Photoz  As z ON z.objid=p.objid   JOIN SpecObj AS s ON s.bestobjid = p.objid       WHERE n.objid=p.objid          END  CLOSE my_cursor DEALLOCATE my_cursor
CREATE TABLE RM_BCG_Lndev_OUT(  ra_BCG       float  not null,  dec_BCG       float  not null,  ra       float  not null,  dec       float  not null,  objID     bigint not null,   lnLDeV_u real   not null,   lnLDeV_g real   not null,   lnLDeV_r real   not null,   lnLDeV_i real   not null,   lnLDeV_z real   not null,   lnLExp_u real   not null,   lnLExp_g real   not null,   lnLExp_r real   not null,   lnLExp_i real   not null,   lnLExp_z real   not null       );
select p.ObjID, p.ra, p.dec, p.u, p.Err_u, p.g, p.Err_g, p.r, p.Err_r, p.i,p.Err_i, p.z, p.Err_z from photoObj p, dbo.fGetNearbyObjEq(#,#,#) n where p.objID = n.objID AND p.type = #
select * from ProfileDefs
select * from SDSSConstants
select * from SiteConstants
select * from StripeDefs
SELECT DISTINCT p.r FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.r FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE (s.plate=#)
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE (p.run=# AND p.camcol=# AND p.field=# AND p.rerun=#)
SELECT DISTINCT p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE (p.run=# AND p.camcol=# AND p.field=# AND p.rerun=#)
SELECT DISTINCT s.instrument, s.run2d, s.plate, s.mjd, s.fiberID FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
select top # z, ra, dec, bestObjID from specObj where class = &&& and z > # and zWarning = #
SELECT DISTINCT s.instrument, s.run2d, s.plate, s.mjd, s.fiberID FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE (s.plate=# AND s.fiberid=#)
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT DISTINCT p.ra, p.dec, p.objid, p.run, p.rerun, p.camcol, p.field, s.z, s.plate, s.mjd, s.fiberID, s.specobjid, s.run2d, s.instrument FROM PhotoObjAll AS p JOIN SpecObjAll s ON p.objID = s.bestObjID WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra),CONVERT(DECIMAL(#,#), p.modelMag_u) FROM photoObjAll AS p
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra),CONVERT(DECIMAL(#,#), p.modelMag_u),p.u_u FROM photoObjAll AS p
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra), CONVERT(DECIMAL(#,#),p.objid)--,CONVERT(DECIMAL(#,#), p.modelMag_u) FROM photoObjAll AS p
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra)--, CONVERT(DECIMAL(#,#),p.objid)--,CONVERT(DECIMAL(#,#), p.modelMag_u) FROM photoObjAll AS p
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra), CONVERT(DECIMAL(#,#),p.objid),CONVERT(DECIMAL(#,#), p.modelMag_u) FROM photoObjAll AS p
SELECT TOP #   CONVERT(DECIMAL(#,#),p.ra), p.dec, p.modelMag_u FROM photoObjAll AS p
SELECT TOP #   p.ra, p.dec, p.modelMag_u FROM photoObjAll AS p
SELECT TOP #   p.ra, p.dec, p.modelMag_u FROM photoObjAll
SELECT TOP #  s.apogee_id,s.ra, s.dec, s.glon, s.glat,  s.vhelio_avg,s.vscatter,  a.teff,a.logg, a.metals, a.alphafe,  dbo.fApogeeAspcapFlagN(a.aspxcapflag),  dbo.fApogeeStarFlagN(s.starflag) FROM apogeeStar s  JOIN aspcapStar a on a.apstar_id = s.apstar_id WHERE (a.aspxcapflag & dbo.fApogeeAspcapFlag(&&&)) = #   and a.teff > # and a.metals < #
SELECT  TOP # p.apstar_id,     p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
SELECT  TOP # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
select ra,dec,psfMag_u,psfmagerr_u,psfMag_g,psfMagerr_g,psfMag_r,psfMagerr_r,psfMag_i,psfMagerr_i,psfMag_z,psfMagerr_z from PhotoPrimary where ra between # and # and dec between # and # and psfMag_r<#
SELECT    ra,   dec, dered_u,dered_g,dered_r,dered_i,dered_z  into mydb.Area1Phys3#del from PhotoObjAll Where    ra># and ra<# and dec># and dec<# And dered_u<# and dered_u>#
SELECT    ra,   dec, dered_u,dered_g,dered_r,dered_i,dered_z  into mydb.Area1Phys3# from PhotoObjAll Where    ra># and ra<# and dec># and dec<# And dered_u<# and dered_u>#
SELECT    ra,   dec, dered_u,dered_g,dered_r,dered_i,dered_z  into mydb.delete from PhotoObjAll Where    ra># and ra<# and dec># and dec<# And dered_u<# and dered_u>#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
SELECT * FROM dbo.fFootprintEq( #,#,#)
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   MAX(t.TestScore) as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.SchoolYear4Digit, t.TestPeriod, t.TestSubjectGroup, t.TestType, e.GradeLevel UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   &&& as IsMostRecent FROM Enrollment as e LEFT JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   WHERE e.SchoolYear4Digit=#   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   MAX(t.TestScore) as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.SchoolYear4Digit, t.TestPeriod, t.TestSubjectGroup, t.TestType, e.GradeLevel UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   &&& as IsMostRecent FROM Enrollment as e LEFT JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   MAX(t.TestScore) as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.SchoolYear4Digit, t.TestPeriod, t.TestSubjectGroup, t.TestType, e.GradeLevel UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   &&& as IsMostRecent FROM Enrollment as e LEFT JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   t.TestScore as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   &&& as IsMostRecent FROM Enrollment as e LEFT JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT * FROM TestScores
select top # p.ra, p.dec, p.deVRad_r, q.z from galaxy p, dbo.fgetNearByObjEq(#,#,#) n, galSpecInfo q where p.objid=n.objid and p.specObjID=q.specObjID and p.specObjID<># and q.z># and abs(#*(#-q.z))<#
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   t.TestScore as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   t.TestScore as Score,   t.TestDate as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   SUM(p.Hours) as Score,   # as IsMostRecent FROM Enrollment as e JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit   GROUP BY e.SystemStudentID, e.GradeLevel, p.SchoolYear4digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   t.TestScore as Score,   t.TestDate as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID AND e.SchoolYear4Digit=t.SchoolYear4Digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   p.Hours as Score,   p.EventDate as IsMostRecent FROM Enrollment as e JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID AND e.SchoolYear4Digit=p.SchoolYear4Digit UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID AND e.SchoolYear4Digit=s.SchoolYear4Digit
SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   e.SchoolYear4Digit as SchoolYear4Digit,   t.TestPeriod as Period,   t.TestSubjectGroup as AssessmentSubject,   &&& as MetricSource,   t.TestType as MetricName,   t.TestScore as Score,   t.TestDate as IsMostRecent FROM Enrollment as e JOIN TestScores as t   ON e.SystemStudentID = t.SystemStudentID UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   p.SchoolYear4digit as SchoolYear4Digit,   &&& as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   p.Hours as Score,   p.EventDate as IsMostRecent FROM Enrollment as e JOIN ParentEngagement as p   ON e.SystemStudentID = p.StudentID UNION SELECT   e.SystemStudentID as StudentID,   e.GradeLevel as EnrollmentGrade,   s.SchoolYear4digit as SchoolYear4Digit,   s.Period as Period,   &&& as AssessmentSubject,   &&& as MetricSource,   &&& as MetricName,   s.Score as Score,   &&& as IsMostRecent FROM Enrollment as e JOIN EmotionalScreener as s   ON e.SystemStudentID = s.StudentID
SELECT    ts.SystemStudentID &&&   e.GradeLevel &&&,   ts.SchoolYear4Digit &&&,   CAST(ts.TestPeriod AS varchar(#)) &&&,   ts.TestSubjectGroup &&&,   &&& AS &&&,    ts.TestType &&&,   ts.TestScore AS &&&   FROM Enrollment e    INNER JOIN TestScores ts    ON e.SystemStudentID = ts.SystemStudentID    INNER JOIN ParentEngagement pe     ON pe.StudentID = ts.SystemStudentID     INNER JOIN EmotionalScreener es     ON es.StudentID = pe.StudentID        union all   SELECT      ts.SystemStudentID &&&,    e.GradeLevel &&&,     pe.SchoolYear4Digit &&&,      CAST(&&& AS varchar(#)) &&&,       &&& AS &&&,        &&& AS &&&,        &&& &&&,         # AS &&&   FROM Enrollment e    INNER JOIN TestScores ts    ON e.SystemStudentID = ts.SystemStudentID    INNER JOIN ParentEngagement pe     ON pe.StudentID = ts.SystemStudentID     INNER JOIN EmotionalScreener es     ON es.StudentID = pe.StudentID
INSERT INTO #upload values
INSERT INTO #upload values
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec,  passive.z as z_noqso, passive.zerr as z_noqso_err,  passive.logmass as passive_logmass,  starforming.logmass as starforming_logmass,  pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive  JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid  JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
INSERT INTO #upload values
