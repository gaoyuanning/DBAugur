SELECT TOP # p.objid,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.objID, p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top # &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n JOIN PhotoPrimary p ON n.objID=p.objID
SELECT  &&& + cast(p.objId as varchar(#)) + &&& + cast(p.objId as varchar(#)) + &&& as objID,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT  &&& + cast(p.apstar_id as varchar(#)) + &&& + cast(p.apstar_id as varchar(#)) + &&& as apstar_id,    p.apogee_id,p.ra, p.dec, p.glon, p.glat,    p.vhelio_avg,p.vscatter,    a.teff,a.logg,a.metals    FROM apogeeStar p    JOIN fGetNearbyApogeeStarEq(#,#,#) n on p.apstar_id=n.apstar_id    JOIN aspcapStar a on a.apstar_id = p.apstar_id
select * from zooNoSpec where objid=#
select description from DBObjects where name=&&&
select text from DBObjects where name=&&&
select [enum], [name], [type], [length], [unit], [ucd], [description] from dbo.fDocColumns(&&&) ORDER BY [columnID]
select name, type from DBObjects where type=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where type=&&& and access=&&& and name NOT IN (&&&, &&&) order by name
select name, type from DBObjects where name like &&& or name like &&& order by name
select * from PhotoObjAll where objId=#
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd,distance FROM PhotoObj as p JOIN dbo.fGetNearbyObjEq(#,#,#) AS R ON P.objID=R.objID ORDER BY distance
select * from galSpecIndx where specObjId=#
select * from wise_xmatch x join wise_allsky a on x.wise_cntr=a.cntr where x.sdss_objid=#
SELECT  p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
select or (#,#)=(select*from(select name_const(CHAR(#,#,#,#,#,#,#,#,#),#),name_const(CHAR(#,#,#,#,#,#,#,#,#),#))a) -- and #=#
select
select AND #=#
select and #=#
select and #>#
select * from zoo2Stripe8#Coadd2 where dr8objid=#
SELECT up_id, dbo.fGetNearestSpecObjIdEq(up_ra,up_dec,#) as SpecobjId   FROM #upload WHERE dbo.fGetNearestSpecObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&,&&&, @log=#, @filter=#
SELECT ra,dec,u,Err_u,g,Err_g,r,Err_r,i,Err_i,z,Err_z FROM PhotoObj WHERE ra BETWEEN # AND # AND dec BETWEEN # and # AND g<#
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID
select * from fDocFunctionParams(&&&)
select * from XCRedshift where specObjId=#
SELECT TOP # rerun, camcol, field FROM PhotoObj WHERE ra BETWEEN # and # AND dec BETWEEN # and #
select * from zoo2Stripe8#Normal where dr8objid=#
SELECT prim.bestObjId, prim.mjd AS PrimMJD, prim.plate AS PrimPlate,   other.mjd AS OtherMJD, other.plate AS OtherPlate,  prim.z AS PrimZ, other.z AS OtherZ, plate.programname FROM SpecObjAll prim  JOIN SpecObjAll other ON prim.bestObjId = other.bestObjId  JOIN platex AS plate ON other.plate = plate.plate AND other.mjd = plate.mjd WHERE other.bestObjId > #  AND prim.sciencePrimary = #  AND other.sciencePrimary = #  AND prim.z > # ORDER BY prim.bestObjId
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap  where tableName=&&& order by [indexMapId]
select * from PhotoTag where objId=#
select description from DataConstants where field=&&&  and [name]=&&&
select name, type, description from DBObjects where  type in (&&&,&&&) and access=&&& and UPPER(name) like &&&
SELECT t.thingid, t.ndetect,t.ra,t.dec,d.objid,p.mjd, p.psfFlux_u, p.psfFlux_g, p.psfFlux_r, p.psfFlux_i,p.psfFlux_z, p.psfFluxIvar_u,p.psfFluxIvar_g,p.psfFluxIvar_r,p.psfFluxIvar_i,p.psfFluxIvar_z FROM thingIndex AS t  JOIN detectionindex AS d ON t.thingid = d.thingid JOIN specobj AS s ON t.objid = s.bestobjid  JOIN photoobjall AS p ON p.objid = d.objid  where t.thingid=#
SELECT TOP #   objID, ra, dec,   sqrt( power(rowv,#) + power(colv, #) ) as velocity   FROM PhotoObj   WHERE   (power(rowv,#) + power(colv, #)) > #   AND rowv != # and colv != #
select * from dbo.fDocColumns(&&&)
SELECT TOP #  p.run, p.rerun, p.camcol, p.field  FROM PhotoObjDR7 AS p  WHERE p.dr7objid=#
select * from SpecObjAll where specObjId=#
select * from SpecLine where specObjId=#
select * from SpecLineIndex where specObjId=#
select * from ELRedshift where specObjId=#
select * from Field where fieldId=#
select * from Frame where fieldId=#
select * from zooSpec where objid=#
select distinct parent from DBViewCols where viewname=&&&
SELECT p.ra,p.dec,p.raErr,p.decErr,p.objId,p.run,p.rerun,p.camcol,p.field,dbo.fPhotoModeN(mode) as mode,nChild,dbo.fPhotoTypeN(p.type) as type,clean,flags,psfMag_u,psfMag_g,psfMag_r,psfMag_i,psfMag_z,psfMagErr_u,psfMagErr_g,psfMagErr_r,psfMagErr_i,psfMagErr_z,modelMag_u,modelMag_g,modelMag_r,modelMag_i,modelMag_z,modelMagErr_u,modelMagErr_g,modelMagErr_r,modelMagErr_i,modelMagErr_z,extinction_u,extinction_g,extinction_r,extinction_i,extinction_z,mjd from PhotoObj as p JOIN dbo.fGetObjFromRectEq(#,#,#,#) AS R ON P.objID=R.objID
select p.ra,p.dec FROM PhotoObj AS p WHERE  p.objid=#
select p.ra,p.dec FROM PhotoObj AS p WHERE  p.objid IS #
select * from emissionLinesPort where specObjId=#
select * from zoo2Stripe8#Coadd1 where dr8objid=#
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and photoErrorClass=#   and nnCount>#   and zErr BETWEEN # and #
select * from PhotozRF where objid=#
select distinct c.field, o.description  	from DataConstants c, DBObjects o 	where o.type=&&& and o.name = c.field
select * from DataConstants order by field, value
SELECT (htmID / power(#,#)) as htm_# ,   avg(ra) as ra,   avg(dec) as [dec],   count(*) as pop   FROM Galaxy   WHERE (#*u - #*g - #*i) < #   and r < #   group by (htmID /power(#,#))
select * from sppLines where specObjId=#
select * from Photoz where objid=#
select top # * from galaxy
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT  top #   p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID
SELECT top # p.objID, p.run, p.rerun, p.camcol, p.field, p.obj, p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z, p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p WHERE n.objID=p.objID
SELECT *
select ra,dec,l,b, #*LOG1#(psfFlux_u) + # - extinction_u + # as psfPogCorr_u, #*LOG1#(psfFlux_g) + # - extinction_g + # as psfPogCorr_g, #*LOG1#(psfFlux_r) + # - extinction_r + # as psfPogCorr_r, #*LOG1#(psfFlux_i) + # - extinction_i + # as psfPogCorr_i, #*LOG1#(psfFlux_z) + # - extinction_z + # as psfPogCorr_z, #/SQRT(psfFluxIvar_u)/psfFlux_u as psfPogErr_u, #/SQRT(psfFluxIvar_g)/psfFlux_g as psfPogErr_g, #/SQRT(psfFluxIvar_r)/psfFlux_r as psfPogErr_r, #/SQRT(psfFluxIvar_i)/psfFlux_i as psfPogErr_i, #/SQRT(psfFluxIvar_z)/psfFlux_z as psfPogErr_z from star as s where ra between # and # and dec between # and # and s.clean=# and psfFlux_u > # and psfFlux_g > # and psfFlux_r > # and psfFlux_i > # and psfFlux_z > # and psfMagErr_u < # and psfMagErr_g < # and psfMagErr_r < # and psfMagErr_i < # and psfMagErr_z < #
select name, description from DBObjects where access=&&& and type=&&& and access=&&& order by name
select * from galSpecLine where specObjId=#
select * from Photoz2 where objid=#
select * from ProfileDefs
select [indexMapID],[code],[type],[tableName],[fieldList],[foreignKey] from IndexMap order by [tableName],[indexMapId]
select name, description from DBObjects where access=&&& and type=&&& order by name
SELECT TOP # objId,z,zErr,absMagR FROM Photoz WHERE  z BETWEEN # and #  and nnIsInside=#   and nnCount>#   and zErr BETWEEN # and #
SELECT sp.ra,sp.dec,sp.z,   sp.psfmag_i-sp.extinction_i AS mag_i,  peak,integr  FROM SpecPhoto AS sp   INNER JOIN FIRST AS f ON sp.objid = f.objid  WHERE   class = &&&
SELECT TOP #   g,   run,   rerun,   camcol,   field,   objID   FROM Galaxy   WHERE ( (g <= #)   and (u - g >= #)   and (u - g < #)   and (g - r >= #)   and (g - r < #)   and (r - i >= #)   and (r - i < #)   and (i - z >= #)   and (i - z < #) )
SELECT TOP # specObjID, z  FROM SpecObj  WHERE class = &&& AND zWarning = #
SELECT top # objID, ra, dec,  (CASE WHEN q.type IS NULL THEN &&& ELSE &&& END) AS found FROM PhotoObj AS p OUTER APPLY dbo.fFootprintEq(ra,dec,#) AS q WHERE (ra BETWEEN # AND #) AND (dec BETWEEN # AND #)
SELECT TOP # fld.run, fld.avg_sky_muJy, fld.runarea AS area, ISNULL(fp.nfirstmatch,#)  FROM (   SELECT run, sum(primaryArea) AS runarea,  #e6*avg(power(cast(#. as float),#*sky_r)) as avg_sky_muJy  FROM Field  GROUP BY run  ) AS fld  LEFT OUTER JOIN (   SELECT p.run, count(*) AS nfirstmatch  FROM FIRST AS fm  INNER JOIN photoprimary as p  ON p.objid=fm.objid  GROUP BY p.run  ) AS fp  ON fld.run=fp.run  ORDER BY fld.run
select u.*, p.objId, ltrim(str(p.ra,#,#)) as ra, ltrim(str(p.dec,#,#)) as dec, dbo.fPhotoTypeN(p.type) as type from #x x, #upload u, photoTag p  where u.up_id = x.up_id and x.objID=p.objID and p.mode=# order by x.up_id
select  	r.run, r.rerun, r.camcol, r.field, f.fieldId, r.stripe, r.strip,  	r.ra, r.dec, r.raMin, r.raMax, r.decMin, r.decMax,  	r.mu, r.nu, r.incl, r.node, 	r.a, r.b, r.c, r.d, r.e, r.f,  	f.quality, 	f.a_u, f.b_u, f.c_u, f.d_u, f.e_u, f.f_u, 	f.a_g, f.b_g, f.c_g, f.d_g, f.e_g, f.f_g, 	f.a_r, f.b_r, f.c_r, f.d_r, f.e_r, f.f_r, 	f.a_i, f.b_i, f.c_i, f.d_i, f.e_i, f.f_i, 	f.a_z, f.b_z, f.c_z, f.d_z, f.e_z, f.f_z,   dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as u_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as g_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as r_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as i_url, 	dbo.fGetUrlFitsCFrame(f.fieldId,&&&) as z_url   from dbo.fGetNearbyFrameEq(#,#,#,#) n, Frame r, Field f   where f.fieldId=r.fieldId and r.fieldId=n.fieldId and r.zoom=#
select name,ucd from dbcolumns where tablename = &&& and ( name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&& or  name like &&&)
select top # p.objid,p.ra,p.dec,dbo.fPhotoTypeN(p.type) as type,u,g,r,i,z,Err_u,Err_g,Err_r,Err_i,Err_z,psfMag_u,psfMagErr_u,psfMag_g,psfMagErr_g,psfMag_r,psfMagErr_r,psfMag_i,psfMagErr_i,psfMag_z,psfMagErr_z  from PhotoPrimary p, dbo.fGetNearbyObjEq(#,#,#) n  where p.objId=n.objId
SELECT TOP # p.objid, p.ra, p.dec, ISNULL(s.specobjid,#) AS specobjid, ISNULL(s.z, #) AS z  FROM Galaxy AS p LEFT OUTER JOIN SpecObj s ON s.bestObjID = p.objID  WHERE  p.u BETWEEN # AND # AND p.g BETWEEN # AND #
SELECT TOP # objid,ra,dec,   flags,   flags & # AS flags_lo,   (flags/power(cast(# as bigint),#)) & # AS flags_hi  FROM PhotoObj
SELECT count(*) as &&&,   sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type=#) then # else # end) as &&&,  sum( case when (Type not in (#,#)) then # else # end) as &&&  FROM PhotoPrimary   WHERE (( u - g > #) or (u > #) )   and ( i between # and # )   and ( g - r > # )   and ( (r - i < # + # * (g - r - #)) or (g - r > # ) )  and ( i - z < # )
SELECT TOP #   obj.run, obj.camCol, str(obj.field, #) as field,  str(obj.rowc, #, #) as rowc, str(obj.colc, #, #) as colc,  str(dbo.fObj(obj.objId), #) as id,   str(obj.psfMag_g - #*obj.extinction_g, #, #) as g,  str(obj.psfMag_r - #*obj.extinction_r, #, #) as r,  str(obj.psfMag_i - #*obj.extinction_i, #, #) as i,  str(obj.psfMag_z - #*obj.extinction_z, #, #) as z,  str(#*distance, #, #) as D,  dbo.fField(neighborObjId) as nfield,  str(dbo.fObj(neighborObjId), #) as nid FROM  (SELECT obj.objId,  run, camCol, field, rowc, colc,  psfMag_u, extinction_u,  psfMag_g, extinction_g,  psfMag_r, extinction_r,  psfMag_i, extinction_i,  psfMag_z, extinction_z,  NN.neighborObjId, NN.distance  FROM PhotoObj as obj  JOIN neighbors as NN on obj.objId = NN.objId  WHERE  #*NN.distance between # and # and  NN.mode = # and NN.neighborMode = # and  run = # and camCol = # and  obj.type = # and (obj.flags & #) = # and  nchild = # and obj.psfMag_i < # and  (g - r between # and # and r - i between # and #)  ) as obj  JOIN PhotoObj as nobj on nobj.objId = obj.neighborObjId  WHERE   nobj.run = obj.run and  (abs(obj.psfMag_g - nobj.psfMag_g) < # or  abs(obj.psfMag_r - nobj.psfMag_r) < # or  abs(obj.psfMag_i - nobj.psfMag_i) < #)
SELECT TOP # P.ObjID
SELECT TOP # u, g, r, i, z FROM Galaxy   WHERE   (htmid*# & #)   < (# * #)
SELECT TOP # *
SELECT TOP #   run,   camCol,   rerun,   field,   objID,   ra,   dec   FROM Galaxy   WHERE ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) > #   and ( flags & (dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)   | dbo.fPhotoFlags(&&&)) ) != dbo.fPhotoFlags(&&&)   and ( (flags & dbo.fPhotoFlags(&&&) = #)   and petroR5#_i > #)
SELECT TOP #   modelMag_u, modelMag_g, objID   FROM Galaxy   WHERE   ( Flags & (dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&) +   dbo.fPhotoFlags(&&&)) ) = #   and petroRad_r < #   and ((modelMag_u - modelMag_g) - (psfMag_u - psfMag_g)) < #
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Galaxy  WHERE  ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT TOP # s.ra, s.dec, s.psfmag_g, (s.psfmag_g - s.psfmag_r) as gmr,  pm.pmra, pm.pmdec, pm.pmraerr, pm.pmdecerr, pm.pml, pm.pmb FROM star s  JOIN propermotions pm ON s.objid = pm.objid WHERE  s.ra between #-# and #+#  and s.dec between #-# and #+#
SELECT TOP # t.thingid, t.ndetect, d.objid, p.psfMag_r, p.psfMagerr_r  FROM thingIndex AS t JOIN detectionindex AS d ON t.thingid = d.thingid JOIN Star AS p ON d.objid = p.objid WHERE t.ndetect > #
SELECT top # so.bestobjid, so.specobjid, so.plate, so.mjd, so.fiberid,  sp.teffadop, sp.fehadop, sp.loggadop, sp.snr, sp.flag   FROM specobjall so  JOIN sppparams sp ON so.specobjid = sp.specobjid and so.sciencePrimary=#  WHERE sp.teffadop > # and sp.teffadop < #  and fehadop > # and fehadop < #  and loggadop > # and loggadop < #  and sp.flag like &&&  and sp.snr > #
SELECT sl.plate, sl.mjd, sl.fiber,  sl.caIIKside, sl.caIIKerr, sl.caIIKmask,  sp.fehadop, sp.fehadopunc,sp. fehadopn,  sp.loggadopn,sp.loggadopunc,sp.loggadopn  FROM sppLines AS sl  JOIN sppParams AS sp ON sl.specobjid = sp.specobjid WHERE  fehadop < # and fehadopunc between # and #  AND fehadopn > #
SELECT TOP # s1.objID as s1, s2.objID as s2   FROM Star AS S1   JOIN Neighbors AS N ON S1.objID = N.objID   JOIN Star AS S2 ON S2.objID = N.NeighborObjID   WHERE   N.NeighborType = dbo.fPhotoType(&&&)   and N.distance < .#   and ((S1.u - S1.g) < # )   and (S1.g - S1.r) < #   and (S1.r - S1.i) > #   and (S1.i - S1.z) > #
SELECT TOP # run,   camCol,   rerun,   field,   objID,   u, g, r, i, z,   ra, dec   FROM Star   WHERE u - g < #   and g - r < #   and r - i > #   and i - z > #
SELECT TOP # u,g,r,i,z,ra,dec, flags_r  FROM Star  WHERE   ra BETWEEN # and # AND dec BETWEEN # and #  AND ((flags_r & #) != #)  AND ((flags_r & #) = #)   AND (((flags_r & #) = #) or (psfmagerr_r <= #))  AND (((flags_r & #) = #) or (flags_r & #) = #)
SELECT plate.programname, class,  COUNT(specObjId) AS numObjs  FROM SpecObjAll JOIN PlateX AS plate ON plate.plate = specObjAll.plate GROUP BY plate.programname, class ORDER BY plate.programname, class
SELECT TOP # G.ObjID, G.u, G.g, G.r, G.i, G.z   FROM Galaxy AS G   JOIN Star AS S   ON G.parentID = S.parentID   WHERE G.parentID > #
SELECT first.plate, other.plate,   COUNT(DISTINCT other.mjd) + COUNT(DISTINCT first.mjd) AS nightsObserved,   otherPlate.programname, count(DISTINCT other.bestObjID) AS objects  FROM SpecObjAll first  JOIN SpecObjAll other ON first.bestObjID = other.bestObjID  JOIN PlateX AS firstPlate ON firstPlate.plate = first.plate  JOIN PlateX AS otherPlate ON otherPlate.plate = other.plate  WHERE first.scienceprimary = # AND other.scienceprimary = #   AND other.bestObjID > #  GROUP BY first.plate, other.plate, otherPlate.programname  ORDER BY nightsObserved DESC, otherPlate.programname,   first.plate, other.plate
SELECT TOP # specObjID
SELECT top #   run, rerun, camcol, field,   mjd_r as primary_mjd  FROM Field WHERE  mjd_r > #
SELECT top # objID, ra, dec, g, clean FROM PhotoObj WHERE CLEAN=#
SELECT TOP # objID
SELECT TOP #   objID,   ra,   dec,   psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z,   dbo.fPhotoFlagsN(flags)   FROM Galaxy   WHERE   (flags & (dbo.fPhotoFlags(&&&))) != #
SELECT class, count(*)  FROM SpecObj  GROUP BY class
SELECT top # objid, ra, dec, psfmag_i-extinction_i AS mag_i, psfmag_r-extinction_r AS mag_r, z  FROM SpecPhoto  WHERE   (class = &&&)
SELECT TOP # sp.objID,   sp.ra,   sp.dec,   sp.mjd,   px.taiBegin,   px.taiEnd,   sp.fiberID,   sp.z   FROM specPhoto AS sp   JOIN plateX AS px ON sp.plateID = px.plateID   WHERE   (sp.class=&&&)   AND sp.z > #
SELECT objID, ra, dec  FROM PhotoObj  WHERE (ra between # and #) and (dec between # and #)
SELECT TOP # objID, cModelMag_g   FROM Galaxy   WHERE   cModelMag_g between # and #
select specClass, count(z) as num_redshift from specObj where z BETWEEN # and # group by specClass
SELECT TOP #   r.run,   r.rerun,   f.camCol,   f.field,   p.objID,   p.ra,   p.dec,   p.modelMag_r,   f.psfWidth_r   FROM   PhotoTag AS p   JOIN Field AS f ON f.fieldid = p.fieldid   JOIN Run AS r ON f.run = r.run   WHERE mode=#   and f.psfWidth_r > #   and p.modelMag_r < #.   and r.stripe = #
SELECT TOP # G.objID, GN.distance  FROM Galaxy as G  JOIN dbo.fGetNearbyObjEq(#.,#, #) AS GN  ON G.objID = GN.objID  ORDER BY distance
SELECT TOP #   objID, ra ,dec   FROM   PhotoPrimary   WHERE   ra > # and ra < #   AND dec > # and dec < #
select * from sppParams where specObjId=#
select * from galSpecInfo where specObjId=#
select   z, ra, dec, bestObjID   from   specObj   where   class = &&&   and zWarning = #   and ra<#  and ra>#  and dec<#  and dec>#  and z >#  and z <#
select   z, ra, dec, bestObjID   from   specObj   where   class = &&&   and zWarning = #   and ra<#  and ra>#  and dec<#  and dec>#  and z >#e-#  and z <#
SELECT ra,dec,u,Err_u,g,Err_g,r,Err_r,i,Err_i,z,Err_z FROM PhotoObj WHERE ra BETWEEN # AND # AND dec BETWEEN # and # AND g<# AND Err_g<#
select s.z, p.petroRad_z   from photoObj p   JOIN specObj s ON s.bestObjID = p.objID   where s.bestObjID = #
SELECT TOP # s.plate,s.mjd,s.fiberid FROM BESTDR9..SpecObj as s 	JOIN dbo.fGetNearbySpecObjEq(#,#,#) AS b ON b.SpecobjID = S.SpecobjID WHERE  s.zWarning = #
select * from stellarMassStarformingPort where specObjId=#
SELECT u.up_col0 as [col0],     &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,    p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z    FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p    WHERE n.objID=p.objID  AND p.u BETWEEN # AND #
SELECT u.up_col0 as [col0],     p.objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
SELECT     objid,ra,dec,     psfmag_u, psfmag_g, psfmag_r, psfmag_i,     extinction_u, extinction_g, extinction_r, extinction_i FROM Star where ra between # and #     and dec between # and #
SELECT mangaID,manga_tileid,ifudesignsize 'A=#
SELECT mangaID,manga_tileid,ifudesignsize
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  WHERE (p.i - p.z) > # AND (p.i - p.z) < # AND p.u > #
SELECT s.z AS z, petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r as M FROM SpecObj s INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID WHERE s.z BETWEEN # AND #    AND objTypeName = &&&    AND petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r > #    AND petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r <#
SELECT s.z AS z, petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r AS M     FROM SpecObj s     INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID     WHERE s.z BETWEEN # AND #         AND objTypeName = &&&         AND petroMag_r > #         AND petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r < # )  SELECT M FROM q WHERE M > # GROUP BY M ORDER BY #
SELECT s.z AS z, petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r AS M     FROM SpecObj s     INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID     WHERE s.z BETWEEN # AND #         AND objTypeName = &&&         AND petroMag_r > #         AND petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r < # )  SELECT FLOOR(M*#)/# AS M_hist, LOG(COUNT(*)) AS count_hist, #/(SQRT(COUNT(*))) AS sigma_M FROM q WHERE M > # GROUP BY FLOOR(M*#)/# ORDER BY #
SELECT FLOOR(petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r) as M, COUNT(*) as count FROM SpecObj s INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID WHERE s.z BETWEEN # AND #    AND objTypeName = &&& GROUP BY FLOOR(petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r) ORDER BY #
SELECT TOP # s.z AS z, petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r as M FROM SpecObj s INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID WHERE s.z BETWEEN # AND #    AND objTypeName = &&&
SELECT TOP # s.z AS z, petroMag_r as m_r, petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r as M, ROW_NUMBER() OVER (ORDER BY s.z) as temp,  NTILE(#) OVER (ORDER BY s.z) as nt FROM SpecObj s INNER JOIN PhotoObj ON s.bestObjID=PhotoObj.ObjID WHERE s.z BETWEEN # AND #    AND petroMag_r-#*log1#(dbo.fCosmoDl(s.z))#-extinction_r < #    AND objTypeName = &&& ), b AS ( SELECT z, m_r, M, ROW_NUMBER() OVER (PARTITION BY nt ORDER BY M) as rn FROM q )  SELECT z, m_r, M FROM b WHERE rn = #
SELECT #*FLOOR(sppParams.l/#) AS l, AVG(z / cos(RADIANS(sppParams.b))) AS z, STDEV(z / cos(RADIANS(sppParams.b))) / SQRT(COUNT(*)) AS err FROM SpecObj s INNER JOIN sppParams ON s.specObjID=sppParams.SpecObjID WHERE s.z between # and #   and Feha between # and #   and sppParams.b between # and # GROUP BY #*FLOOR(sppParams.l/#) ORDER BY #
SELECT FLOOR(Feha*#)/# AS FeH, COUNT(*) AS count FROM SpecObj s INNER JOIN sppParams ON s.specObjID=sppParams.SpecObjID WHERE s.z between # and #   and Feha > #   and sppParams.b > # GROUP BY FLOOR(Feha*#)/# ORDER BY #
SELECT TOP # plateifu, 'A=#
SELECT TOP # plateifu,
SELECT u.up_name as [name], s.specobjid, s.ra, s.dec, s.plate, s.mjd, s.fiberid,  p.objID, p.run, p.rerun, p.camcol, p.field FROM #upload u       JOIN #x x ON x.up_id = u.up_id       JOIN SpecObjAll s ON s.specObjID = x.specObjID       JOIN PhotoTag p ON p.objID = s.bestObjID
SELECT  top # p.objid,    p.run, p.rerun, p.camcol, p.field, p.obj,    p.type, p.ra, p.dec, p.u,p.g, p.r, p.i, p.z,    p.Err_u, p.Err_g, p.Err_r, p.Err_i, p.Err_z    FROM fGetObjFromRect(#,#,#,#) n,   PhotoPrimary p    WHERE n.objID=p.objID
select top # p.objid, p.ra, p.dec from star p, dbo.fgetNearByObjEq(#,#,#) n where p.objid=n.objid
SELECT p.objID,p.ra,p.dec,p.dered_u,p.dered_g,p.dered_r,p.dered_i,p.dered_z,p.clean,p.flags,z.z as photoz,z.zErr as photozErr, s.specObjID as specObjID,s.z as specz,s.zErr as speczErr,   dbo.fPhotoFlagsN(flags) as note  from Galaxy  as p    LEFT OUTER JOIN photoz as z ON z.ObjID = p.ObjID LEFT OUTER JOIN specObjAll as s ON s.bestObjID = p.ObjID    WHERE        p.ObjID = #
select ra,dec from specObj where ra BETWEEN # and # AND dec BETWEEN # and #
select * from stellarMassPCAWiscM1# where specObjId=#
INSERT INTO #upload values ( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#
INSERT INTO #upload values
SELECT up_id, dbo.fGetNearestObjIdEq(up_ra,up_dec,#) as objId   FROM #upload WHERE dbo.fGetNearestObjIdEq(up_ra,up_dec,#) IS NOT NULL  EXEC spExecuteSQL &&&'<a target=INFO href=http://skyserver.sdss.org/DR1#/en/tools/explore/obj.aspx?id=&&& + cast(x.objId as varchar(#)) + &&&>&&&+ cast(x.objId as varchar(#)) + &&&</a>&&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,  dbo.fPhotoTypeN(p.type) as type,  p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #upload u  JOIN #x x ON x.up_id = u.up_id  JOIN PhotoTag p ON p.objID = x.objID  ORDER BY x.up_id  &&&#', @log=#, @filter=#
INSERT INTO #upload values
INSERT INTO #upload values ( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,# ),( #,#,#,#
INSERT INTO #upload values
SELECT u.up_col0 as [col0],     p.objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as     p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
INSERT INTO #upload values
select * from stellarMassFSPSGranWideDust where specObjId=#
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.specClass, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
SELECT DISTINCT p.ra, p.dec, p.clean, p.u, p.g, p.r, p.i, p.z FROM PhotoObjAll AS p WHERE ((p.ra between # and #) and (p.dec between # and #))
SELECT u.up_name as [name],     &&& + cast(x.objId as varchar(#)) + &&&+ cast(x.objId as varchar(#)) + &&& as objID, p.ra, p.dec, p.run, p.rerun, p.camcol, p.field,    dbo.fPhotoTypeN(p.type) as type,    p.modelMag_u, p.modelMag_g, p.modelMag_r, p.modelMag_i, p.modelMag_z  FROM #x x, #upload u, PhotoTag p WHERE u.up_id = x.up_id and x.objID=p.objID  ORDER BY x.up_id
select name, type, description from DBObjects where  type in (&&&,&&&) and UPPER(name) like &&&
SELECT TOP # p.run,p.rerun,p.camCol,p.field,p.obj,str(p.ra,#,#) as ra,str(p.[dec],#,#) as dec,p.r,p.modelMagErr_u,p.modelMagErr_g,p.modelMagErr_r,p.modelMagErr_i,p.modelMagErr_z,str(p.u - p.g,#,#) as ugModelColor,str(p.g - p.r,#,#) as grModelColor,str(p.i - p.z,#,#) as izModelColor,p.b,p.camcol,p.clean,p.colc_u,p.colcErr,p.colcErr_g,p.colcErr_r,p.colcErr_u,p.colv,p.colvErr,p.dec,p.dered_i,p.dered_u,p.dered_z,p.deVAB_g,p.deVAB_z,p.deVABErr_z,p.deVMag_i,p.deVMag_r,p.deVMag_z,p.deVMagErr_g,p.deVMagErr_i,p.deVMagErr_u,p.deVPhi_g,p.deVPhi_i,p.deVPhi_u,p.deVPhiErr_g,p.deVPhiErr_i,p.deVPhiErr_u,p.deVRad_r,p.deVRadErr_z,p.err_g,p.err_i,p.err_r,p.expAB_g,p.expAB_i,p.expAB_u,p.expAB_z,p.expABErr_g,p.expABErr_u,p.expABErr_z,p.expMag_g,p.expMag_r,p.expMag_u,p.expMag_z,p.expMagErr_g,p.expMagErr_i,p.expMagErr_u,p.expPhi_i,p.expPhiErr_g,p.expPhiErr_u,p.expPhiErr_z,p.expRad_g,p.expRad_i,p.expRad_u,p.expRad_z,p.expRadErr_g,p.expRadErr_i,p.expRadErr_r,p.extinction_g,p.extinction_u,p.fiberMag_g,p.fiberMagErr_g,p.fiberMagErr_r,p.fieldID,p.flags,p.flags_g,p.fracDeV_g,p.fracDeV_i,p.htmID,p.i,p.insideMask,p.isoA_i,p.isoA_r,p.isoAErr_r,p.isoAErr_u,p.isoAErr_z,p.isoAGrad_g,p.isoAGrad_i,p.isoAGrad_u,p.isoB_g,p.isoB_i,p.isoB_u,p.isoB_z,p.isoBErr_r,p.isoBErr_z,p.isoBGrad_i,p.isoBGrad_r,p.isoColc_g,p.isoColc_i,p.isoColc_u,p.isoColcErr_g,p.isoColcErr_r,p.isoColcErr_u,p.isoColcErr_z,p.isoColcGrad_r,p.isoColcGrad_z,p.isoPhi_g,p.isoPhi_z,p.isoPhiErr_i,p.isoPhiErr_r,p.isoPhiGrad_g,p.isoPhiGrad_r,p.isoPhiGrad_z,p.isoRowc_u,p.isoRowc_z,p.isoRowcErr_g,p.isoRowcGrad_i,p.isoRowcGrad_r,p.lnLDeV_g,p.lnLDeV_z,p.lnLExp_i,p.lnLExp_r,p.lnLExp_u,p.lnLStar_i,p.lnLStar_z,p.loadVersion,p.mCr4_i,p.mCr4_u,p.mCr4_z,p.mCr4PSF_g,p.mCr4PSF_i,p.mCr4PSF_u,p.mCr4PSF_z,p.mE1_g,p.mE1_r,p.mE1_u,p.mE1_z,p.mE1E1Err_g,p.mE1E1Err_u,p.mE1E2Err_i,p.mE1E2Err_u,p.mE1PSF_g,p.mE1PSF_r,p.mE1PSF_u,p.mE1PSF_z,p.mE2_z,p.mE2E2Err_g,p.mE2E2Err_u,p.mE2E2Err_z,p.mE2PSF_g,p.mE2PSF_i,p.mE2PSF_r,p.modelMag_g,p.modelMag_z,p.mRrCc_i,p.mRrCc_r,p.mRrCc_u,p.mRrCcErr_g,p.mRrCcErr_r,p.mRrCcErr_z,p.mRrCcPSF_i,p.mRrCcPSF_z,p.nProf_i,p.nProf_z,p.offsetDec_g,p.offsetDec_u,p.offsetRa_g,p.offsetRa_i,p.offsetRa_r,p.offsetRa_z,p.petroMag_r,p.petroMag_u,p.petroMagErr_g,p.petroMagErr_i,p.petroMagErr_u,p.petroMagErr_z,p.petroR5#_g,p.petroR5#_r,p.petroR5#Err_r,p.petroR5#Err_u,p.petroR9#_g,p.petroR9#_i,p.petroR9#_z,p.petroR9#Err_g,p.petroR9#Err_i,p.petroR9#Err_r,p.petroR9#Err_u,p.petroR9#Err_z,p.petroRadErr_z,p.probPSF,p.probPSF_g,p.probPSF_i,p.probPSF_z,p.psfMag_g,p.psfMag_r,p.psfMag_z,p.psfMagErr_u,p.q_g,p.q_r,p.q_u,p.qErr_r,p.qErr_z,p.raDecCorr,p.rho,p.rowc,p.rowc_g,p.rowc_i,p.rowcErr_g,p.rowvErr,p.secTarget,p.seguePrimTarget,p.skyErr_g,p.skyErr_i,p.skyErr_r,p.status,p.texture_i,p.texture_r,p.type_g,p.type_z,p.u,p.u_i,p.u_r,p.u_u,p.uErr_g,p.uErr_r,p.uErr_z,p.z,ISNULL(s.plate,#) as plate,ISNULL(s.mjd,#) as mjd,ISNULL(s.fiberid,#) as fiberid,ISNULL(s.z,#) as z,ISNULL(s.zErr,#) as zErr,ISNULL(s.zWarning,#) as zWarning,ISNULL(s.specClass,#) as specClass,ISNULL(str(s.ra,#,#),#) as ra,ISNULL(str(s.[dec],#,#),#) as dec,ISNULL(s.cx,#) as cx,ISNULL(s.cz,#) as cz,ISNULL(s.dec,#) as dec,ISNULL(s.eCoeff_#,#) as eCoeff_#,ISNULL(s.eCoeff_#,#) as eCoeff_#,ISNULL(s.fiberMag_g,#) as fiberMag_g,ISNULL(s.fiberMag_i,#) as fiberMag_i,ISNULL(s.fiberMag_r,#) as fiberMag_r,ISNULL(s.htmID,#) as htmID,ISNULL(s.loadVersion,#) as loadVersion,ISNULL(s.mag_#,#) as mag_#,ISNULL(s.objType,#) as objType,ISNULL(s.pixMax,#) as pixMax,ISNULL(s.plateID,#) as plateID,ISNULL(s.primTarget,#) as primTarget,ISNULL(s.sciencePrimary,#) as sciencePrimary,ISNULL(s.seguePrimTarget,#) as seguePrimTarget,ISNULL(s.segueSecTarget,#) as segueSecTarget,ISNULL(s.sm_leg_#,#) as sm_leg_#,ISNULL(s.sm_leg_#,#) as sm_leg_#,ISNULL(s.smear_sn,#) as smear_sn,ISNULL(s.sn_#,#) as sn_#,ISNULL(s.spectrographID,#) as spectrographID,ISNULL(s.targetID,#) as targetID,ISNULL(s.targetObjID,#) as targetObjID,ISNULL(s.throughput,#) as throughput,ISNULL(s.tile,#) as tile,ISNULL(s.velDisp,#) as velDisp,ISNULL(s.yFocal,#) as yFocal,ISNULL(s.zStatus,#) as zStatus FROM BESTDR7..PhotoObj AS p LEFT OUTER JOIN BESTDR7..SpecObj s ON p.objID = s.bestObjID 	JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = p.objID 	JOIN RunQA AS q ON q.fieldid = p.fieldid WHERE  p.u > UPbWJHfLMOUhNFgLszv AND p.g > JoLynlcOeNmKDqDg AND p.r > MYIwOAjRKwYzue AND p.i > KYEbPENP AND p.z > izVnZqDezhjhPUw AND p.u < YiScooOvvODOSlHa AND p.g < UHSszFZEANlHh AND p.r < jiTZbEoPLwzyAPD AND p.i < OpHuxjMy AND p.z < JsFJWpURk AND (p.u - p.g) > ZCwrnxWxwNqGLXoy AND (p.g - p.r) > lDnxoyEFeCZmIIPThi AND (p.r - p.i) > tNCzeKAN AND (p.i - p.z) > cwJMMUZwriBS AND (p.u - p.g) < eyzHjgLC AND (p.g - p.r) < InHhgkamV AND (p.r - p.i) < FGxZlnzLcjnIZ AND (p.i - p.z) < AlbzHUfKCqaRjFFo AND (q.fieldQall >= ednQfGpWGSL) AND ( p.type = # OR p.type = #) AND (p.flags & ( + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) = #) AND (p.flags & ( + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) > #)
select top #  z, ra, dec, bestObjID, vdisp from  specObj where  class = &&&   and z > #   and zWarning = #
select top #  z, ra, dec, bestObjID, stellarmass from  specObj where  class = &&&   and z > #   and zWarning = #
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec, passive.z as z_noqso, passive.zerr as z_noqso_err, passive.logmass as passive_logmass, starforming.logmass as starforming_logmass, pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid JOIN stellarMass AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
SELECT TOP # passive.fiberid as fiberID, passive.ra, passive.dec, passive.z as z_noqso, passive.zerr as z_noqso_err, passive.logmass as passive_logmass, starforming.logmass as starforming_logmass, pca.mstellar_median as pca_logmass  FROM stellarMassPassivePort AS passive JOIN stellarMassStarformingPort AS starforming ON passive.specobjid =  starforming.specobjid JOIN stellarMassPCAWisc AS pca ON passive.specobjid = pca.specobjid  WHERE passive.plate = # AND passive.mjd = # AND pca.warning=#
SELECT TOP # p.ra,p.dec,p.run,p.rerun,p.camCol,p.field,p.obj FROM BESTDR7..PhotoObj AS p 	JOIN #x AS x ON x.objID=p.objID JOIN #upload AS u ON u.up_id = x.up_id  WHERE  ( p.type = # OR p.type = #) ORDER BY x.up_id
select name, description from DBObjects where access=&&& and name like &&& or name like &&& and name not like &&& order by name
SELECT TOP # p.run,p.rerun,p.camCol,p.field,p.obj FROM BESTDR7..PhotoObj AS p 	JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = p.objID WHERE  ( p.type = # OR p.type = #)
SELECT TOP # p.run,p.rerun,p.camCol,p.field,p.obj,p.psfMag_u,p.psfMag_g,p.psfMag_r,p.psfMag_i,p.psfMag_z,p.psfMagErr_u,p.psfMagErr_g,p.psfMagErr_r,p.psfMagErr_i,p.psfMagErr_z,str(p.u - p.g,#,#) as ugModelColor,str(p.g - p.r,#,#) as grModelColor,str(p.r - p.i,#,#) as riModelColor,str(p.i - p.z,#,#) as izModelColor,str(p.u - p.g,#,#) as ugModelColor,str(p.g - p.r,#,#) as grModelColor,dbo.fIAUFromEq(p.ra,p.[dec]) as SDSSname,p.camcol,p.colc,p.colcErr_r,p.colcErr_u,p.colcErr_z,p.colv,p.colvErr,p.cz,p.dered_g,p.deVAB_u,p.deVABErr_i,p.deVABErr_r,p.deVABErr_z,p.deVMag_u,p.deVMagErr_g,p.deVMagErr_i,p.deVMagErr_r,p.deVMagErr_u,p.deVPhi_u,p.deVPhi_z,p.deVRad_i,p.deVRad_r,p.deVRadErr_z,p.err_r,p.err_u,p.expAB_g,p.expAB_u,p.expABErr_g,p.expABErr_r,p.expABErr_z,p.expMag_g,p.expMag_r,p.expMag_u,p.expMag_z,p.expMagErr_g,p.expMagErr_r,p.expPhi_i,p.expPhi_u,p.expPhiErr_g,p.expPhiErr_i,p.expPhiErr_z,p.expRad_g,p.expRad_i,p.expRad_r,p.expRad_z,p.expRadErr_r,p.expRadErr_u,p.expRadErr_z,p.extinction_g,p.extinction_r,p.extinction_z,p.fiberMag_i,p.fiberMag_r,p.fiberMag_u,p.fiberMag_z,p.fiberMagErr_g,p.fiberMagErr_i,p.fiberMagErr_r,p.fiberMagErr_u,p.fiberMagErr_z,p.fieldID,p.flags_g,p.flags_u,p.fracDeV_g,p.fracDeV_u,p.g,p.isoA_u,p.isoAErr_i,p.isoAErr_u,p.isoAErr_z,p.isoAGrad_g,p.isoAGrad_i,p.isoAGrad_r,p.isoB_i,p.isoB_u,p.isoB_z,p.isoBErr_g,p.isoBErr_i,p.isoBErr_z,p.isoBGrad_g,p.isoBGrad_u,p.isoColc_u,p.isoColc_z,p.isoColcErr_i,p.isoColcErr_u,p.isoColcErr_z,p.isoColcGrad_g,p.isoColcGrad_i,p.isoColcGrad_r,p.isoColcGrad_u,p.isoPhi_u,p.isoPhi_z,p.isoPhiErr_i,p.isoPhiErr_r,p.isoPhiErr_u,p.isoPhiErr_z,p.isoPhiGrad_g,p.isoPhiGrad_i,p.isoPhiGrad_r,p.isoRowcErr_i,p.isoRowcErr_u,p.isoRowcGrad_u,p.lnLDeV_i,p.lnLDeV_z,p.lnLExp_i,p.lnLStar_i,p.loadVersion,p.mCr4_g,p.mCr4_i,p.mCr4PSF_i,p.mCr4PSF_r,p.mCr4PSF_u,p.mE1_i,p.mE1_u,p.mE1E1Err_i,p.mE1E2Err_g,p.mE1E2Err_i,p.mE1E2Err_z,p.mE1PSF_g,p.mE1PSF_i,p.mE1PSF_u,p.mE2_g,p.mE2_i,p.mE2E2Err_i,p.mE2E2Err_r,p.mE2E2Err_u,p.mE2PSF_g,p.mE2PSF_r,p.modelMag_g,p.modelMagErr_g,p.modelMagErr_z,p.mRrCc_g,p.mRrCc_i,p.mRrCc_r,p.mRrCcErr_i,p.mRrCcErr_u,p.mRrCcErr_z,p.mRrCcPSF_u,p.mRrCcPSF_z,p.nChild,p.nProf_g,p.nProf_z,p.offsetDec_g,p.offsetDec_i,p.offsetDec_r,p.offsetDec_u,p.offsetDec_z,p.offsetRa_r,p.offsetRa_u,p.offsetRa_z,p.parentID,p.petroMag_g,p.petroMag_u,p.petroMag_z,p.petroMagErr_i,p.petroMagErr_r,p.petroMagErr_u,p.petroMagErr_z,p.petroR5#_u,p.petroR5#_z,p.petroR5#Err_i,p.petroR9#_i,p.petroR9#_u,p.petroR9#_z,p.petroRad_g,p.petroRad_i,p.petroRadErr_g,p.petroRadErr_i,p.petroRadErr_r,p.primTarget,p.priority,p.probPSF_i,p.probPSF_u,p.probPSF_z,p.q_i,p.q_u,p.qErr_g,p.qErr_i,p.qErr_z,p.r,str(p.ra,#,#) as ra,p.rho,p.rowc_r,p.rowcErr,p.rowcErr_i,p.rowvErr,p.skyErr_i,p.skyErr_u,p.skyVersion,p.texture_i,p.type_g,p.u_g,p.uErr_i,p.uErr_z,p.z,ISNULL(str(s.ra,#,#),#) as ra,ISNULL(str(s.[dec],#,#),#) as dec,ISNULL(s.cy,#) as cy,ISNULL(s.dec,#) as dec,ISNULL(s.eCoeff_#,#) as eCoeff_#,ISNULL(s.eCoeff_#,#) as eCoeff_#,ISNULL(s.eCoeff_#,#) as eCoeff_#,ISNULL(s.fiberMag_g,#) as fiberMag_g,ISNULL(s.fiberMag_i,#) as fiberMag_i,ISNULL(s.fiberMag_u,#) as fiberMag_u,ISNULL(s.fiberMag_z,#) as fiberMag_z,ISNULL(s.img,#) as img,ISNULL(s.loadVersion,#) as loadVersion,ISNULL(s.mag_#,#) as mag_#,ISNULL(s.objTypeName,#) as objTypeName,ISNULL(s.plate,#) as plate,ISNULL(s.plateID,#) as plateID,ISNULL(s.primTarget,#) as primTarget,ISNULL(s.secTarget,#) as secTarget,ISNULL(s.sm_leg_#,#) as sm_leg_#,ISNULL(s.smear_sn,#) as smear_sn,ISNULL(s.sn_#,#) as sn_#,ISNULL(s.sn_#,#) as sn_#,ISNULL(s.specClass,#) as specClass,ISNULL(s.specObjID,#) as specObjID,ISNULL(s.targetID,#) as targetID,ISNULL(s.targetObjID,#) as targetObjID,ISNULL(s.xFocal,#) as xFocal,ISNULL(s.zConf,#) as zConf,ISNULL(s.zErr,#) as zErr, &&& as filter FROM dbo.fGetNearbyObjEq(#,#,#) as b,  BESTDR2..PhotoObj as p LEFT OUTER JOIN BESTDR2..SpecObj s ON p.objID = s.bestObjID WHERE b.objID = p.objID AND p.u > ntbnLLLQFjU AND p.g > IJDABTRPNoQq AND p.r > tCZmULeySFCecqq AND p.i > NhCoAWCrl AND p.z > wrjhuLwMMhDhQZ AND p.u < SGxtMFXC AND p.g < GiWcZVqntG AND p.r < GcvvkNOuPp AND p.i < IFxINYNBpwcBFnpV AND p.z < anhcMBCSwPQug AND (p.u - p.g) > eykZEkdfRF AND (p.g - p.r) > jqRNiZeMJewPdf AND (p.r - p.i) > CSVzbbtoXnaONVwYbUp AND (p.i - p.z) > QsoyVOcurPLJM AND (p.u - p.g) < gZrIxipce AND (p.g - p.r) < RLjoJFoZ AND (p.r - p.i) < hUPJpzzxZMjCVlg AND (p.i - p.z) < TegfcnDasBIjCiS AND ( p.type = # OR p.type = #) AND (p.flags & ( + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) = #) AND (p.flags & ( + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&) + dbo.fPhotoFlags(&&&)) > #)
select Z.z, Z.zErr, Z.photoErrorClass, O.objID, O.ra, O.dec, O.cModelMag_r into mydb.DR1#_NW_better from PhotoObjAll as O, Photoz as Z where Z.objID = O.objID   AND O.ra BETWEEN # AND #   AND O.dec BETWEEN # AND #   AND O.type = #   AND Z.z > #   AND O.insideMask = #   AND photoErrorClass = #
select Z.z, Z.zErr, Z.photoErrorClass, O.objID, O.ra, O.dec, O.cModelMag_r into mydb.DR1#_NW from PhotoObjAll as O, Photoz as Z where Z.objID = O.objID   AND O.ra BETWEEN # AND #   AND O.dec BETWEEN # AND #   AND O.type = #   AND Z.z > #   AND O.insideMask = #   AND photoErrorClass = #
SELECT DISTINCT survey, programname FROM platex ORDER BY survey ,#,,# #,#,#,#,#,#,#,#/#/# #:#:# PM,#,#.#,skyserver.sdss.org,SDSS3S,BestDR1#,public,#,#,#,SELECT DISTINCT survey
SELECT DISTINCT survey, programname FROM platex ORDER BY survey &&&#
SELECT DISTINCT survey, programname FROM platex ORDER BY survey &&&#&&&#
SELECT DISTINCT survey, programname FROM platex ORDER BY survey
SELECT DISTINCT survey, programname FROM platex ORDER BY survey '#=A
select * from zooMirrorBias where objid=#
SELECT g.objid,g.ra,g.dec,p.z,p.zErr,q.u,q.g,q.r,q.i,q.z FROM GALAXY as g JOIN PhotoZ as p ON p.objID = g.ObjID JOIN PhotoObjAll as q ON q.objID = g.objID WHERE (g.ra between # and #) and (g.dec between # and #)
SELECT g.objID, g.ra, g.dec, q.z, q.zErr, q.class, q.subclass FROM GALAXY as g, SpecObjAll as q WHERE g.objID = q.bestObjID and (g.ra between # and #) and (g.dec between # and #)
SELECT TOP # &&& + cast(p.objId as varchar(#)) +&&& + cast(p.objId as varchar(#)) + &&& as objID,  p.run, p.rerun, p.camcol, p.field, p.obj,  p.type, p.ra, p.dec, p.u,p.g,p.r,p.i,p.z,  p.Err_u, p.Err_g, p.Err_r,p.Err_i,p.Err_z  FROM fGetNearbyObjEq(#,#,#) n, PhotoPrimary p  WHERE n.objID=p.objID AND p.u between # AND # AND p.g between # AND #
SELECT top # teff, logg FROM dbo.aspcapStar WHERE teff < # AND teff > #
SELECT top # *
SELECT top #
select * from zoo2MainSpecz where dr8objid=#
select p.run, p.camcol, p.field from STAR as p   inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
SELECT mangaID,manga_tileid,ifudesignsize  FROM mangatarget  WHERE (manga_target1 & (power(#,#)) != #) AND manga_tileid > # AND IFUDESIGNSIZE > #
select top # * from [SDSSphotDR1#_WISExmatch]
select * from cycles_sd1 where area># and circumference># and snapnum=# order by snapnum desc
select * from cycles_sd1 where area># and circumference># order by snapnum desc
select * from cycles_sd1 where area># and circumference>#order by snapnum desc
select * from cycles_sd1 order by snapnum desc
select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_SD1  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_SD1 e   ,    FragData.nodes_SD1 n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle insert into dbo.Cycles_SD1 select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges   from pos   ,    cycleEdges_SD1 ce   ,    FragData.DirectedEdges_SD1 de   ,    FragData.nodes_SD1 n1   ,    FragData.nodes_SD1 n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum
select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_SD1  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_SD1 e   ,    FragData.nodes_SD1 n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges into FragData.Cycles_SD1   from pos   ,    cycleEdges_SD1 ce   ,    FragData.DirectedEdges_SD1 de   ,    FragData.nodes_SD1 n1   ,    FragData.nodes_SD1 n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum
select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_SD1  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_SD1 e   ,    FragData.nodes_SD1 n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges into Cycles_SD1   from pos   ,    cycleEdges_SD1 ce   ,    FragData.DirectedEdges_SD1 de   ,    FragData.nodes_SD1 n1   ,    FragData.nodes_SD1 n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum
select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_SD1  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_SD1 e   ,    FragData.nodes_SD1 n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges -- into Cycles_SD1   from pos   ,    cycleEdges_SD1 ce   ,    FragData.DirectedEdges_SD1 de   ,    FragData.nodes_SD1 n1   ,    FragData.nodes_SD1 n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum
select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_SD1  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_SD1e   ,    FragData.nodes_SD1 n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges -- into Cycles_SD1   from pos   ,    cycleEdges_SD1 ce   ,    FragData.DirectedEdges_SD1 de   ,    FragData.nodes_SD1 n1   ,    FragData.nodes_SD1 n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum
select * from MyDB.CycleEdges_SD1
SELECT *                       FROM INFORMATION_SCHEMA.TABLES                       WHERE TABLE_NAME = &&&))     BEGIN     drop table CycleEdges_SD1     END      CREATE TABLE CycleEdges_SD1 (cycleRootId integer, snapnum smallint, rankInCycle integer, elementId integer, edgeRank tinyint)
select c.*     , n1.x as x1,n1.y as y1     , n2.x as x2,n2.y as y2     from cracks_SD1 c     ,    nodes_SD1 n1     ,    nodes_SD1 n2     where c.snapnum=#     and n1.snapnum=c.snapnum     and n1.nodeid=c.node1     and n2.snapnum=c.snapnum     and n2.nodeid=c.node2
select top # p.objid, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)  and (p.i BETWEEN # AND #)  and (p.z BETWEEN # AND #)  and (p.u-p.g BETWEEN # AND #) and clean=#  and (p.g-p.r BETWEEN # AND #), and clean=#  and (p.r-p.i BETWEEN # AND #)  and (p.i-p.z BETWEEN # AND #)  and (p.u-p.r BETWEEN # AND #)
select top # p.objid as name, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #) and (p.g BETWEEN # AND #) and (p.r BETWEEN # AND #) and (p.i BETWEEN # AND #) and (p.z BETWEEN # AND #) and (p.u-p.g BETWEEN # AND #) and clean=# and (p.g-p.r BETWEEN # AND #) and (p.r-p.i BETWEEN # AND #) and (p.i-p.z BETWEEN # AND #) and (p.u-p.r BETWEEN # AND #)
select top # p.objid, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)  and (p.i BETWEEN # AND #)  and (p.z BETWEEN # AND #)  and (p.u-p.g BETWEEN # AND #) and clean=#  and (p.g-p.r BETWEEN # AND #)  and (p.r-p.i BETWEEN # AND #)  and (p.i-p.z BETWEEN # AND #)  and (p.u-p.r BETWEEN # AND #)
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.fracDeV_r  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
SELECT up_id,  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) as objId   FROM #upload  WHERE  dbo.fGetNearestObjIdEq( up_ra,up_dec,up_sep ) IS NOT NULL  SELECT TOP #   p.ra,p.dec, p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN #x AS x ON x.objID=p.objID  JOIN #upload AS u ON u.up_id = x.up_id   WHERE  ( p.type = # OR p.type = #)   ORDER BY x.up_id
select top # p.objid, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.r BETWEEN # AND #)  and (p.i BETWEEN # AND #)  and (p.z BETWEEN # AND #)  and (p.u-p.g BETWEEN # AND #)  and (p.g-p.r BETWEEN # AND #)  and (p.r-p.i BETWEEN # AND #)  and (p.i-p.z BETWEEN # AND #)  and (p.u-p.r BETWEEN # AND #)
select distinct p.run,p.rerun,p.camcol,p.field from dbo.fGetNearbyObjeq(#,#,#) p
select p.run,p.rerun,p.camcol,p.field, g.colc, g.rowc, g.petroR9#_r from dbo.fGetNearestObjEq(#,#,#) p, PhotoObjAll g where p.run=g.run and p.rerun=g.rerun and p.camcol=g.camcol and p.field=g.field and p.objid=g.objid and p.rerun>#
INSERT INTO #upload values
select top # p.objid, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.u-p.g BETWEEN # AND #)  and (p.g-p.r BETWEEN # AND #) and clean=#
select top # p.objid, p.ra, p.dec from photoobj p where (p.u BETWEEN # AND #)  and (p.g BETWEEN # AND #)  and (p.u-p.g BETWEEN # AND #)  and (p.g-p.r BETWEEN # AND #)and clean=#
SELECT TOP #  p.run,p.rerun,p.camCol,p.field,p.obj  FROM ..PhotoObj AS p  JOIN dbo.fGetNearbyObjEq(#,#,#) AS b ON b.objID = P.objID  WHERE ( p.type = # OR p.type = #)
select p.ObjID, p.ra, p.dec, p.u, p.Err_u, p.g, p.Err_g, p.r, p.Err_r, p.i,p.Err_i, p.z, p.Err_z from photoObj p, dbo.fGetNearbyObjEq(#,#,#) n where p.objID = n.objID AND p.type = #
SELECT *                       FROM INFORMATION_SCHEMA.TABLES                       WHERE TABLE_NAME = &&&))     BEGIN     drop table loading.CycleEdges_SD1     END      CREATE TABLE loading.CycleEdges_SD1 (cycleRootId integer, snapnum smallint, rankInCycle integer, elementId integer, edgeRank tinyint)
select * from information_schema.tables order by table_schema desc
create schema loading
select * from information_schema.tables order by table_schema.desc
select * from information_schema.tables
SELECT TOP #  p.objid,p.ra,p.dec,p.u,p.g,p.r,p.i,p.z,  p.run, p.rerun, p.camcol, p.field,  s.specobjid, s.class, s.z,  s.plate, s.mjd, s.fiberid FROM PhotoObj AS p  JOIN SpecObj AS s ON s.bestobjid = p.objid WHERE   p.u BETWEEN # AND #  AND g BETWEEN # AND #
select * from fragdataloading.dbo.test
select * from fragdataloading..test
select * from fragdataloading.information_schema.tables
create table fragdataloading.test(id bigint)
create table fragdataloading..test(id bigint)
select * from batch.servers where target =&&&
select top # p.objid, p.ra, p.dec from photoobj p
select # p.objid, p.ra, p.dec, p.petroMag_u, p.petroMag_g, p.petroMag_r, p.petroMag_i, p.petroMag_z, s.z as redshift,m.K_M_K2#FE,dbo.fPhotoFlagsN(flags) as flag,p.run,p.rerun,p.camCol,p.field,p.obj   from galaxy p  join specobj as s on s.bestobjid=p.objid  join twomassxsc as m on m.objid=p.objid  where p.objid=s.bestobjid  and s.z between # and #  and m.K_M_K2#FE between # and #  and m.cc_flg=&&&
SELECT * FROM RM_BCG_OUTPUTDR1#
SELECT ra_BCG, dec_BCG, objID_BCG FROM MyDB.RM_BCG_INPUT  OPEN my_cursor  WHILE(#=#) BEGIN   FETCH NEXT from my_cursor into  @ra_BCG, @dec_BCG, @objID_BCG     IF (@@fetch_status < #) break      INSERT MYDB.RM_BCG_OUTPUTDR1#      SELECT  @ra_BCG, @dec_BCG, @objID_BCG,                p.ra, p.dec,p.objID,         p.devRad_u, p.deVRad_g, p.deVRad_r, p.deVRad_i, p.deVRad_z, p.deVRadErr_u, p.deVRadErr_g, p.deVRadErr_r, p.deVRadErr_i,        p.deVRadErr_z, p.expRad_u, p.expRad_g, p.expRad_r, p.expRad_i, p.expRad_z, p.expRadErr_u, p.expRadErr_g, p.expRadErr_r,         p.expRadErr_i, p.expRadErr_z,        p.dered_u, p.dered_g, p.dered_r, p.dered_i, p.dered_z,         p.err_u, p.err_g, p.err_r, p.err_i, p.err_z,                                             ISNULL(z.absMagU,#)as Mu,ISNULL(z.absMagG,#)as Mg,             ISNULL(z.absMagR,#)as Mr, ISNULL(z.absMagI,#)as Mi,             ISNULL(z.absMagZ,#)as Mz,                ISNULL(z.z,#) as zp, ISNULL(z.zErr,#) as err_zp,             ISNULL(s.z,#) as zs, ISNULL(s.zErr,#) as err_zs,                ISNULL(s.velDisp,#) as velDisp, ISNULL(s.velDispErr,#) as velDispErr,             ISNULL(s.class,#), ISNULL(s.instrument,#)               FROM   dbo.fGetNearestObjEq(@ra_BCG,@dec_BCG,#/#) n, Galaxy p      JOIN Photoz  As z ON z.objid=p.objid   JOIN SpecObj AS s ON s.bestobjid = p.objid         WHERE n.objid=p.objid          END  CLOSE my_cursor DEALLOCATE my_cursor
CREATE TABLE RM_BCG_OUTPUTDR1#(  ra_BCG       float  not null,  dec_BCG       float  not null,  objID_BCG     bigint not null,  ra       float  not null,  dec       float  not null,  objID     bigint not null,   deVRad_u  real   not null,   deVRad_g  real   not null,   deVRad_r  real   not null,   deVRad_i  real   not null,   deVRad_z  real   not null,   deVRadErr_u  real   not null,   deVRadErr_g  real   not null,   deVRadErr_r  real   not null,   deVRadErr_i  real   not null,   deVRadErr_z  real   not null,   expRad_u  real   not null,   expRad_g  real   not null,   expRad_r  real   not null,   expRad_i  real   not null,   expRad_z  real   not null,   expRadErr_u  real   not null,   expRadErr_g  real   not null,   expRadErr_r  real   not null,   expRadErr_i  real   not null,   expRadErr_z  real   not null,   dered_u  real  not null,   dered_g  real  not null,   dered_r real  not null,   dered_i  real  not null,   dered_z  real  not null,   err_u  real  not null,   err_g  real  not null,   err_r  real  not null,   err_i  real  not null,   err_z  real  not null,   absMagU  real   not null,   absMagG  real   not null,   absMagR  real   not null,   absMagI  real   not null,   absMagZ  real   not null,   zp  real   not null,   zpErr  real   not null,   z  real   not null,   zErr  real   not null,   velDisp  real   not null,   velDispErr  real   not null,   class          varchar(#) not null,  instrument     varchar(#) not null       );
select * from zoo2MainPhotoz where dr8objid=#
select p.objid, p.ra, p.dec, p.g, p.r from photoObj p join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid join specObj s on p.objid=s.bestobjid where p.petrorad_r > # and p.r < # and s.Class= &&& and s.z >= #
select p.objid, p.ra, p.dec, p.g, p.r  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select p.objid, p.ra, p.dec, p.g, p.r  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select p.run, p.camcol, p.field from STAR as p inner join dbo.fGetNearbyObjEq(#,#,#) as N on p.objid = N.objid
select p.objid, p.ra, p.dec, p.g, p.r, p.petrorad_r, s.z  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select p.ra, p.dec, p.g, p.r, p.petrorad_r, s.z  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, p.petrorad_r, s.z  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select TOP # count p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, p.petrorad_r, s.z  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
select TOP # p.objid, p.ra, p.dec, p.u, p.g, p.r, p.i, p.z, p.petrorad_r, s.z  from photoObj p  join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid  join specObj s on p.objid=s.bestobjid  where p.petrorad_r > # and p.r < #  and s.Class= &&&  and s.z >= #
SELECT TOP # plateifu,   mangaid, objra, objdec, mngtarg1, drp3qual  FROM mangadrpall  WHERE  (((mngtarg1 & (power(#,#)+power(#,#))) != #)   and ((drp3qual & power(#,#)) = #))
select ra,dec,mjd,plate,fiberID,specObjID,cModelMag_g,cModelMag_r,cModelMag_i,cModelMagErr_g,cModelMagErr_r,cModelMagErr_i,extinction_g,extinction_r,extinction_i from SpecPhoto where ra BETWEEN # and # AND dec BETWEEN # and #
select name, description from DBObjects where access=&&& and type=&&&A=#' order by name
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.class=&&&                and s.z >= #
select ra,dec,mjd,plate,fiberID,specObjID,z,zErr,class from specObj where ra BETWEEN # and # AND dec BETWEEN # and #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.sClass=&&&                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.Class=&&&                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.specClass=GALAXY                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.specClass=GALAXY'                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.class= &&&                and s.z >= #
select p.objid as name, p.ra, p.dec                from photoObj p                join dbo.fgetnearbyobjeq(#,#,#) n on p.objid=n.objid                join specObj s on p.objid=s.bestobjid                where p.petrorad_r > # and p.r < #                and s.Class= &&&                and s.z >= #
SELECT objID, ra, dec, psfMag_u, psfMag_g, psfMag_r, psfMag_i, psfMag_z from Star WHERE ra BETWEEN # AND #  AND dec BETWEEN # and #
SELECT * FROM SDSSphotDR1#_WISExmatch
SELECT  	po.objid AS phot_id, po.ra AS phot_ra, po.dec AS phot_dec,  	ISNULL(pz.z, #) AS phot_z, ISNULL(pz.zerr, #) AS phot_zerr,  	po.type AS phot_type, po.ndetect AS phot_ndet,  	ISNULL(sp.specobjid, #) AS spec_id, ISNULL(sp.ra, #) AS spec_ra, ISNULL(sp.dec, #) AS spec_dec, 	ISNULL(sp.z, #) AS spec_z, ISNULL(sp.zerr, #) AS spec_zerr,  	ISNULL(sp.class, #) AS spec_class, ISNULL(sp.instrument, #) AS spec_inst,  	po.cmodelmag_u AS cmodmag_u, po.cmodelmagerr_u AS cmoderr_u, po.fibermag_u AS fib3mag_u, po.fiber2mag_u AS fib2mag_u, po.extinction_u AS extinct_u,  	po.cmodelmag_g AS cmodmag_g, po.cmodelmagerr_g AS cmoderr_g, po.fibermag_g AS fib3mag_g, po.fiber2mag_g AS fib2mag_g, po.extinction_g AS extinct_g,  	po.cmodelmag_r AS cmodmag_r, po.cmodelmagerr_r AS cmoderr_r, po.fibermag_r AS fib3mag_r, po.fiber2mag_r AS fib2mag_r, po.extinction_r AS extinct_r,  	po.cmodelmag_i AS cmodmag_i, po.cmodelmagerr_i AS cmoderr_i, po.fibermag_i AS fib3mag_i, po.fiber2mag_i AS fib2mag_i, po.extinction_i AS extinct_i,  	po.cmodelmag_z AS cmodmag_z, po.cmodelmagerr_z AS cmoderr_z, po.fibermag_z AS fib3mag_z, po.fiber2mag_z AS fib2mag_z, po.extinction_z AS extinct_z, 	wx.wise_cntr AS wise_id, wa.ra AS wise_ra, wa.dec AS wise_dec, wx.match_dist AS wise_dist, 	wa.w1mpro AS wise_mag_w1, wa.w1sigmpro AS wise_sig_w1, wa.w1snr AS wise_snr_w1,  	wa.w2mpro AS wise_mag_w2, wa.w2sigmpro AS wise_sig_w2, wa.w2snr AS wise_snr_w2,  	wa.w3mpro AS wise_mag_w3, wa.w3sigmpro AS wise_sig_w3, wa.w3snr AS wise_snr_w3,  	wa.w4mpro AS wise_mag_w4, wa.w4sigmpro AS wise_sig_w4, wa.w4snr AS wise_snr_w4,  	ISNULL(tm.j_m_k2#fe, #) AS tmass_mag_j, ISNULL(tm.j_msig_k2#fe, #) AS tmass_sig_j, 	ISNULL(tm.h_m_k2#fe, #) AS tmass_mag_h, ISNULL(tm.h_msig_k2#fe, #) AS tmass_sig_h, 	ISNULL(tm.k_m_k2#fe, #) AS tmass_mag_k, ISNULL(tm.k_msig_k2#fe, #) AS tmass_sig_k, 	ISNULL(ft.peak, #) AS first_peak, ISNULL(ft.rms, #) AS first_rms   INTO MyDB.SDSSphotDR1#_WISExmatch FROM PhotoPrimary po  	LEFT OUTER JOIN Photoz      pz ON pz.objid      = po.objid 	LEFT OUTER JOIN SpecObj     sp ON sp.bestobjid  = po.objid 	     INNER JOIN WISE_xmatch wx ON wx.sdss_objid = po.objid 	     INNER JOIN WISE_allsky wa ON wa.cntr       = wx.wise_cntr 	LEFT OUTER JOIN TwoMassXSC  tm ON tm.objid      = po.objid 	LEFT OUTER JOIN FIRST       ft ON ft.objid      = po.objid      WHERE ( wa.w1snr >= # AND wa.w2snr >= # AND wa.w3snr >= # AND wa.w4snr >= # )              ORDER BY phot_id
SELECT  	po.objid AS phot_id, po.ra AS phot_ra, po.dec AS phot_dec,  	ISNULL(pz.z, #) AS phot_z, ISNULL(pz.zerr, #) AS phot_zerr,  	po.type AS phot_type, po.ndetect AS phot_ndet,  	ISNULL(sp.specobjid, #) AS spec_id, ISNULL(sp.ra, #) AS spec_ra, ISNULL(sp.dec, #) AS spec_dec, 	ISNULL(sp.z, #) AS spec_z, ISNULL(sp.zerr, #) AS spec_zerr,  	ISNULL(sp.class, #) AS spec_class, ISNULL(sp.instrument, #) AS spec_inst,  	po.cmodelmag_u AS cmodmag_u, po.cmodelmagerr_u AS cmoderr_u, po.fibermag_u AS fib3mag_u, po.fiber2mag_u AS fib2mag_u, po.extinction_u AS extinct_u,  	po.cmodelmag_g AS cmodmag_g, po.cmodelmagerr_g AS cmoderr_g, po.fibermag_g AS fib3mag_g, po.fiber2mag_g AS fib2mag_g, po.extinction_g AS extinct_g,  	po.cmodelmag_r AS cmodmag_r, po.cmodelmagerr_r AS cmoderr_r, po.fibermag_r AS fib3mag_r, po.fiber2mag_r AS fib2mag_r, po.extinction_r AS extinct_r,  	po.cmodelmag_i AS cmodmag_i, po.cmodelmagerr_i AS cmoderr_i, po.fibermag_i AS fib3mag_i, po.fiber2mag_i AS fib2mag_i, po.extinction_i AS extinct_i,  	po.cmodelmag_z AS cmodmag_z, po.cmodelmagerr_z AS cmoderr_z, po.fibermag_z AS fib3mag_z, po.fiber2mag_z AS fib2mag_z, po.extinction_z AS extinct_z, 	wx.wise_cntr AS wise_id, wa.ra AS wise_ra, wa.dec AS wise_dec, wx.match_dist AS wise_dist, 	wa.w1mpro AS wise_mag_w1, wa.w1sigmpro AS wise_sig_w1, wa.w1snr AS wise_snr_w1,  	wa.w2mpro AS wise_mag_w2, wa.w2sigmpro AS wise_sig_w2, wa.w2snr AS wise_snr_w2,  	wa.w3mpro AS wise_mag_w3, wa.w3sigmpro AS wise_sig_w3, wa.w3snr AS wise_snr_w3,  	wa.w4mpro AS wise_mag_w4, wa.w4sigmpro AS wise_sig_w4, wa.w4snr AS wise_snr_w4,  	ISNULL(tm.j_m_k2#fe, #) AS tmass_mag_j, ISNULL(tm.j_msig_k2#fe, #) AS tmass_sig_j, 	ISNULL(tm.h_m_k2#fe, #) AS tmass_mag_h, ISNULL(tm.h_msig_k2#fe, #) AS tmass_sig_h, 	ISNULL(tm.k_m_k2#fe, #) AS tmass_mag_k, ISNULL(tm.k_msig_k2#fe, #) AS tmass_sig_k, 	ISNULL(ft.peak, #) AS first_peak, ISNULL(ft.rms, #) AS first_rms   INTO MyDB.SDSSphotDR1#_WISExmatch FROM PhotoPrimary po  	LEFT OUTER JOIN Photoz      pz ON pz.objid      = po.objid 	LEFT OUTER JOIN SpecObj     sp ON sp.bestobjid  = po.objid 	     INNER JOIN WISE_xmatch wx ON wx.sdss_objid = po.objid 	     INNER JOIN WISE_allsky wa ON wa.cntr       = wx.wise_cntr 	LEFT OUTER JOIN TwoMassXSC  tm ON tm.objid      = po.objid 	LEFT OUTER JOIN FIRST       ft ON ft.objid      = po.objid      WHERE ( wa.w1snr >= # AND wa.w2snr >= # AND wa.w3snr >= # AND wa.w4snr >= # )              ORDER BY phot_idSELECT  	po.objid AS phot_id, po.ra AS phot_ra, po.dec AS phot_dec,  	IFNULL(pz.z, #) AS phot_z, IFNULL(pz.zerr, #) AS phot_zerr,  	po.type AS phot_type, po.ndetect AS phot_ndet,  	IFNULL(sp.specobjid, #) AS spec_id, IFNULL(sp.ra, #) AS spec_ra, IFNULL(sp.dec, #) AS spec_dec, 	IFNULL(sp.z, #) AS spec_z, IFNULL(sp.zerr, #) AS spec_zerr,  	IFNULL(sp.class, #) AS spec_class, IFNULL(sp.instrument, #) AS spec_inst,  	po.cmodelmag_u AS cmodmag_u, po.cmodelmagerr_u AS cmoderr_u, po.fibermag_u AS fib3mag_u, po.fiber2mag_u AS fib2mag_u, po.extinction_u AS extinct_u,  	po.cmodelmag_g AS cmodmag_g, po.cmodelmagerr_g AS cmoderr_g, po.fibermag_g AS fib3mag_g, po.fiber2mag_g AS fib2mag_g, po.extinction_g AS extinct_g,  	po.cmodelmag_r AS cmodmag_r, po.cmodelmagerr_r AS cmoderr_r, po.fibermag_r AS fib3mag_r, po.fiber2mag_r AS fib2mag_r, po.extinction_r AS extinct_r,  	po.cmodelmag_i AS cmodmag_i, po.cmodelmagerr_i AS cmoderr_i, po.fibermag_i AS fib3mag_i, po.fiber2mag_i AS fib2mag_i, po.extinction_i AS extinct_i,  	po.cmodelmag_z AS cmodmag_z, po.cmodelmagerr_z AS cmoderr_z, po.fibermag_z AS fib3mag_z, po.fiber2mag_z AS fib2mag_z, po.extinction_z AS extinct_z, 	wx.wise_cntr AS wise_id, wa.ra AS wise_ra, wa.dec AS wise_dec, wx.match_dist AS wise_dist, 	wa.w1mpro AS wise_mag_w1, wa.w1sigmpro AS wise_sig_w1, wa.w1snr AS wise_snr_w1,  	wa.w2mpro AS wise_mag_w2, wa.w2sigmpro AS wise_sig_w2, wa.w2snr AS wise_snr_w2,  	wa.w3mpro AS wise_mag_w3, wa.w3sigmpro
SELECT  	po.objid AS phot_id, po.ra AS phot_ra, po.dec AS phot_dec,  	IFNULL(pz.z, #) AS phot_z, IFNULL(pz.zerr, #) AS phot_zerr,  	po.type AS phot_type, po.ndetect AS phot_ndet,  	IFNULL(sp.specobjid, #) AS spec_id, IFNULL(sp.ra, #) AS spec_ra, IFNULL(sp.dec, #) AS spec_dec, 	IFNULL(sp.z, #) AS spec_z, IFNULL(sp.zerr, #) AS spec_zerr,  	IFNULL(sp.class, #) AS spec_class, IFNULL(sp.instrument, #) AS spec_inst,  	po.cmodelmag_u AS cmodmag_u, po.cmodelmagerr_u AS cmoderr_u, po.fibermag_u AS fib3mag_u, po.fiber2mag_u AS fib2mag_u, po.extinction_u AS extinct_u,  	po.cmodelmag_g AS cmodmag_g, po.cmodelmagerr_g AS cmoderr_g, po.fibermag_g AS fib3mag_g, po.fiber2mag_g AS fib2mag_g, po.extinction_g AS extinct_g,  	po.cmodelmag_r AS cmodmag_r, po.cmodelmagerr_r AS cmoderr_r, po.fibermag_r AS fib3mag_r, po.fiber2mag_r AS fib2mag_r, po.extinction_r AS extinct_r,  	po.cmodelmag_i AS cmodmag_i, po.cmodelmagerr_i AS cmoderr_i, po.fibermag_i AS fib3mag_i, po.fiber2mag_i AS fib2mag_i, po.extinction_i AS extinct_i,  	po.cmodelmag_z AS cmodmag_z, po.cmodelmagerr_z AS cmoderr_z, po.fibermag_z AS fib3mag_z, po.fiber2mag_z AS fib2mag_z, po.extinction_z AS extinct_z, 	wx.wise_cntr AS wise_id, wa.ra AS wise_ra, wa.dec AS wise_dec, wx.match_dist AS wise_dist, 	wa.w1mpro AS wise_mag_w1, wa.w1sigmpro AS wise_sig_w1, wa.w1snr AS wise_snr_w1,  	wa.w2mpro AS wise_mag_w2, wa.w2sigmpro AS wise_sig_w2, wa.w2snr AS wise_snr_w2,  	wa.w3mpro AS wise_mag_w3, wa.w3sigmpro AS wise_sig_w3, wa.w3snr AS wise_snr_w3,  	wa.w4mpro AS wise_mag_w4, wa.w4sigmpro AS wise_sig_w4, wa.w4snr AS wise_snr_w4,  	IFNULL(tm.j_m_k2#fe, #) AS tmass_mag_j, IFNULL(tm.j_msig_k2#fe, #) AS tmass_sig_j, 	IFNULL(tm.h_m_k2#fe, #) AS tmass_mag_h, IFNULL(tm.h_msig_k2#fe, #) AS tmass_sig_h, 	IFNULL(tm.k_m_k2#fe, #) AS tmass_mag_k, IFNULL(tm.k_msig_k2#fe, #) AS tmass_sig_k, 	IFNULL(ft.peak, #) AS first_peak, IFNULL(ft.rms, #) AS first_rms   INTO MyDB.SDSSphotDR1#_WISExmatch FROM PhotoPrimary po  	LEFT OUTER JOIN Photoz      pz ON pz.objid      = po.objid 	LEFT OUTER JOIN SpecObj     sp ON sp.bestobjid  = po.objid 	     INNER JOIN WISE_xmatch wx ON wx.sdss_objid = po.objid 	     INNER JOIN WISE_allsky wa ON wa.cntr       = wx.wise_cntr 	LEFT OUTER JOIN TwoMassXSC  tm ON tm.objid      = po.objid 	LEFT OUTER JOIN FIRST       ft ON ft.objid      = po.objid      WHERE ( wa.w1snr >= # AND wa.w2snr >= # AND wa.w3snr >= # AND wa.w4snr >= # )              ORDER BY phot_id
select phot_z as xcol, spec_z as ycol from SDSSphotDR1#_WISExmatch
