18,"select cycleRootId, snapnum, min(elementId) as elementId   from CycleEdges_S0#  group by cycleRootId,snapnum ),  -- calculate CoM position of element pos as (     select ce.cycleRootId,ce.snapnum, ce.elementId     ,      avg(cast(n.x as float))  as x, avg(cast(n.y as float)) as y   from ce, FragData.directedEdges_S0# e   ,    FragData.nodes_S0# n  where e.snapnum = ce.snapnum    and e.elementId= ce.elementId    and n.nodeid= e.node1    and n.snapnum=ce.snapnum  group by ce.cycleRootId,ce.snapnum, ce.elementId  ) -- Calculate various properties of cycle -- #. rotationAngle from CoM position.  --    If ~#Pi -> element inside cycle, if ~#, outside -- #. area (from http://mathinsight.org/greens_theorem_find_area  --    applied to linesegments -- #. Circumeference: simple sum of length of edges -- #/#/#/#. Min/max X,Y (only node1 required as all nodes show up  --    once as node1, once as node2 -- #. Count(*): number of edges in cycle insert into dbo.Cycles_S0# select pos.cycleRootId, pos.snapnum     ,  sum(atn2(((n1.x-pos.x)*(n2.y-pos.y)-(n1.y-pos.y)*(n2.x-pos.x)),                   ((n1.x-pos.x)*(n2.x-pos.x)+(n1.y-pos.y)*(n2.y-pos.y))))                  as rotationAngle     ,  sum(n1.x*n2.y-n1.y*n2.x) as area     ,  sum(sqrt((n2.x-n1.x)*(n2.x-n1.x)+(n2.y-n1.y)*(n2.y-n1.y))) as circumference     ,  min(n1.x) as xmin, min(n1.y) as ymin     ,  max(n1.x) as xmax, max(n1.y) as ymax     , count(*) as numEdges   from pos   ,    cycleEdges_S0# ce   ,    FragData.DirectedEdges_S0# de   ,    FragData.nodes_S0# n1   ,    FragData.nodes_S0# n2  where ce.cycleRootId=pos.cycleRootId    and ce.snapnum=pos.snapnum    and de.elementId=ce.elementId    and de.snapnum=ce.snapnum    and de.edgeRank = ce.edgeRank    and n1.nodeId=de.node1    and n1.snapnum=de.snapnum    and n2.nodeId=de.node2    and n2.snapnum=de.snapnum  group by pos.cycleRootId,pos.snapnum"
2019-01-21 14:30:00,1
2019-01-21 14:32:00,1
2019-01-21 14:34:00,1
2019-01-21 14:35:00,2
2019-01-21 14:37:00,1
2019-01-21 14:38:00,1
2019-01-21 14:40:00,1
2019-01-21 14:47:00,1
2019-01-21 14:53:00,1
2019-01-21 15:03:00,1
2019-01-21 15:13:00,1
2019-01-21 17:36:00,1
2019-01-21 17:40:00,1
2019-01-21 17:48:00,1
2019-01-21 17:56:00,1
2019-01-21 18:00:00,1
2019-01-21 18:03:00,1
